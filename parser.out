Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BOOL
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FLOTANTE
    FOR
    GET
    IGUALIGUAL
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    MULTIGUAL
    NULL
    NUMERO
    OR
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SUPER
    UNDEFINED
    VOID
    WHILE

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracionVarSinAsig
Rule 4     instrucciones -> declaracionVar
Rule 5     instrucciones -> asignacion
Rule 6     instrucciones -> funcion
Rule 7     instrucciones -> expresion
Rule 8     instrucciones -> comparacion
Rule 9     instrucciones -> arreglo
Rule 10    instrucciones -> map
Rule 11    instrucciones -> if
Rule 12    instrucciones -> switch
Rule 13    instrucciones -> pop
Rule 14    instrucciones -> push
Rule 15    instrucciones -> mapSet
Rule 16    declaracionVarSinAsig -> VAR VARIABLE
Rule 17    declaracionVarSinAsig -> LET VARIABLE
Rule 18    declaracionVarSinAsig -> CONST VARIABLE
Rule 19    declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA
Rule 20    declaracionVarSinAsig -> LET VARIABLE FINALDELINEA
Rule 21    declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA
Rule 22    declaracionVar -> VAR VARIABLE IGUAL tipo
Rule 23    declaracionVar -> LET VARIABLE IGUAL tipo
Rule 24    declaracionVar -> CONST VARIABLE IGUAL tipo
Rule 25    declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA
Rule 26    declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA
Rule 27    declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA
Rule 28    asignacion -> VARIABLE operadoresAsig tipo
Rule 29    asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA
Rule 30    operadoresAsig -> IGUAL
Rule 31    operadoresAsig -> MASIGUAL
Rule 32    operadoresAsig -> MENOSIGUAL
Rule 33    operadoresAsig -> DIVIGUAL
Rule 34    operadoresAsig -> MODIGUAL
Rule 35    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 36    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 37    tipo -> NUMBER
Rule 38    tipo -> STRING
Rule 39    tipo -> BOOLEAN
Rule 40    tipo -> BIGINT
Rule 41    tipo -> SYMBOL
Rule 42    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 43    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 44    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 45    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 46    casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 47    casos -> CASE tipo DOSPUNTOS
Rule 48    ncasos -> casos
Rule 49    ncasos -> casos ncasos
Rule 50    comparacion -> VARIABLE comparador VARIABLE
Rule 51    comparacion -> expresion comparador expresion
Rule 52    comparador -> MAYORQUE
Rule 53    comparador -> MENORQUE
Rule 54    comparador -> MAYORIGUALQUE
Rule 55    comparador -> MENORIGUALQUE
Rule 56    comparador -> NOIGUALQUE
Rule 57    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 58    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 59    lista -> lista COMA lista
Rule 60    lista -> STRING
Rule 61    lista -> SYMBOL
Rule 62    lista -> NUMBER
Rule 63    lista -> BIGINT
Rule 64    lista -> BOOLEAN
Rule 65    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 66    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 67    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 68    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 69    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 70    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 71    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 72    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 73    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
Rule 74    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
Rule 75    expresion -> expresion MAS term
Rule 76    expresion -> expresion MENOS term
Rule 77    expresion -> term
Rule 78    term -> term MULT factor
Rule 79    term -> term DIV factor
Rule 80    term -> factor
Rule 81    factor -> NUMBER
Rule 82    factor -> IZQPAREN expresion DERPAREN

Terminals, with rules where they appear

AND                  : 
AWAIT                : 
BIGINT               : 40 63
BOOL                 : 
BOOLEAN              : 39 64
BREAK                : 46
CASE                 : 46 47
CATCH                : 
CLASS                : 
COMA                 : 59 73 74
CONST                : 18 21 24 27 71 72
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 45
DELETE               : 
DERCORCHETE          : 57 58
DERLLAVE             : 35 36 42 43 44 44 45
DERPAREN             : 35 36 42 43 44 45 65 66 67 68 69 70 71 72 73 74 82
DIV                  : 79
DIVIGUAL             : 33
DO                   : 
DOSPUNTOS            : 45 46 47
ELSE                 : 44
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 19 20 21 25 26 27 29 46 65 66 68 70 72 74
FLOTANTE             : 
FOR                  : 
FUNCTION             : 35 36
GET                  : 
IF                   : 42 43 44
IGUAL                : 22 23 24 25 26 27 30 57 58 65 66 67 68 69 70 71 72
IGUALIGUAL           : 
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 57 58
IZQLLAVE             : 35 36 42 43 44 44 45
IZQPAREN             : 35 36 42 43 44 45 65 66 67 68 69 70 71 72 73 74 82
LET                  : 17 20 23 26 58 67 68
MAP                  : 67 68 69 70 71 72
MAPLOWER             : 73 74
MAS                  : 75
MASIGUAL             : 31
MAYORIGUALQUE        : 54
MAYORQUE             : 52
MENORIGUALQUE        : 55
MENORQUE             : 53
MENOS                : 76
MENOSIGUAL           : 32
MODIGUAL             : 34
MULT                 : 78
MULTIGUAL            : 
NEW                  : 67 68 69 70 71 72
NOIGUALQUE           : 56
NULL                 : 
NUMBER               : 37 62 81
NUMERO               : 
OR                   : 
PACKAGE              : 
POP                  : 65
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 65 66 73 74
PUSH                 : 66
RETURN               : 
SET                  : 73 74
STRING               : 38 60
SUPER                : 
SWITCH               : 45
SYMBOL               : 41 61
UNDEFINED            : 
VAR                  : 16 19 22 25 57 65 66 69 70
VARIABLE             : 16 17 18 19 20 21 22 23 24 25 26 27 28 29 35 35 36 45 50 50 57 58 65 65 66 66 67 68 69 70 71 72
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arreglo              : 9
asignacion           : 5 46
casos                : 48 49
comparacion          : 8 42 43 44
comparador           : 50 51
declaracionVar       : 4
declaracionVarSinAsig : 3
expresion            : 7 51 51 75 76 82
factor               : 78 79 80
funcion              : 6
if                   : 11 43
instrucciones        : 1 2
js                   : 2 35 36 42 43 44 44 45 0
lista                : 57 58 59 59 66
map                  : 10
mapSet               : 15
ncasos               : 45 49
operadoresAsig       : 28 29
pop                  : 13
push                 : 14
switch               : 12
term                 : 75 76 77 78 79
tipo                 : 22 23 24 25 26 27 28 29 46 47 73 73 74 74

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . VAR VARIABLE
    (17) declaracionVarSinAsig -> . LET VARIABLE
    (18) declaracionVarSinAsig -> . CONST VARIABLE
    (19) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (21) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (22) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (23) declaracionVar -> . LET VARIABLE IGUAL tipo
    (24) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (25) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (27) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (57) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (58) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (69) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (71) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (45) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (65) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (73) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 20
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . VAR VARIABLE
    (17) declaracionVarSinAsig -> . LET VARIABLE
    (18) declaracionVarSinAsig -> . CONST VARIABLE
    (19) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (21) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (22) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (23) declaracionVar -> . LET VARIABLE IGUAL tipo
    (24) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (25) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (27) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (57) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (58) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (69) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (71) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (45) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (65) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (73) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VAR             shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 20
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    instrucciones                  shift and go to state 2
    js                             shift and go to state 28
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 3

    (3) instrucciones -> declaracionVarSinAsig .

    VAR             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    LET             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    CONST           reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    VARIABLE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IF              reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    $end            reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)


state 4

    (4) instrucciones -> declaracionVar .

    VAR             reduce using rule 4 (instrucciones -> declaracionVar .)
    LET             reduce using rule 4 (instrucciones -> declaracionVar .)
    CONST           reduce using rule 4 (instrucciones -> declaracionVar .)
    VARIABLE        reduce using rule 4 (instrucciones -> declaracionVar .)
    FUNCTION        reduce using rule 4 (instrucciones -> declaracionVar .)
    IF              reduce using rule 4 (instrucciones -> declaracionVar .)
    SWITCH          reduce using rule 4 (instrucciones -> declaracionVar .)
    MAPLOWER        reduce using rule 4 (instrucciones -> declaracionVar .)
    NUMBER          reduce using rule 4 (instrucciones -> declaracionVar .)
    IZQPAREN        reduce using rule 4 (instrucciones -> declaracionVar .)
    $end            reduce using rule 4 (instrucciones -> declaracionVar .)
    DERLLAVE        reduce using rule 4 (instrucciones -> declaracionVar .)


state 5

    (5) instrucciones -> asignacion .

    VAR             reduce using rule 5 (instrucciones -> asignacion .)
    LET             reduce using rule 5 (instrucciones -> asignacion .)
    CONST           reduce using rule 5 (instrucciones -> asignacion .)
    VARIABLE        reduce using rule 5 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 5 (instrucciones -> asignacion .)
    IF              reduce using rule 5 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 5 (instrucciones -> asignacion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 5 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> asignacion .)
    $end            reduce using rule 5 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> asignacion .)


state 6

    (6) instrucciones -> funcion .

    VAR             reduce using rule 6 (instrucciones -> funcion .)
    LET             reduce using rule 6 (instrucciones -> funcion .)
    CONST           reduce using rule 6 (instrucciones -> funcion .)
    VARIABLE        reduce using rule 6 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 6 (instrucciones -> funcion .)
    IF              reduce using rule 6 (instrucciones -> funcion .)
    SWITCH          reduce using rule 6 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> funcion .)
    NUMBER          reduce using rule 6 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> funcion .)
    $end            reduce using rule 6 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> funcion .)


state 7

    (7) instrucciones -> expresion .
    (75) expresion -> expresion . MAS term
    (76) expresion -> expresion . MENOS term
    (51) comparacion -> expresion . comparador expresion
    (52) comparador -> . MAYORQUE
    (53) comparador -> . MENORQUE
    (54) comparador -> . MAYORIGUALQUE
    (55) comparador -> . MENORIGUALQUE
    (56) comparador -> . NOIGUALQUE

    VAR             reduce using rule 7 (instrucciones -> expresion .)
    LET             reduce using rule 7 (instrucciones -> expresion .)
    CONST           reduce using rule 7 (instrucciones -> expresion .)
    VARIABLE        reduce using rule 7 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 7 (instrucciones -> expresion .)
    IF              reduce using rule 7 (instrucciones -> expresion .)
    SWITCH          reduce using rule 7 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> expresion .)
    NUMBER          reduce using rule 7 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> expresion .)
    $end            reduce using rule 7 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> expresion .)
    MAS             shift and go to state 29
    MENOS           shift and go to state 30
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 31

state 8

    (8) instrucciones -> comparacion .

    VAR             reduce using rule 8 (instrucciones -> comparacion .)
    LET             reduce using rule 8 (instrucciones -> comparacion .)
    CONST           reduce using rule 8 (instrucciones -> comparacion .)
    VARIABLE        reduce using rule 8 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 8 (instrucciones -> comparacion .)
    IF              reduce using rule 8 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 8 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 8 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 8 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 8 (instrucciones -> comparacion .)
    $end            reduce using rule 8 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 8 (instrucciones -> comparacion .)


state 9

    (9) instrucciones -> arreglo .

    VAR             reduce using rule 9 (instrucciones -> arreglo .)
    LET             reduce using rule 9 (instrucciones -> arreglo .)
    CONST           reduce using rule 9 (instrucciones -> arreglo .)
    VARIABLE        reduce using rule 9 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 9 (instrucciones -> arreglo .)
    IF              reduce using rule 9 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 9 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 9 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 9 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 9 (instrucciones -> arreglo .)
    $end            reduce using rule 9 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 9 (instrucciones -> arreglo .)


state 10

    (10) instrucciones -> map .

    VAR             reduce using rule 10 (instrucciones -> map .)
    LET             reduce using rule 10 (instrucciones -> map .)
    CONST           reduce using rule 10 (instrucciones -> map .)
    VARIABLE        reduce using rule 10 (instrucciones -> map .)
    FUNCTION        reduce using rule 10 (instrucciones -> map .)
    IF              reduce using rule 10 (instrucciones -> map .)
    SWITCH          reduce using rule 10 (instrucciones -> map .)
    MAPLOWER        reduce using rule 10 (instrucciones -> map .)
    NUMBER          reduce using rule 10 (instrucciones -> map .)
    IZQPAREN        reduce using rule 10 (instrucciones -> map .)
    $end            reduce using rule 10 (instrucciones -> map .)
    DERLLAVE        reduce using rule 10 (instrucciones -> map .)


state 11

    (11) instrucciones -> if .

    VAR             reduce using rule 11 (instrucciones -> if .)
    LET             reduce using rule 11 (instrucciones -> if .)
    CONST           reduce using rule 11 (instrucciones -> if .)
    VARIABLE        reduce using rule 11 (instrucciones -> if .)
    FUNCTION        reduce using rule 11 (instrucciones -> if .)
    IF              reduce using rule 11 (instrucciones -> if .)
    SWITCH          reduce using rule 11 (instrucciones -> if .)
    MAPLOWER        reduce using rule 11 (instrucciones -> if .)
    NUMBER          reduce using rule 11 (instrucciones -> if .)
    IZQPAREN        reduce using rule 11 (instrucciones -> if .)
    $end            reduce using rule 11 (instrucciones -> if .)
    DERLLAVE        reduce using rule 11 (instrucciones -> if .)


state 12

    (12) instrucciones -> switch .

    VAR             reduce using rule 12 (instrucciones -> switch .)
    LET             reduce using rule 12 (instrucciones -> switch .)
    CONST           reduce using rule 12 (instrucciones -> switch .)
    VARIABLE        reduce using rule 12 (instrucciones -> switch .)
    FUNCTION        reduce using rule 12 (instrucciones -> switch .)
    IF              reduce using rule 12 (instrucciones -> switch .)
    SWITCH          reduce using rule 12 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 12 (instrucciones -> switch .)
    NUMBER          reduce using rule 12 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 12 (instrucciones -> switch .)
    $end            reduce using rule 12 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 12 (instrucciones -> switch .)


state 13

    (13) instrucciones -> pop .

    VAR             reduce using rule 13 (instrucciones -> pop .)
    LET             reduce using rule 13 (instrucciones -> pop .)
    CONST           reduce using rule 13 (instrucciones -> pop .)
    VARIABLE        reduce using rule 13 (instrucciones -> pop .)
    FUNCTION        reduce using rule 13 (instrucciones -> pop .)
    IF              reduce using rule 13 (instrucciones -> pop .)
    SWITCH          reduce using rule 13 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 13 (instrucciones -> pop .)
    NUMBER          reduce using rule 13 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 13 (instrucciones -> pop .)
    $end            reduce using rule 13 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 13 (instrucciones -> pop .)


state 14

    (14) instrucciones -> push .

    VAR             reduce using rule 14 (instrucciones -> push .)
    LET             reduce using rule 14 (instrucciones -> push .)
    CONST           reduce using rule 14 (instrucciones -> push .)
    VARIABLE        reduce using rule 14 (instrucciones -> push .)
    FUNCTION        reduce using rule 14 (instrucciones -> push .)
    IF              reduce using rule 14 (instrucciones -> push .)
    SWITCH          reduce using rule 14 (instrucciones -> push .)
    MAPLOWER        reduce using rule 14 (instrucciones -> push .)
    NUMBER          reduce using rule 14 (instrucciones -> push .)
    IZQPAREN        reduce using rule 14 (instrucciones -> push .)
    $end            reduce using rule 14 (instrucciones -> push .)
    DERLLAVE        reduce using rule 14 (instrucciones -> push .)


state 15

    (15) instrucciones -> mapSet .

    VAR             reduce using rule 15 (instrucciones -> mapSet .)
    LET             reduce using rule 15 (instrucciones -> mapSet .)
    CONST           reduce using rule 15 (instrucciones -> mapSet .)
    VARIABLE        reduce using rule 15 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 15 (instrucciones -> mapSet .)
    IF              reduce using rule 15 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 15 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 15 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 15 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 15 (instrucciones -> mapSet .)
    $end            reduce using rule 15 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 15 (instrucciones -> mapSet .)


state 16

    (16) declaracionVarSinAsig -> VAR . VARIABLE
    (19) declaracionVarSinAsig -> VAR . VARIABLE FINALDELINEA
    (22) declaracionVar -> VAR . VARIABLE IGUAL tipo
    (25) declaracionVar -> VAR . VARIABLE IGUAL tipo FINALDELINEA
    (57) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (69) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    VARIABLE        shift and go to state 37


state 17

    (28) asignacion -> VARIABLE . operadoresAsig tipo
    (29) asignacion -> VARIABLE . operadoresAsig tipo FINALDELINEA
    (50) comparacion -> VARIABLE . comparador VARIABLE
    (30) operadoresAsig -> . IGUAL
    (31) operadoresAsig -> . MASIGUAL
    (32) operadoresAsig -> . MENOSIGUAL
    (33) operadoresAsig -> . DIVIGUAL
    (34) operadoresAsig -> . MODIGUAL
    (52) comparador -> . MAYORQUE
    (53) comparador -> . MENORQUE
    (54) comparador -> . MAYORIGUALQUE
    (55) comparador -> . MENORIGUALQUE
    (56) comparador -> . NOIGUALQUE

    IGUAL           shift and go to state 40
    MASIGUAL        shift and go to state 41
    MENOSIGUAL      shift and go to state 42
    DIVIGUAL        shift and go to state 43
    MODIGUAL        shift and go to state 44
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    operadoresAsig                 shift and go to state 38
    comparador                     shift and go to state 39

state 18

    (17) declaracionVarSinAsig -> LET . VARIABLE
    (20) declaracionVarSinAsig -> LET . VARIABLE FINALDELINEA
    (23) declaracionVar -> LET . VARIABLE IGUAL tipo
    (26) declaracionVar -> LET . VARIABLE IGUAL tipo FINALDELINEA
    (58) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    VARIABLE        shift and go to state 45


state 19

    (18) declaracionVarSinAsig -> CONST . VARIABLE
    (21) declaracionVarSinAsig -> CONST . VARIABLE FINALDELINEA
    (24) declaracionVar -> CONST . VARIABLE IGUAL tipo
    (27) declaracionVar -> CONST . VARIABLE IGUAL tipo FINALDELINEA
    (71) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    VARIABLE        shift and go to state 46


state 20

    (35) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 47


state 21

    (82) factor -> IZQPAREN . expresion DERPAREN
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    expresion                      shift and go to state 48
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 22

    (77) expresion -> term .
    (78) term -> term . MULT factor
    (79) term -> term . DIV factor

    MAS             reduce using rule 77 (expresion -> term .)
    MENOS           reduce using rule 77 (expresion -> term .)
    MAYORQUE        reduce using rule 77 (expresion -> term .)
    MENORQUE        reduce using rule 77 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 77 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 77 (expresion -> term .)
    NOIGUALQUE      reduce using rule 77 (expresion -> term .)
    VAR             reduce using rule 77 (expresion -> term .)
    LET             reduce using rule 77 (expresion -> term .)
    CONST           reduce using rule 77 (expresion -> term .)
    VARIABLE        reduce using rule 77 (expresion -> term .)
    FUNCTION        reduce using rule 77 (expresion -> term .)
    IF              reduce using rule 77 (expresion -> term .)
    SWITCH          reduce using rule 77 (expresion -> term .)
    MAPLOWER        reduce using rule 77 (expresion -> term .)
    NUMBER          reduce using rule 77 (expresion -> term .)
    IZQPAREN        reduce using rule 77 (expresion -> term .)
    $end            reduce using rule 77 (expresion -> term .)
    DERLLAVE        reduce using rule 77 (expresion -> term .)
    DERPAREN        reduce using rule 77 (expresion -> term .)
    MULT            shift and go to state 49
    DIV             shift and go to state 50


state 23

    (42) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 51


state 24

    (45) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 52


state 25

    (73) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA

    PUNTO           shift and go to state 53


state 26

    (80) term -> factor .

    MULT            reduce using rule 80 (term -> factor .)
    DIV             reduce using rule 80 (term -> factor .)
    MAS             reduce using rule 80 (term -> factor .)
    MENOS           reduce using rule 80 (term -> factor .)
    MAYORQUE        reduce using rule 80 (term -> factor .)
    MENORQUE        reduce using rule 80 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 80 (term -> factor .)
    MENORIGUALQUE   reduce using rule 80 (term -> factor .)
    NOIGUALQUE      reduce using rule 80 (term -> factor .)
    VAR             reduce using rule 80 (term -> factor .)
    LET             reduce using rule 80 (term -> factor .)
    CONST           reduce using rule 80 (term -> factor .)
    VARIABLE        reduce using rule 80 (term -> factor .)
    FUNCTION        reduce using rule 80 (term -> factor .)
    IF              reduce using rule 80 (term -> factor .)
    SWITCH          reduce using rule 80 (term -> factor .)
    MAPLOWER        reduce using rule 80 (term -> factor .)
    NUMBER          reduce using rule 80 (term -> factor .)
    IZQPAREN        reduce using rule 80 (term -> factor .)
    $end            reduce using rule 80 (term -> factor .)
    DERLLAVE        reduce using rule 80 (term -> factor .)
    DERPAREN        reduce using rule 80 (term -> factor .)


state 27

    (81) factor -> NUMBER .

    MULT            reduce using rule 81 (factor -> NUMBER .)
    DIV             reduce using rule 81 (factor -> NUMBER .)
    MAS             reduce using rule 81 (factor -> NUMBER .)
    MENOS           reduce using rule 81 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 81 (factor -> NUMBER .)
    MENORQUE        reduce using rule 81 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 81 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 81 (factor -> NUMBER .)
    NOIGUALQUE      reduce using rule 81 (factor -> NUMBER .)
    VAR             reduce using rule 81 (factor -> NUMBER .)
    LET             reduce using rule 81 (factor -> NUMBER .)
    CONST           reduce using rule 81 (factor -> NUMBER .)
    VARIABLE        reduce using rule 81 (factor -> NUMBER .)
    FUNCTION        reduce using rule 81 (factor -> NUMBER .)
    IF              reduce using rule 81 (factor -> NUMBER .)
    SWITCH          reduce using rule 81 (factor -> NUMBER .)
    MAPLOWER        reduce using rule 81 (factor -> NUMBER .)
    NUMBER          reduce using rule 81 (factor -> NUMBER .)
    IZQPAREN        reduce using rule 81 (factor -> NUMBER .)
    $end            reduce using rule 81 (factor -> NUMBER .)
    DERLLAVE        reduce using rule 81 (factor -> NUMBER .)
    DERPAREN        reduce using rule 81 (factor -> NUMBER .)


state 28

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 29

    (75) expresion -> expresion MAS . term
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    term                           shift and go to state 54
    factor                         shift and go to state 26

state 30

    (76) expresion -> expresion MENOS . term
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    term                           shift and go to state 55
    factor                         shift and go to state 26

state 31

    (51) comparacion -> expresion comparador . expresion
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    expresion                      shift and go to state 56
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 32

    (52) comparador -> MAYORQUE .

    NUMBER          reduce using rule 52 (comparador -> MAYORQUE .)
    IZQPAREN        reduce using rule 52 (comparador -> MAYORQUE .)
    VARIABLE        reduce using rule 52 (comparador -> MAYORQUE .)


state 33

    (53) comparador -> MENORQUE .

    NUMBER          reduce using rule 53 (comparador -> MENORQUE .)
    IZQPAREN        reduce using rule 53 (comparador -> MENORQUE .)
    VARIABLE        reduce using rule 53 (comparador -> MENORQUE .)


state 34

    (54) comparador -> MAYORIGUALQUE .

    NUMBER          reduce using rule 54 (comparador -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 54 (comparador -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 54 (comparador -> MAYORIGUALQUE .)


state 35

    (55) comparador -> MENORIGUALQUE .

    NUMBER          reduce using rule 55 (comparador -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 55 (comparador -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 55 (comparador -> MENORIGUALQUE .)


state 36

    (56) comparador -> NOIGUALQUE .

    NUMBER          reduce using rule 56 (comparador -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 56 (comparador -> NOIGUALQUE .)
    VARIABLE        reduce using rule 56 (comparador -> NOIGUALQUE .)


state 37

    (16) declaracionVarSinAsig -> VAR VARIABLE .
    (19) declaracionVarSinAsig -> VAR VARIABLE . FINALDELINEA
    (22) declaracionVar -> VAR VARIABLE . IGUAL tipo
    (25) declaracionVar -> VAR VARIABLE . IGUAL tipo FINALDELINEA
    (57) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (69) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    VAR             reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    LET             reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    CONST           reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    VARIABLE        reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    FUNCTION        reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    IF              reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    SWITCH          reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    MAPLOWER        reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    NUMBER          reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    IZQPAREN        reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    $end            reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    DERLLAVE        reduce using rule 16 (declaracionVarSinAsig -> VAR VARIABLE .)
    FINALDELINEA    shift and go to state 57
    IGUAL           shift and go to state 58


state 38

    (28) asignacion -> VARIABLE operadoresAsig . tipo
    (29) asignacion -> VARIABLE operadoresAsig . tipo FINALDELINEA
    (37) tipo -> . NUMBER
    (38) tipo -> . STRING
    (39) tipo -> . BOOLEAN
    (40) tipo -> . BIGINT
    (41) tipo -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipo                           shift and go to state 59

state 39

    (50) comparacion -> VARIABLE comparador . VARIABLE

    VARIABLE        shift and go to state 65


state 40

    (30) operadoresAsig -> IGUAL .

    NUMBER          reduce using rule 30 (operadoresAsig -> IGUAL .)
    STRING          reduce using rule 30 (operadoresAsig -> IGUAL .)
    BOOLEAN         reduce using rule 30 (operadoresAsig -> IGUAL .)
    BIGINT          reduce using rule 30 (operadoresAsig -> IGUAL .)
    SYMBOL          reduce using rule 30 (operadoresAsig -> IGUAL .)


state 41

    (31) operadoresAsig -> MASIGUAL .

    NUMBER          reduce using rule 31 (operadoresAsig -> MASIGUAL .)
    STRING          reduce using rule 31 (operadoresAsig -> MASIGUAL .)
    BOOLEAN         reduce using rule 31 (operadoresAsig -> MASIGUAL .)
    BIGINT          reduce using rule 31 (operadoresAsig -> MASIGUAL .)
    SYMBOL          reduce using rule 31 (operadoresAsig -> MASIGUAL .)


state 42

    (32) operadoresAsig -> MENOSIGUAL .

    NUMBER          reduce using rule 32 (operadoresAsig -> MENOSIGUAL .)
    STRING          reduce using rule 32 (operadoresAsig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 32 (operadoresAsig -> MENOSIGUAL .)
    BIGINT          reduce using rule 32 (operadoresAsig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 32 (operadoresAsig -> MENOSIGUAL .)


state 43

    (33) operadoresAsig -> DIVIGUAL .

    NUMBER          reduce using rule 33 (operadoresAsig -> DIVIGUAL .)
    STRING          reduce using rule 33 (operadoresAsig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 33 (operadoresAsig -> DIVIGUAL .)
    BIGINT          reduce using rule 33 (operadoresAsig -> DIVIGUAL .)
    SYMBOL          reduce using rule 33 (operadoresAsig -> DIVIGUAL .)


state 44

    (34) operadoresAsig -> MODIGUAL .

    NUMBER          reduce using rule 34 (operadoresAsig -> MODIGUAL .)
    STRING          reduce using rule 34 (operadoresAsig -> MODIGUAL .)
    BOOLEAN         reduce using rule 34 (operadoresAsig -> MODIGUAL .)
    BIGINT          reduce using rule 34 (operadoresAsig -> MODIGUAL .)
    SYMBOL          reduce using rule 34 (operadoresAsig -> MODIGUAL .)


state 45

    (17) declaracionVarSinAsig -> LET VARIABLE .
    (20) declaracionVarSinAsig -> LET VARIABLE . FINALDELINEA
    (23) declaracionVar -> LET VARIABLE . IGUAL tipo
    (26) declaracionVar -> LET VARIABLE . IGUAL tipo FINALDELINEA
    (58) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    VAR             reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    LET             reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    CONST           reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    VARIABLE        reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    FUNCTION        reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    IF              reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    SWITCH          reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    MAPLOWER        reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    NUMBER          reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    IZQPAREN        reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    $end            reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    DERLLAVE        reduce using rule 17 (declaracionVarSinAsig -> LET VARIABLE .)
    FINALDELINEA    shift and go to state 66
    IGUAL           shift and go to state 67


state 46

    (18) declaracionVarSinAsig -> CONST VARIABLE .
    (21) declaracionVarSinAsig -> CONST VARIABLE . FINALDELINEA
    (24) declaracionVar -> CONST VARIABLE . IGUAL tipo
    (27) declaracionVar -> CONST VARIABLE . IGUAL tipo FINALDELINEA
    (71) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    VAR             reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    LET             reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    CONST           reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    VARIABLE        reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    FUNCTION        reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    IF              reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    SWITCH          reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    MAPLOWER        reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    NUMBER          reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    IZQPAREN        reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    $end            reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    DERLLAVE        reduce using rule 18 (declaracionVarSinAsig -> CONST VARIABLE .)
    FINALDELINEA    shift and go to state 68
    IGUAL           shift and go to state 69


state 47

    (35) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 70


state 48

    (82) factor -> IZQPAREN expresion . DERPAREN
    (75) expresion -> expresion . MAS term
    (76) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 71
    MAS             shift and go to state 29
    MENOS           shift and go to state 30


state 49

    (78) term -> term MULT . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    factor                         shift and go to state 72

state 50

    (79) term -> term DIV . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    factor                         shift and go to state 73

state 51

    (42) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 75
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    comparacion                    shift and go to state 74
    expresion                      shift and go to state 76
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 52

    (45) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 77


state 53

    (73) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA

    SET             shift and go to state 78


state 54

    (75) expresion -> expresion MAS term .
    (78) term -> term . MULT factor
    (79) term -> term . DIV factor

    MAS             reduce using rule 75 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 75 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 75 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 75 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 75 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 75 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 75 (expresion -> expresion MAS term .)
    VAR             reduce using rule 75 (expresion -> expresion MAS term .)
    LET             reduce using rule 75 (expresion -> expresion MAS term .)
    CONST           reduce using rule 75 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 75 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 75 (expresion -> expresion MAS term .)
    IF              reduce using rule 75 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 75 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 75 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 75 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 75 (expresion -> expresion MAS term .)
    $end            reduce using rule 75 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 75 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 75 (expresion -> expresion MAS term .)
    MULT            shift and go to state 49
    DIV             shift and go to state 50


state 55

    (76) expresion -> expresion MENOS term .
    (78) term -> term . MULT factor
    (79) term -> term . DIV factor

    MAS             reduce using rule 76 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 76 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 76 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 76 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 76 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 76 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 76 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 76 (expresion -> expresion MENOS term .)
    LET             reduce using rule 76 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 76 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 76 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 76 (expresion -> expresion MENOS term .)
    IF              reduce using rule 76 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 76 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 76 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 76 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 76 (expresion -> expresion MENOS term .)
    $end            reduce using rule 76 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 76 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 76 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 49
    DIV             shift and go to state 50


state 56

    (51) comparacion -> expresion comparador expresion .
    (75) expresion -> expresion . MAS term
    (76) expresion -> expresion . MENOS term

    VAR             reduce using rule 51 (comparacion -> expresion comparador expresion .)
    LET             reduce using rule 51 (comparacion -> expresion comparador expresion .)
    CONST           reduce using rule 51 (comparacion -> expresion comparador expresion .)
    VARIABLE        reduce using rule 51 (comparacion -> expresion comparador expresion .)
    FUNCTION        reduce using rule 51 (comparacion -> expresion comparador expresion .)
    IF              reduce using rule 51 (comparacion -> expresion comparador expresion .)
    SWITCH          reduce using rule 51 (comparacion -> expresion comparador expresion .)
    MAPLOWER        reduce using rule 51 (comparacion -> expresion comparador expresion .)
    NUMBER          reduce using rule 51 (comparacion -> expresion comparador expresion .)
    IZQPAREN        reduce using rule 51 (comparacion -> expresion comparador expresion .)
    $end            reduce using rule 51 (comparacion -> expresion comparador expresion .)
    DERLLAVE        reduce using rule 51 (comparacion -> expresion comparador expresion .)
    DERPAREN        reduce using rule 51 (comparacion -> expresion comparador expresion .)
    MAS             shift and go to state 29
    MENOS           shift and go to state 30


state 57

    (19) declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .

    VAR             reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    LET             reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    CONST           reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    VARIABLE        reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    IF              reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    MAPLOWER        reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    $end            reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 19 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)


state 58

    (22) declaracionVar -> VAR VARIABLE IGUAL . tipo
    (25) declaracionVar -> VAR VARIABLE IGUAL . tipo FINALDELINEA
    (57) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (69) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (70) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (37) tipo -> . NUMBER
    (38) tipo -> . STRING
    (39) tipo -> . BOOLEAN
    (40) tipo -> . BIGINT
    (41) tipo -> . SYMBOL

    IZQCORCHETE     shift and go to state 81
    NEW             shift and go to state 82
    VARIABLE        shift and go to state 79
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipo                           shift and go to state 80

state 59

    (28) asignacion -> VARIABLE operadoresAsig tipo .
    (29) asignacion -> VARIABLE operadoresAsig tipo . FINALDELINEA

    VAR             reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    LET             reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    CONST           reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    VARIABLE        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    FUNCTION        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    IF              reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    SWITCH          reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    MAPLOWER        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    NUMBER          reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    IZQPAREN        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    $end            reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    DERLLAVE        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    BREAK           reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo .)
    FINALDELINEA    shift and go to state 83


state 60

    (37) tipo -> NUMBER .

    FINALDELINEA    reduce using rule 37 (tipo -> NUMBER .)
    VAR             reduce using rule 37 (tipo -> NUMBER .)
    LET             reduce using rule 37 (tipo -> NUMBER .)
    CONST           reduce using rule 37 (tipo -> NUMBER .)
    VARIABLE        reduce using rule 37 (tipo -> NUMBER .)
    FUNCTION        reduce using rule 37 (tipo -> NUMBER .)
    IF              reduce using rule 37 (tipo -> NUMBER .)
    SWITCH          reduce using rule 37 (tipo -> NUMBER .)
    MAPLOWER        reduce using rule 37 (tipo -> NUMBER .)
    NUMBER          reduce using rule 37 (tipo -> NUMBER .)
    IZQPAREN        reduce using rule 37 (tipo -> NUMBER .)
    $end            reduce using rule 37 (tipo -> NUMBER .)
    DERLLAVE        reduce using rule 37 (tipo -> NUMBER .)
    BREAK           reduce using rule 37 (tipo -> NUMBER .)
    COMA            reduce using rule 37 (tipo -> NUMBER .)
    DOSPUNTOS       reduce using rule 37 (tipo -> NUMBER .)
    DERPAREN        reduce using rule 37 (tipo -> NUMBER .)


state 61

    (38) tipo -> STRING .

    FINALDELINEA    reduce using rule 38 (tipo -> STRING .)
    VAR             reduce using rule 38 (tipo -> STRING .)
    LET             reduce using rule 38 (tipo -> STRING .)
    CONST           reduce using rule 38 (tipo -> STRING .)
    VARIABLE        reduce using rule 38 (tipo -> STRING .)
    FUNCTION        reduce using rule 38 (tipo -> STRING .)
    IF              reduce using rule 38 (tipo -> STRING .)
    SWITCH          reduce using rule 38 (tipo -> STRING .)
    MAPLOWER        reduce using rule 38 (tipo -> STRING .)
    NUMBER          reduce using rule 38 (tipo -> STRING .)
    IZQPAREN        reduce using rule 38 (tipo -> STRING .)
    $end            reduce using rule 38 (tipo -> STRING .)
    DERLLAVE        reduce using rule 38 (tipo -> STRING .)
    BREAK           reduce using rule 38 (tipo -> STRING .)
    COMA            reduce using rule 38 (tipo -> STRING .)
    DOSPUNTOS       reduce using rule 38 (tipo -> STRING .)
    DERPAREN        reduce using rule 38 (tipo -> STRING .)


state 62

    (39) tipo -> BOOLEAN .

    FINALDELINEA    reduce using rule 39 (tipo -> BOOLEAN .)
    VAR             reduce using rule 39 (tipo -> BOOLEAN .)
    LET             reduce using rule 39 (tipo -> BOOLEAN .)
    CONST           reduce using rule 39 (tipo -> BOOLEAN .)
    VARIABLE        reduce using rule 39 (tipo -> BOOLEAN .)
    FUNCTION        reduce using rule 39 (tipo -> BOOLEAN .)
    IF              reduce using rule 39 (tipo -> BOOLEAN .)
    SWITCH          reduce using rule 39 (tipo -> BOOLEAN .)
    MAPLOWER        reduce using rule 39 (tipo -> BOOLEAN .)
    NUMBER          reduce using rule 39 (tipo -> BOOLEAN .)
    IZQPAREN        reduce using rule 39 (tipo -> BOOLEAN .)
    $end            reduce using rule 39 (tipo -> BOOLEAN .)
    DERLLAVE        reduce using rule 39 (tipo -> BOOLEAN .)
    BREAK           reduce using rule 39 (tipo -> BOOLEAN .)
    COMA            reduce using rule 39 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 39 (tipo -> BOOLEAN .)
    DERPAREN        reduce using rule 39 (tipo -> BOOLEAN .)


state 63

    (40) tipo -> BIGINT .

    FINALDELINEA    reduce using rule 40 (tipo -> BIGINT .)
    VAR             reduce using rule 40 (tipo -> BIGINT .)
    LET             reduce using rule 40 (tipo -> BIGINT .)
    CONST           reduce using rule 40 (tipo -> BIGINT .)
    VARIABLE        reduce using rule 40 (tipo -> BIGINT .)
    FUNCTION        reduce using rule 40 (tipo -> BIGINT .)
    IF              reduce using rule 40 (tipo -> BIGINT .)
    SWITCH          reduce using rule 40 (tipo -> BIGINT .)
    MAPLOWER        reduce using rule 40 (tipo -> BIGINT .)
    NUMBER          reduce using rule 40 (tipo -> BIGINT .)
    IZQPAREN        reduce using rule 40 (tipo -> BIGINT .)
    $end            reduce using rule 40 (tipo -> BIGINT .)
    DERLLAVE        reduce using rule 40 (tipo -> BIGINT .)
    BREAK           reduce using rule 40 (tipo -> BIGINT .)
    COMA            reduce using rule 40 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 40 (tipo -> BIGINT .)
    DERPAREN        reduce using rule 40 (tipo -> BIGINT .)


state 64

    (41) tipo -> SYMBOL .

    FINALDELINEA    reduce using rule 41 (tipo -> SYMBOL .)
    VAR             reduce using rule 41 (tipo -> SYMBOL .)
    LET             reduce using rule 41 (tipo -> SYMBOL .)
    CONST           reduce using rule 41 (tipo -> SYMBOL .)
    VARIABLE        reduce using rule 41 (tipo -> SYMBOL .)
    FUNCTION        reduce using rule 41 (tipo -> SYMBOL .)
    IF              reduce using rule 41 (tipo -> SYMBOL .)
    SWITCH          reduce using rule 41 (tipo -> SYMBOL .)
    MAPLOWER        reduce using rule 41 (tipo -> SYMBOL .)
    NUMBER          reduce using rule 41 (tipo -> SYMBOL .)
    IZQPAREN        reduce using rule 41 (tipo -> SYMBOL .)
    $end            reduce using rule 41 (tipo -> SYMBOL .)
    DERLLAVE        reduce using rule 41 (tipo -> SYMBOL .)
    BREAK           reduce using rule 41 (tipo -> SYMBOL .)
    COMA            reduce using rule 41 (tipo -> SYMBOL .)
    DOSPUNTOS       reduce using rule 41 (tipo -> SYMBOL .)
    DERPAREN        reduce using rule 41 (tipo -> SYMBOL .)


state 65

    (50) comparacion -> VARIABLE comparador VARIABLE .

    VAR             reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    LET             reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    CONST           reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    VARIABLE        reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    FUNCTION        reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    IF              reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    SWITCH          reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    MAPLOWER        reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    NUMBER          reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    IZQPAREN        reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    $end            reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    DERLLAVE        reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)
    DERPAREN        reduce using rule 50 (comparacion -> VARIABLE comparador VARIABLE .)


state 66

    (20) declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .

    VAR             reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    LET             reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    CONST           reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    VARIABLE        reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    IF              reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    MAPLOWER        reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    $end            reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 20 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)


state 67

    (23) declaracionVar -> LET VARIABLE IGUAL . tipo
    (26) declaracionVar -> LET VARIABLE IGUAL . tipo FINALDELINEA
    (58) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (67) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (68) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (37) tipo -> . NUMBER
    (38) tipo -> . STRING
    (39) tipo -> . BOOLEAN
    (40) tipo -> . BIGINT
    (41) tipo -> . SYMBOL

    IZQCORCHETE     shift and go to state 85
    NEW             shift and go to state 86
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipo                           shift and go to state 84

state 68

    (21) declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .

    VAR             reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    LET             reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    CONST           reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    VARIABLE        reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    IF              reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    MAPLOWER        reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    $end            reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 21 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)


state 69

    (24) declaracionVar -> CONST VARIABLE IGUAL . tipo
    (27) declaracionVar -> CONST VARIABLE IGUAL . tipo FINALDELINEA
    (71) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (72) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (37) tipo -> . NUMBER
    (38) tipo -> . STRING
    (39) tipo -> . BOOLEAN
    (40) tipo -> . BIGINT
    (41) tipo -> . SYMBOL

    NEW             shift and go to state 88
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipo                           shift and go to state 87

state 70

    (35) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 89
    DERPAREN        shift and go to state 90


state 71

    (82) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 82 (factor -> IZQPAREN expresion DERPAREN .)


state 72

    (78) term -> term MULT factor .

    MULT            reduce using rule 78 (term -> term MULT factor .)
    DIV             reduce using rule 78 (term -> term MULT factor .)
    MAS             reduce using rule 78 (term -> term MULT factor .)
    MENOS           reduce using rule 78 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 78 (term -> term MULT factor .)
    MENORQUE        reduce using rule 78 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 78 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 78 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 78 (term -> term MULT factor .)
    VAR             reduce using rule 78 (term -> term MULT factor .)
    LET             reduce using rule 78 (term -> term MULT factor .)
    CONST           reduce using rule 78 (term -> term MULT factor .)
    VARIABLE        reduce using rule 78 (term -> term MULT factor .)
    FUNCTION        reduce using rule 78 (term -> term MULT factor .)
    IF              reduce using rule 78 (term -> term MULT factor .)
    SWITCH          reduce using rule 78 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 78 (term -> term MULT factor .)
    NUMBER          reduce using rule 78 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 78 (term -> term MULT factor .)
    $end            reduce using rule 78 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 78 (term -> term MULT factor .)
    DERPAREN        reduce using rule 78 (term -> term MULT factor .)


state 73

    (79) term -> term DIV factor .

    MULT            reduce using rule 79 (term -> term DIV factor .)
    DIV             reduce using rule 79 (term -> term DIV factor .)
    MAS             reduce using rule 79 (term -> term DIV factor .)
    MENOS           reduce using rule 79 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 79 (term -> term DIV factor .)
    MENORQUE        reduce using rule 79 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 79 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 79 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 79 (term -> term DIV factor .)
    VAR             reduce using rule 79 (term -> term DIV factor .)
    LET             reduce using rule 79 (term -> term DIV factor .)
    CONST           reduce using rule 79 (term -> term DIV factor .)
    VARIABLE        reduce using rule 79 (term -> term DIV factor .)
    FUNCTION        reduce using rule 79 (term -> term DIV factor .)
    IF              reduce using rule 79 (term -> term DIV factor .)
    SWITCH          reduce using rule 79 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 79 (term -> term DIV factor .)
    NUMBER          reduce using rule 79 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 79 (term -> term DIV factor .)
    $end            reduce using rule 79 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 79 (term -> term DIV factor .)
    DERPAREN        reduce using rule 79 (term -> term DIV factor .)


state 74

    (42) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 91


state 75

    (50) comparacion -> VARIABLE . comparador VARIABLE
    (52) comparador -> . MAYORQUE
    (53) comparador -> . MENORQUE
    (54) comparador -> . MAYORIGUALQUE
    (55) comparador -> . MENORIGUALQUE
    (56) comparador -> . NOIGUALQUE

    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 39

state 76

    (51) comparacion -> expresion . comparador expresion
    (75) expresion -> expresion . MAS term
    (76) expresion -> expresion . MENOS term
    (52) comparador -> . MAYORQUE
    (53) comparador -> . MENORQUE
    (54) comparador -> . MAYORIGUALQUE
    (55) comparador -> . MENORIGUALQUE
    (56) comparador -> . NOIGUALQUE

    MAS             shift and go to state 29
    MENOS           shift and go to state 30
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 31

state 77

    (45) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 92


state 78

    (73) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 93


state 79

    (65) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    PUNTO           shift and go to state 94


state 80

    (22) declaracionVar -> VAR VARIABLE IGUAL tipo .
    (25) declaracionVar -> VAR VARIABLE IGUAL tipo . FINALDELINEA

    VAR             reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    LET             reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    CONST           reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    VARIABLE        reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    FUNCTION        reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    IF              reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    SWITCH          reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    MAPLOWER        reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    NUMBER          reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    IZQPAREN        reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    $end            reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    DERLLAVE        reduce using rule 22 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    FINALDELINEA    shift and go to state 95


state 81

    (57) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (59) lista -> . lista COMA lista
    (60) lista -> . STRING
    (61) lista -> . SYMBOL
    (62) lista -> . NUMBER
    (63) lista -> . BIGINT
    (64) lista -> . BOOLEAN

    STRING          shift and go to state 97
    SYMBOL          shift and go to state 98
    NUMBER          shift and go to state 99
    BIGINT          shift and go to state 100
    BOOLEAN         shift and go to state 101

    lista                          shift and go to state 96

state 82

    (69) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (70) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 102


state 83

    (29) asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .

    VAR             reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    LET             reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    CONST           reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    VARIABLE        reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    FUNCTION        reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    IF              reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    SWITCH          reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    MAPLOWER        reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    NUMBER          reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    $end            reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    BREAK           reduce using rule 29 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)


state 84

    (23) declaracionVar -> LET VARIABLE IGUAL tipo .
    (26) declaracionVar -> LET VARIABLE IGUAL tipo . FINALDELINEA

    VAR             reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    LET             reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    CONST           reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    VARIABLE        reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    FUNCTION        reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    IF              reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    SWITCH          reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    MAPLOWER        reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    NUMBER          reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    IZQPAREN        reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    $end            reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    DERLLAVE        reduce using rule 23 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    FINALDELINEA    shift and go to state 103


state 85

    (58) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (59) lista -> . lista COMA lista
    (60) lista -> . STRING
    (61) lista -> . SYMBOL
    (62) lista -> . NUMBER
    (63) lista -> . BIGINT
    (64) lista -> . BOOLEAN

    STRING          shift and go to state 97
    SYMBOL          shift and go to state 98
    NUMBER          shift and go to state 99
    BIGINT          shift and go to state 100
    BOOLEAN         shift and go to state 101

    lista                          shift and go to state 104

state 86

    (67) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (68) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 105


state 87

    (24) declaracionVar -> CONST VARIABLE IGUAL tipo .
    (27) declaracionVar -> CONST VARIABLE IGUAL tipo . FINALDELINEA

    VAR             reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    LET             reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    CONST           reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    VARIABLE        reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    FUNCTION        reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    IF              reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    SWITCH          reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    MAPLOWER        reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    NUMBER          reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    IZQPAREN        reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    $end            reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    DERLLAVE        reduce using rule 24 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    FINALDELINEA    shift and go to state 106


state 88

    (71) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (72) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 107


state 89

    (35) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 108


state 90

    (36) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 109


state 91

    (42) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (43) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (44) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 110


state 92

    (45) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 111


state 93

    (73) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipo COMA tipo DERPAREN
    (74) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipo COMA tipo DERPAREN FINALDELINEA
    (37) tipo -> . NUMBER
    (38) tipo -> . STRING
    (39) tipo -> . BOOLEAN
    (40) tipo -> . BIGINT
    (41) tipo -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipo                           shift and go to state 112

state 94

    (65) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA

    POP             shift and go to state 113
    PUSH            shift and go to state 114


state 95

    (25) declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .

    VAR             reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    LET             reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    CONST           reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    VARIABLE        reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    FUNCTION        reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    IF              reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    SWITCH          reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    MAPLOWER        reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    NUMBER          reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    $end            reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 25 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)


state 96

    (57) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (59) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 115
    COMA            shift and go to state 116


state 97

    (60) lista -> STRING .

    DERCORCHETE     reduce using rule 60 (lista -> STRING .)
    COMA            reduce using rule 60 (lista -> STRING .)
    DERPAREN        reduce using rule 60 (lista -> STRING .)


state 98

    (61) lista -> SYMBOL .

    DERCORCHETE     reduce using rule 61 (lista -> SYMBOL .)
    COMA            reduce using rule 61 (lista -> SYMBOL .)
    DERPAREN        reduce using rule 61 (lista -> SYMBOL .)


state 99

    (62) lista -> NUMBER .

    DERCORCHETE     reduce using rule 62 (lista -> NUMBER .)
    COMA            reduce using rule 62 (lista -> NUMBER .)
    DERPAREN        reduce using rule 62 (lista -> NUMBER .)


state 100

    (63) lista -> BIGINT .

    DERCORCHETE     reduce using rule 63 (lista -> BIGINT .)
    COMA            reduce using rule 63 (lista -> BIGINT .)
    DERPAREN        reduce using rule 63 (lista -> BIGINT .)


state 101

    (64) lista -> BOOLEAN .

    DERCORCHETE     reduce using rule 64 (lista -> BOOLEAN .)
    COMA            reduce using rule 64 (lista -> BOOLEAN .)
    DERPAREN        reduce using rule 64 (lista -> BOOLEAN .)


state 102

    (69) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (70) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 117


state 103

    (26) declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .

    VAR             reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    LET             reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    CONST           reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    VARIABLE        reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    FUNCTION        reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    IF              reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    SWITCH          reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    MAPLOWER        reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    NUMBER          reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    $end            reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 26 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)


state 104

    (58) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (59) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 118
    COMA            shift and go to state 116


state 105

    (67) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (68) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 119


state 106

    (27) declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .

    VAR             reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    LET             reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    CONST           reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    VARIABLE        reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    FUNCTION        reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    IF              reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    SWITCH          reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    MAPLOWER        reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    NUMBER          reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    $end            reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 27 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)


state 107

    (71) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (72) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 120


state 108

    (35) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 121


state 109

    (36) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . VAR VARIABLE
    (17) declaracionVarSinAsig -> . LET VARIABLE
    (18) declaracionVarSinAsig -> . CONST VARIABLE
    (19) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (21) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (22) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (23) declaracionVar -> . LET VARIABLE IGUAL tipo
    (24) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (25) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (27) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (57) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (58) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (69) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (71) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (45) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (65) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (73) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 20
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    js                             shift and go to state 122
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 110

    (42) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (44) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . VAR VARIABLE
    (17) declaracionVarSinAsig -> . LET VARIABLE
    (18) declaracionVarSinAsig -> . CONST VARIABLE
    (19) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (21) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (22) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (23) declaracionVar -> . LET VARIABLE IGUAL tipo
    (24) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (25) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (27) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (57) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (58) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (69) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (71) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (45) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (65) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (73) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 20
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    comparacion                    shift and go to state 8
    js                             shift and go to state 123
    if                             shift and go to state 11
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 111

    (45) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (48) ncasos -> . casos
    (49) ncasos -> . casos ncasos
    (46) casos -> . CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA
    (47) casos -> . CASE tipo DOSPUNTOS

    CASE            shift and go to state 126

    ncasos                         shift and go to state 124
    casos                          shift and go to state 125

state 112

    (73) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo . COMA tipo DERPAREN
    (74) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo . COMA tipo DERPAREN FINALDELINEA

    COMA            shift and go to state 127


state 113

    (65) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 128


state 114

    (66) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 129


state 115

    (57) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VAR             reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 116

    (59) lista -> lista COMA . lista
    (59) lista -> . lista COMA lista
    (60) lista -> . STRING
    (61) lista -> . SYMBOL
    (62) lista -> . NUMBER
    (63) lista -> . BIGINT
    (64) lista -> . BOOLEAN

    STRING          shift and go to state 97
    SYMBOL          shift and go to state 98
    NUMBER          shift and go to state 99
    BIGINT          shift and go to state 100
    BOOLEAN         shift and go to state 101

    lista                          shift and go to state 130

state 117

    (69) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (70) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 131


state 118

    (58) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VAR             reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 58 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 119

    (67) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (68) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 132


state 120

    (71) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (72) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 133


state 121

    (35) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . VAR VARIABLE
    (17) declaracionVarSinAsig -> . LET VARIABLE
    (18) declaracionVarSinAsig -> . CONST VARIABLE
    (19) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (21) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (22) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (23) declaracionVar -> . LET VARIABLE IGUAL tipo
    (24) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (25) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (27) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (57) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (58) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (69) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (71) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (45) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (65) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (73) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 20
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    js                             shift and go to state 134
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 122

    (36) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 135


state 123

    (42) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (44) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 136


state 124

    (45) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 137


state 125

    (48) ncasos -> casos .
    (49) ncasos -> casos . ncasos
    (48) ncasos -> . casos
    (49) ncasos -> . casos ncasos
    (46) casos -> . CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA
    (47) casos -> . CASE tipo DOSPUNTOS

    DEFAULT         reduce using rule 48 (ncasos -> casos .)
    CASE            shift and go to state 126

    casos                          shift and go to state 125
    ncasos                         shift and go to state 138

state 126

    (46) casos -> CASE . tipo DOSPUNTOS asignacion BREAK FINALDELINEA
    (47) casos -> CASE . tipo DOSPUNTOS
    (37) tipo -> . NUMBER
    (38) tipo -> . STRING
    (39) tipo -> . BOOLEAN
    (40) tipo -> . BIGINT
    (41) tipo -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipo                           shift and go to state 139

state 127

    (73) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA . tipo DERPAREN
    (74) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA . tipo DERPAREN FINALDELINEA
    (37) tipo -> . NUMBER
    (38) tipo -> . STRING
    (39) tipo -> . BOOLEAN
    (40) tipo -> . BIGINT
    (41) tipo -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipo                           shift and go to state 140

state 128

    (65) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 141


state 129

    (66) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (59) lista -> . lista COMA lista
    (60) lista -> . STRING
    (61) lista -> . SYMBOL
    (62) lista -> . NUMBER
    (63) lista -> . BIGINT
    (64) lista -> . BOOLEAN

    STRING          shift and go to state 97
    SYMBOL          shift and go to state 98
    NUMBER          shift and go to state 99
    BIGINT          shift and go to state 100
    BOOLEAN         shift and go to state 101

    lista                          shift and go to state 142

state 130

    (59) lista -> lista COMA lista .
    (59) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 59 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 59 (lista -> lista COMA lista .)
    COMA            shift and go to state 116

  ! COMA            [ reduce using rule 59 (lista -> lista COMA lista .) ]


state 131

    (69) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (70) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VAR             reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 69 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 143


state 132

    (67) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (68) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VAR             reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 144


state 133

    (71) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (72) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VAR             reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 71 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 145


state 134

    (35) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 146


state 135

    (36) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 136

    (42) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (44) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VAR             reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 148
    IF              shift and go to state 23

  ! IF              [ reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 147

state 137

    (45) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 149


state 138

    (49) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 49 (ncasos -> casos ncasos .)


state 139

    (46) casos -> CASE tipo . DOSPUNTOS asignacion BREAK FINALDELINEA
    (47) casos -> CASE tipo . DOSPUNTOS

    DOSPUNTOS       shift and go to state 150


state 140

    (73) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo . DERPAREN
    (74) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 151


state 141

    (65) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 152


state 142

    (66) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (59) lista -> lista . COMA lista

    DERPAREN        shift and go to state 153
    COMA            shift and go to state 116


state 143

    (70) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 70 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 144

    (68) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 68 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 145

    (72) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 72 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 146

    (35) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 147

    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VAR             reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VARIABLE        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 148

    (44) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 154


state 149

    (45) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . VAR VARIABLE
    (17) declaracionVarSinAsig -> . LET VARIABLE
    (18) declaracionVarSinAsig -> . CONST VARIABLE
    (19) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (21) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (22) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (23) declaracionVar -> . LET VARIABLE IGUAL tipo
    (24) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (25) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (27) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (57) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (58) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (69) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (71) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (45) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (65) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (73) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 20
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    js                             shift and go to state 155
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 150

    (46) casos -> CASE tipo DOSPUNTOS . asignacion BREAK FINALDELINEA
    (47) casos -> CASE tipo DOSPUNTOS .
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA

    CASE            reduce using rule 47 (casos -> CASE tipo DOSPUNTOS .)
    DEFAULT         reduce using rule 47 (casos -> CASE tipo DOSPUNTOS .)
    VARIABLE        shift and go to state 157

    asignacion                     shift and go to state 156

state 151

    (73) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .
    (74) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN . FINALDELINEA

    VAR             reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    LET             reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    CONST           reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    VARIABLE        reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    FUNCTION        reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    IF              reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    SWITCH          reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    MAPLOWER        reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    NUMBER          reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    IZQPAREN        reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    $end            reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    DERLLAVE        reduce using rule 73 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN .)
    FINALDELINEA    shift and go to state 158


state 152

    (65) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 65 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 153

    (66) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 159


state 154

    (44) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . VAR VARIABLE
    (17) declaracionVarSinAsig -> . LET VARIABLE
    (18) declaracionVarSinAsig -> . CONST VARIABLE
    (19) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (21) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (22) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (23) declaracionVar -> . LET VARIABLE IGUAL tipo
    (24) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (25) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (27) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (28) asignacion -> . VARIABLE operadoresAsig tipo
    (29) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (75) expresion -> . expresion MAS term
    (76) expresion -> . expresion MENOS term
    (77) expresion -> . term
    (50) comparacion -> . VARIABLE comparador VARIABLE
    (51) comparacion -> . expresion comparador expresion
    (57) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (58) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (69) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (70) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (71) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (72) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (44) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (45) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (65) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (66) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (73) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN
    (74) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA
    (78) term -> . term MULT factor
    (79) term -> . term DIV factor
    (80) term -> . factor
    (81) factor -> . NUMBER
    (82) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 20
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 21

    comparacion                    shift and go to state 8
    js                             shift and go to state 160
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    term                           shift and go to state 22
    factor                         shift and go to state 26

state 155

    (45) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 161


state 156

    (46) casos -> CASE tipo DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 162


state 157

    (28) asignacion -> VARIABLE . operadoresAsig tipo
    (29) asignacion -> VARIABLE . operadoresAsig tipo FINALDELINEA
    (30) operadoresAsig -> . IGUAL
    (31) operadoresAsig -> . MASIGUAL
    (32) operadoresAsig -> . MENOSIGUAL
    (33) operadoresAsig -> . DIVIGUAL
    (34) operadoresAsig -> . MODIGUAL

    IGUAL           shift and go to state 40
    MASIGUAL        shift and go to state 41
    MENOSIGUAL      shift and go to state 42
    DIVIGUAL        shift and go to state 43
    MODIGUAL        shift and go to state 44

    operadoresAsig                 shift and go to state 38

state 158

    (74) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .

    VAR             reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    LET             reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    CONST           reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    IF              reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    $end            reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 74 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipo COMA tipo DERPAREN FINALDELINEA .)


state 159

    (66) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 66 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 160

    (44) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 163


state 161

    (45) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VAR             reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VARIABLE        reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 45 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 162

    (46) casos -> CASE tipo DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 164


state 163

    (44) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 44 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 164

    (46) casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 46 (casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 46 (casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMA in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 136 resolved as shift
