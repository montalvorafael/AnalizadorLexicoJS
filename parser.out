Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AWAIT
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FOR
    GET
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    SUPER
    UNDEFINED
    VOID

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracion final_linea
Rule 4     instrucciones -> asignacion final_linea
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion final_linea
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> logica
Rule 9     instrucciones -> if
Rule 10    instrucciones -> switch
Rule 11    instrucciones -> while
Rule 12    instrucciones -> pop
Rule 13    instrucciones -> push
Rule 14    instrucciones -> map_Set
Rule 15    declaracion -> VAR VARIABLE
Rule 16    declaracion -> LET VARIABLE
Rule 17    declaracion -> CONST VARIABLE
Rule 18    declaracion -> VAR VARIABLE IGUAL comparacion
Rule 19    declaracion -> LET VARIABLE IGUAL comparacion
Rule 20    declaracion -> CONST VARIABLE IGUAL comparacion
Rule 21    declaracion -> VAR VARIABLE IGUAL expresion
Rule 22    declaracion -> LET VARIABLE IGUAL expresion
Rule 23    declaracion -> CONST VARIABLE IGUAL expresion
Rule 24    asignacion -> VARIABLE operadores_asig tipos_datos
Rule 25    asignacion -> VARIABLE operadores_asig VARIABLE
Rule 26    asignacion -> VARIABLE IGUAL comparacion
Rule 27    asignacion -> VARIABLE IGUAL expresion
Rule 28    expresion -> expresion MAS term
Rule 29    expresion -> expresion MENOS term
Rule 30    comparacion -> expresion operadores_comp term
Rule 31    logica -> expresion operadores_log term
Rule 32    expresion -> term
Rule 33    expresion -> RETURN expresion
Rule 34    term -> term MULT factor
Rule 35    term -> term DIV factor
Rule 36    term -> factor
Rule 37    factor -> VARIABLE
Rule 38    factor -> tipos_datos
Rule 39    factor -> IZQPAREN expresion DERPAREN
Rule 40    tipos_datos -> NUMBER
Rule 41    tipos_datos -> STRING
Rule 42    tipos_datos -> BOOLEAN
Rule 43    tipos_datos -> BIGINT
Rule 44    tipos_datos -> NULL
Rule 45    tipos_datos -> SYMBOL
Rule 46    tipos_datos -> estructuras_datos
Rule 47    operadores_asig -> IGUAL
Rule 48    operadores_asig -> MASIGUAL
Rule 49    operadores_asig -> MENOSIGUAL
Rule 50    operadores_asig -> DIVIGUAL
Rule 51    operadores_asig -> MODIGUAL
Rule 52    operadores_asig -> MULTIGUAL
Rule 53    operadores_comp -> MAYORQUE
Rule 54    operadores_comp -> MENORQUE
Rule 55    operadores_comp -> MAYORIGUALQUE
Rule 56    operadores_comp -> MENORIGUALQUE
Rule 57    operadores_comp -> NOIGUALQUE
Rule 58    operadores_comp -> IGUALIGUAL
Rule 59    operadores_log -> AND
Rule 60    operadores_log -> OR
Rule 61    final_linea -> FINALDELINEA
Rule 62    final_linea -> empty
Rule 63    empty -> <empty>
Rule 64    funcion_enc -> FUNCTION VARIABLE funcion_param
Rule 65    funcion_param -> IZQPAREN parametros DERPAREN
Rule 66    parametros -> VARIABLE
Rule 67    parametros -> VARIABLE COMA parametros
Rule 68    parametros -> empty
Rule 69    funcion -> funcion_enc IZQLLAVE js DERLLAVE
Rule 70    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 71    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 72    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 73    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 74    ncasos -> casos
Rule 75    ncasos -> casos ncasos
Rule 76    casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea
Rule 77    casos -> CASE tipos_datos DOSPUNTOS
Rule 78    while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 79    estructuras_datos -> arreglo
Rule 80    estructuras_datos -> map
Rule 81    estructuras_datos -> set
Rule 82    arreglo -> IZQCORCHETE lista DERCORCHETE final_linea
Rule 83    arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea
Rule 84    arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
Rule 85    arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea
Rule 86    arreglo -> IZQCORCHETE DERCORCHETE final_linea
Rule 87    lista -> lista COMA lista
Rule 88    lista -> tipos_datos
Rule 89    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
Rule 90    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
Rule 91    map -> NEW MAP IZQPAREN DERPAREN final_linea
Rule 92    map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
Rule 93    set -> NEW SET_ESTRUC IZQPAREN DERPAREN
Rule 94    set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN
Rule 95    set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN

Terminals, with rules where they appear

AND                  : 59
ARRAY                : 83 84 85
AWAIT                : 
BIGINT               : 43
BOOLEAN              : 42
BREAK                : 76
CASE                 : 76 77
CATCH                : 
CLASS                : 
COMA                 : 67 87 92
CONST                : 17 20 23
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 73
DELETE               : 
DERCORCHETE          : 82 86
DERLLAVE             : 69 70 71 72 72 73 78
DERPAREN             : 39 65 70 71 72 73 78 83 84 85 89 90 91 92 93 94 95
DIV                  : 35
DIVIGUAL             : 50
DO                   : 
DOSPUNTOS            : 73 76 77
ELSE                 : 72
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 61
FOR                  : 
FUNCTION             : 64
GET                  : 
IF                   : 70 71 72
IGUAL                : 18 19 20 21 22 23 26 27 47 89 90
IGUALIGUAL           : 58
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 82 86
IZQLLAVE             : 69 70 71 72 72 73 78
IZQPAREN             : 39 65 70 71 72 73 78 83 84 85 89 90 91 92 93 94 95
LET                  : 16 19 22
MAP                  : 91
MAPLOWER             : 92
MAS                  : 28
MASIGUAL             : 48
MAYORIGUALQUE        : 55
MAYORQUE             : 53
MENORIGUALQUE        : 56
MENORQUE             : 54
MENOS                : 29
MENOSIGUAL           : 49
MODIGUAL             : 51
MULT                 : 34
MULTIGUAL            : 52
NEW                  : 83 84 85 91 93 94 95
NOIGUALQUE           : 57
NULL                 : 44 94
NUMBER               : 40 84
OR                   : 60
PACKAGE              : 
POP                  : 89
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 89 90 92
PUSH                 : 90
RETURN               : 33
SET_ESTRUC           : 93 94 95
SET_METODO           : 92
STRING               : 41
SUPER                : 
SWITCH               : 73
SYMBOL               : 45
UNDEFINED            : 
VAR                  : 15 18 21 89 90
VARIABLE             : 15 16 17 18 19 20 21 22 23 24 25 25 26 27 37 64 66 67 73 89 89 90 90
VOID                 : 
WHILE                : 78
error                : 

Nonterminals, with rules where they appear

arreglo              : 79
asignacion           : 4
casos                : 74 75
comparacion          : 7 18 19 20 26 70 71 72 78
declaracion          : 3
empty                : 62 68
estructuras_datos    : 46
expresion            : 6 21 22 23 27 28 29 30 31 33 39
factor               : 34 35 36
final_linea          : 3 4 6 76 82 83 84 85 86 89 90 91 92
funcion              : 5
funcion_enc          : 69
funcion_param        : 64
if                   : 9 71
instrucciones        : 1 2
js                   : 2 69 70 71 72 72 73 76 78 0
lista                : 82 85 87 87 90 95
logica               : 8
map                  : 80
map_Set              : 14
ncasos               : 73 75
operadores_asig      : 24 25
operadores_comp      : 30
operadores_log       : 31
parametros           : 65 67
pop                  : 12
push                 : 13
set                  : 81
switch               : 10
term                 : 28 29 30 31 32 34 35
tipos_datos          : 24 38 76 77 88 92 92
while                : 11

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    if                             shift and go to state 9
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    tipos_datos                    shift and go to state 19
    funcion_enc                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    BREAK           reduce using rule 1 (js -> instrucciones .)
    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    instrucciones                  shift and go to state 2
    js                             shift and go to state 42
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    if                             shift and go to state 9
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    tipos_datos                    shift and go to state 19
    funcion_enc                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 3

    (3) instrucciones -> declaracion . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)

    final_linea                    shift and go to state 43
    empty                          shift and go to state 45

state 4

    (4) instrucciones -> asignacion . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)

    final_linea                    shift and go to state 46
    empty                          shift and go to state 45

state 5

    (5) instrucciones -> funcion .

    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    RETURN          reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    WHILE           reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    STRING          reduce using rule 5 (instrucciones -> funcion .)
    BOOLEAN         reduce using rule 5 (instrucciones -> funcion .)
    BIGINT          reduce using rule 5 (instrucciones -> funcion .)
    NULL            reduce using rule 5 (instrucciones -> funcion .)
    SYMBOL          reduce using rule 5 (instrucciones -> funcion .)
    IZQCORCHETE     reduce using rule 5 (instrucciones -> funcion .)
    NEW             reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)
    BREAK           reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion . final_linea
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term
    (30) comparacion -> expresion . operadores_comp term
    (31) logica -> expresion . operadores_log term
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (53) operadores_comp -> . MAYORQUE
    (54) operadores_comp -> . MENORQUE
    (55) operadores_comp -> . MAYORIGUALQUE
    (56) operadores_comp -> . MENORIGUALQUE
    (57) operadores_comp -> . NOIGUALQUE
    (58) operadores_comp -> . IGUALIGUAL
    (59) operadores_log -> . AND
    (60) operadores_log -> . OR
    (63) empty -> .

    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    FINALDELINEA    shift and go to state 44
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57
    AND             shift and go to state 58
    OR              shift and go to state 59
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)

    final_linea                    shift and go to state 47
    operadores_comp                shift and go to state 50
    operadores_log                 shift and go to state 51
    empty                          shift and go to state 45

state 7

    (7) instrucciones -> comparacion .

    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    RETURN          reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    WHILE           reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    STRING          reduce using rule 7 (instrucciones -> comparacion .)
    BOOLEAN         reduce using rule 7 (instrucciones -> comparacion .)
    BIGINT          reduce using rule 7 (instrucciones -> comparacion .)
    NULL            reduce using rule 7 (instrucciones -> comparacion .)
    SYMBOL          reduce using rule 7 (instrucciones -> comparacion .)
    IZQCORCHETE     reduce using rule 7 (instrucciones -> comparacion .)
    NEW             reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)
    BREAK           reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> logica .

    VAR             reduce using rule 8 (instrucciones -> logica .)
    LET             reduce using rule 8 (instrucciones -> logica .)
    CONST           reduce using rule 8 (instrucciones -> logica .)
    VARIABLE        reduce using rule 8 (instrucciones -> logica .)
    RETURN          reduce using rule 8 (instrucciones -> logica .)
    IF              reduce using rule 8 (instrucciones -> logica .)
    SWITCH          reduce using rule 8 (instrucciones -> logica .)
    WHILE           reduce using rule 8 (instrucciones -> logica .)
    MAPLOWER        reduce using rule 8 (instrucciones -> logica .)
    FUNCTION        reduce using rule 8 (instrucciones -> logica .)
    IZQPAREN        reduce using rule 8 (instrucciones -> logica .)
    NUMBER          reduce using rule 8 (instrucciones -> logica .)
    STRING          reduce using rule 8 (instrucciones -> logica .)
    BOOLEAN         reduce using rule 8 (instrucciones -> logica .)
    BIGINT          reduce using rule 8 (instrucciones -> logica .)
    NULL            reduce using rule 8 (instrucciones -> logica .)
    SYMBOL          reduce using rule 8 (instrucciones -> logica .)
    IZQCORCHETE     reduce using rule 8 (instrucciones -> logica .)
    NEW             reduce using rule 8 (instrucciones -> logica .)
    $end            reduce using rule 8 (instrucciones -> logica .)
    DERLLAVE        reduce using rule 8 (instrucciones -> logica .)
    BREAK           reduce using rule 8 (instrucciones -> logica .)


state 9

    (9) instrucciones -> if .

    VAR             reduce using rule 9 (instrucciones -> if .)
    LET             reduce using rule 9 (instrucciones -> if .)
    CONST           reduce using rule 9 (instrucciones -> if .)
    VARIABLE        reduce using rule 9 (instrucciones -> if .)
    RETURN          reduce using rule 9 (instrucciones -> if .)
    IF              reduce using rule 9 (instrucciones -> if .)
    SWITCH          reduce using rule 9 (instrucciones -> if .)
    WHILE           reduce using rule 9 (instrucciones -> if .)
    MAPLOWER        reduce using rule 9 (instrucciones -> if .)
    FUNCTION        reduce using rule 9 (instrucciones -> if .)
    IZQPAREN        reduce using rule 9 (instrucciones -> if .)
    NUMBER          reduce using rule 9 (instrucciones -> if .)
    STRING          reduce using rule 9 (instrucciones -> if .)
    BOOLEAN         reduce using rule 9 (instrucciones -> if .)
    BIGINT          reduce using rule 9 (instrucciones -> if .)
    NULL            reduce using rule 9 (instrucciones -> if .)
    SYMBOL          reduce using rule 9 (instrucciones -> if .)
    IZQCORCHETE     reduce using rule 9 (instrucciones -> if .)
    NEW             reduce using rule 9 (instrucciones -> if .)
    $end            reduce using rule 9 (instrucciones -> if .)
    DERLLAVE        reduce using rule 9 (instrucciones -> if .)
    BREAK           reduce using rule 9 (instrucciones -> if .)


state 10

    (10) instrucciones -> switch .

    VAR             reduce using rule 10 (instrucciones -> switch .)
    LET             reduce using rule 10 (instrucciones -> switch .)
    CONST           reduce using rule 10 (instrucciones -> switch .)
    VARIABLE        reduce using rule 10 (instrucciones -> switch .)
    RETURN          reduce using rule 10 (instrucciones -> switch .)
    IF              reduce using rule 10 (instrucciones -> switch .)
    SWITCH          reduce using rule 10 (instrucciones -> switch .)
    WHILE           reduce using rule 10 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 10 (instrucciones -> switch .)
    FUNCTION        reduce using rule 10 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 10 (instrucciones -> switch .)
    NUMBER          reduce using rule 10 (instrucciones -> switch .)
    STRING          reduce using rule 10 (instrucciones -> switch .)
    BOOLEAN         reduce using rule 10 (instrucciones -> switch .)
    BIGINT          reduce using rule 10 (instrucciones -> switch .)
    NULL            reduce using rule 10 (instrucciones -> switch .)
    SYMBOL          reduce using rule 10 (instrucciones -> switch .)
    IZQCORCHETE     reduce using rule 10 (instrucciones -> switch .)
    NEW             reduce using rule 10 (instrucciones -> switch .)
    $end            reduce using rule 10 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 10 (instrucciones -> switch .)
    BREAK           reduce using rule 10 (instrucciones -> switch .)


state 11

    (11) instrucciones -> while .

    VAR             reduce using rule 11 (instrucciones -> while .)
    LET             reduce using rule 11 (instrucciones -> while .)
    CONST           reduce using rule 11 (instrucciones -> while .)
    VARIABLE        reduce using rule 11 (instrucciones -> while .)
    RETURN          reduce using rule 11 (instrucciones -> while .)
    IF              reduce using rule 11 (instrucciones -> while .)
    SWITCH          reduce using rule 11 (instrucciones -> while .)
    WHILE           reduce using rule 11 (instrucciones -> while .)
    MAPLOWER        reduce using rule 11 (instrucciones -> while .)
    FUNCTION        reduce using rule 11 (instrucciones -> while .)
    IZQPAREN        reduce using rule 11 (instrucciones -> while .)
    NUMBER          reduce using rule 11 (instrucciones -> while .)
    STRING          reduce using rule 11 (instrucciones -> while .)
    BOOLEAN         reduce using rule 11 (instrucciones -> while .)
    BIGINT          reduce using rule 11 (instrucciones -> while .)
    NULL            reduce using rule 11 (instrucciones -> while .)
    SYMBOL          reduce using rule 11 (instrucciones -> while .)
    IZQCORCHETE     reduce using rule 11 (instrucciones -> while .)
    NEW             reduce using rule 11 (instrucciones -> while .)
    $end            reduce using rule 11 (instrucciones -> while .)
    DERLLAVE        reduce using rule 11 (instrucciones -> while .)
    BREAK           reduce using rule 11 (instrucciones -> while .)


state 12

    (12) instrucciones -> pop .

    VAR             reduce using rule 12 (instrucciones -> pop .)
    LET             reduce using rule 12 (instrucciones -> pop .)
    CONST           reduce using rule 12 (instrucciones -> pop .)
    VARIABLE        reduce using rule 12 (instrucciones -> pop .)
    RETURN          reduce using rule 12 (instrucciones -> pop .)
    IF              reduce using rule 12 (instrucciones -> pop .)
    SWITCH          reduce using rule 12 (instrucciones -> pop .)
    WHILE           reduce using rule 12 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 12 (instrucciones -> pop .)
    FUNCTION        reduce using rule 12 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 12 (instrucciones -> pop .)
    NUMBER          reduce using rule 12 (instrucciones -> pop .)
    STRING          reduce using rule 12 (instrucciones -> pop .)
    BOOLEAN         reduce using rule 12 (instrucciones -> pop .)
    BIGINT          reduce using rule 12 (instrucciones -> pop .)
    NULL            reduce using rule 12 (instrucciones -> pop .)
    SYMBOL          reduce using rule 12 (instrucciones -> pop .)
    IZQCORCHETE     reduce using rule 12 (instrucciones -> pop .)
    NEW             reduce using rule 12 (instrucciones -> pop .)
    $end            reduce using rule 12 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 12 (instrucciones -> pop .)
    BREAK           reduce using rule 12 (instrucciones -> pop .)


state 13

    (13) instrucciones -> push .

    VAR             reduce using rule 13 (instrucciones -> push .)
    LET             reduce using rule 13 (instrucciones -> push .)
    CONST           reduce using rule 13 (instrucciones -> push .)
    VARIABLE        reduce using rule 13 (instrucciones -> push .)
    RETURN          reduce using rule 13 (instrucciones -> push .)
    IF              reduce using rule 13 (instrucciones -> push .)
    SWITCH          reduce using rule 13 (instrucciones -> push .)
    WHILE           reduce using rule 13 (instrucciones -> push .)
    MAPLOWER        reduce using rule 13 (instrucciones -> push .)
    FUNCTION        reduce using rule 13 (instrucciones -> push .)
    IZQPAREN        reduce using rule 13 (instrucciones -> push .)
    NUMBER          reduce using rule 13 (instrucciones -> push .)
    STRING          reduce using rule 13 (instrucciones -> push .)
    BOOLEAN         reduce using rule 13 (instrucciones -> push .)
    BIGINT          reduce using rule 13 (instrucciones -> push .)
    NULL            reduce using rule 13 (instrucciones -> push .)
    SYMBOL          reduce using rule 13 (instrucciones -> push .)
    IZQCORCHETE     reduce using rule 13 (instrucciones -> push .)
    NEW             reduce using rule 13 (instrucciones -> push .)
    $end            reduce using rule 13 (instrucciones -> push .)
    DERLLAVE        reduce using rule 13 (instrucciones -> push .)
    BREAK           reduce using rule 13 (instrucciones -> push .)


state 14

    (14) instrucciones -> map_Set .

    VAR             reduce using rule 14 (instrucciones -> map_Set .)
    LET             reduce using rule 14 (instrucciones -> map_Set .)
    CONST           reduce using rule 14 (instrucciones -> map_Set .)
    VARIABLE        reduce using rule 14 (instrucciones -> map_Set .)
    RETURN          reduce using rule 14 (instrucciones -> map_Set .)
    IF              reduce using rule 14 (instrucciones -> map_Set .)
    SWITCH          reduce using rule 14 (instrucciones -> map_Set .)
    WHILE           reduce using rule 14 (instrucciones -> map_Set .)
    MAPLOWER        reduce using rule 14 (instrucciones -> map_Set .)
    FUNCTION        reduce using rule 14 (instrucciones -> map_Set .)
    IZQPAREN        reduce using rule 14 (instrucciones -> map_Set .)
    NUMBER          reduce using rule 14 (instrucciones -> map_Set .)
    STRING          reduce using rule 14 (instrucciones -> map_Set .)
    BOOLEAN         reduce using rule 14 (instrucciones -> map_Set .)
    BIGINT          reduce using rule 14 (instrucciones -> map_Set .)
    NULL            reduce using rule 14 (instrucciones -> map_Set .)
    SYMBOL          reduce using rule 14 (instrucciones -> map_Set .)
    IZQCORCHETE     reduce using rule 14 (instrucciones -> map_Set .)
    NEW             reduce using rule 14 (instrucciones -> map_Set .)
    $end            reduce using rule 14 (instrucciones -> map_Set .)
    DERLLAVE        reduce using rule 14 (instrucciones -> map_Set .)
    BREAK           reduce using rule 14 (instrucciones -> map_Set .)


state 15

    (15) declaracion -> VAR . VARIABLE
    (18) declaracion -> VAR . VARIABLE IGUAL comparacion
    (21) declaracion -> VAR . VARIABLE IGUAL expresion
    (89) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea

    VARIABLE        shift and go to state 60


state 16

    (24) asignacion -> VARIABLE . operadores_asig tipos_datos
    (25) asignacion -> VARIABLE . operadores_asig VARIABLE
    (26) asignacion -> VARIABLE . IGUAL comparacion
    (27) asignacion -> VARIABLE . IGUAL expresion
    (37) factor -> VARIABLE .
    (47) operadores_asig -> . IGUAL
    (48) operadores_asig -> . MASIGUAL
    (49) operadores_asig -> . MENOSIGUAL
    (50) operadores_asig -> . DIVIGUAL
    (51) operadores_asig -> . MODIGUAL
    (52) operadores_asig -> . MULTIGUAL

    IGUAL           shift and go to state 62
    MULT            reduce using rule 37 (factor -> VARIABLE .)
    DIV             reduce using rule 37 (factor -> VARIABLE .)
    MAS             reduce using rule 37 (factor -> VARIABLE .)
    MENOS           reduce using rule 37 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 37 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 37 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 37 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 37 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 37 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 37 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 37 (factor -> VARIABLE .)
    AND             reduce using rule 37 (factor -> VARIABLE .)
    OR              reduce using rule 37 (factor -> VARIABLE .)
    VAR             reduce using rule 37 (factor -> VARIABLE .)
    LET             reduce using rule 37 (factor -> VARIABLE .)
    CONST           reduce using rule 37 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 37 (factor -> VARIABLE .)
    RETURN          reduce using rule 37 (factor -> VARIABLE .)
    IF              reduce using rule 37 (factor -> VARIABLE .)
    SWITCH          reduce using rule 37 (factor -> VARIABLE .)
    WHILE           reduce using rule 37 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 37 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 37 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 37 (factor -> VARIABLE .)
    NUMBER          reduce using rule 37 (factor -> VARIABLE .)
    STRING          reduce using rule 37 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 37 (factor -> VARIABLE .)
    BIGINT          reduce using rule 37 (factor -> VARIABLE .)
    NULL            reduce using rule 37 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 37 (factor -> VARIABLE .)
    IZQCORCHETE     reduce using rule 37 (factor -> VARIABLE .)
    NEW             reduce using rule 37 (factor -> VARIABLE .)
    $end            reduce using rule 37 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 37 (factor -> VARIABLE .)
    BREAK           reduce using rule 37 (factor -> VARIABLE .)
    MASIGUAL        shift and go to state 63
    MENOSIGUAL      shift and go to state 64
    DIVIGUAL        shift and go to state 65
    MODIGUAL        shift and go to state 66
    MULTIGUAL       shift and go to state 67

    operadores_asig                shift and go to state 61

state 17

    (16) declaracion -> LET . VARIABLE
    (19) declaracion -> LET . VARIABLE IGUAL comparacion
    (22) declaracion -> LET . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 68


state 18

    (17) declaracion -> CONST . VARIABLE
    (20) declaracion -> CONST . VARIABLE IGUAL comparacion
    (23) declaracion -> CONST . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 69


state 19

    (38) factor -> tipos_datos .

    MULT            reduce using rule 38 (factor -> tipos_datos .)
    DIV             reduce using rule 38 (factor -> tipos_datos .)
    MAS             reduce using rule 38 (factor -> tipos_datos .)
    MENOS           reduce using rule 38 (factor -> tipos_datos .)
    FINALDELINEA    reduce using rule 38 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 38 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 38 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 38 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 38 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 38 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 38 (factor -> tipos_datos .)
    AND             reduce using rule 38 (factor -> tipos_datos .)
    OR              reduce using rule 38 (factor -> tipos_datos .)
    VAR             reduce using rule 38 (factor -> tipos_datos .)
    LET             reduce using rule 38 (factor -> tipos_datos .)
    CONST           reduce using rule 38 (factor -> tipos_datos .)
    VARIABLE        reduce using rule 38 (factor -> tipos_datos .)
    RETURN          reduce using rule 38 (factor -> tipos_datos .)
    IF              reduce using rule 38 (factor -> tipos_datos .)
    SWITCH          reduce using rule 38 (factor -> tipos_datos .)
    WHILE           reduce using rule 38 (factor -> tipos_datos .)
    MAPLOWER        reduce using rule 38 (factor -> tipos_datos .)
    FUNCTION        reduce using rule 38 (factor -> tipos_datos .)
    IZQPAREN        reduce using rule 38 (factor -> tipos_datos .)
    NUMBER          reduce using rule 38 (factor -> tipos_datos .)
    STRING          reduce using rule 38 (factor -> tipos_datos .)
    BOOLEAN         reduce using rule 38 (factor -> tipos_datos .)
    BIGINT          reduce using rule 38 (factor -> tipos_datos .)
    NULL            reduce using rule 38 (factor -> tipos_datos .)
    SYMBOL          reduce using rule 38 (factor -> tipos_datos .)
    IZQCORCHETE     reduce using rule 38 (factor -> tipos_datos .)
    NEW             reduce using rule 38 (factor -> tipos_datos .)
    $end            reduce using rule 38 (factor -> tipos_datos .)
    DERLLAVE        reduce using rule 38 (factor -> tipos_datos .)
    BREAK           reduce using rule 38 (factor -> tipos_datos .)
    DERPAREN        reduce using rule 38 (factor -> tipos_datos .)


state 20

    (69) funcion -> funcion_enc . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 70


state 21

    (32) expresion -> term .
    (34) term -> term . MULT factor
    (35) term -> term . DIV factor

    MAS             reduce using rule 32 (expresion -> term .)
    MENOS           reduce using rule 32 (expresion -> term .)
    FINALDELINEA    reduce using rule 32 (expresion -> term .)
    MAYORQUE        reduce using rule 32 (expresion -> term .)
    MENORQUE        reduce using rule 32 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 32 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 32 (expresion -> term .)
    NOIGUALQUE      reduce using rule 32 (expresion -> term .)
    IGUALIGUAL      reduce using rule 32 (expresion -> term .)
    AND             reduce using rule 32 (expresion -> term .)
    OR              reduce using rule 32 (expresion -> term .)
    VAR             reduce using rule 32 (expresion -> term .)
    LET             reduce using rule 32 (expresion -> term .)
    CONST           reduce using rule 32 (expresion -> term .)
    VARIABLE        reduce using rule 32 (expresion -> term .)
    RETURN          reduce using rule 32 (expresion -> term .)
    IF              reduce using rule 32 (expresion -> term .)
    SWITCH          reduce using rule 32 (expresion -> term .)
    WHILE           reduce using rule 32 (expresion -> term .)
    MAPLOWER        reduce using rule 32 (expresion -> term .)
    FUNCTION        reduce using rule 32 (expresion -> term .)
    IZQPAREN        reduce using rule 32 (expresion -> term .)
    NUMBER          reduce using rule 32 (expresion -> term .)
    STRING          reduce using rule 32 (expresion -> term .)
    BOOLEAN         reduce using rule 32 (expresion -> term .)
    BIGINT          reduce using rule 32 (expresion -> term .)
    NULL            reduce using rule 32 (expresion -> term .)
    SYMBOL          reduce using rule 32 (expresion -> term .)
    IZQCORCHETE     reduce using rule 32 (expresion -> term .)
    NEW             reduce using rule 32 (expresion -> term .)
    $end            reduce using rule 32 (expresion -> term .)
    DERLLAVE        reduce using rule 32 (expresion -> term .)
    BREAK           reduce using rule 32 (expresion -> term .)
    DERPAREN        reduce using rule 32 (expresion -> term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 22

    (33) expresion -> RETURN . expresion
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    RETURN          shift and go to state 22
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    expresion                      shift and go to state 73
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 23

    (70) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 75


state 24

    (39) factor -> IZQPAREN . expresion DERPAREN
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    RETURN          shift and go to state 22
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    expresion                      shift and go to state 76
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 25

    (73) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 77


state 26

    (78) while -> WHILE . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 78


state 27

    (92) map_Set -> MAPLOWER . PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    PUNTO           shift and go to state 79


state 28

    (64) funcion_enc -> FUNCTION . VARIABLE funcion_param

    VARIABLE        shift and go to state 80


state 29

    (36) term -> factor .

    MULT            reduce using rule 36 (term -> factor .)
    DIV             reduce using rule 36 (term -> factor .)
    MAS             reduce using rule 36 (term -> factor .)
    MENOS           reduce using rule 36 (term -> factor .)
    FINALDELINEA    reduce using rule 36 (term -> factor .)
    MAYORQUE        reduce using rule 36 (term -> factor .)
    MENORQUE        reduce using rule 36 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 36 (term -> factor .)
    MENORIGUALQUE   reduce using rule 36 (term -> factor .)
    NOIGUALQUE      reduce using rule 36 (term -> factor .)
    IGUALIGUAL      reduce using rule 36 (term -> factor .)
    AND             reduce using rule 36 (term -> factor .)
    OR              reduce using rule 36 (term -> factor .)
    VAR             reduce using rule 36 (term -> factor .)
    LET             reduce using rule 36 (term -> factor .)
    CONST           reduce using rule 36 (term -> factor .)
    VARIABLE        reduce using rule 36 (term -> factor .)
    RETURN          reduce using rule 36 (term -> factor .)
    IF              reduce using rule 36 (term -> factor .)
    SWITCH          reduce using rule 36 (term -> factor .)
    WHILE           reduce using rule 36 (term -> factor .)
    MAPLOWER        reduce using rule 36 (term -> factor .)
    FUNCTION        reduce using rule 36 (term -> factor .)
    IZQPAREN        reduce using rule 36 (term -> factor .)
    NUMBER          reduce using rule 36 (term -> factor .)
    STRING          reduce using rule 36 (term -> factor .)
    BOOLEAN         reduce using rule 36 (term -> factor .)
    BIGINT          reduce using rule 36 (term -> factor .)
    NULL            reduce using rule 36 (term -> factor .)
    SYMBOL          reduce using rule 36 (term -> factor .)
    IZQCORCHETE     reduce using rule 36 (term -> factor .)
    NEW             reduce using rule 36 (term -> factor .)
    $end            reduce using rule 36 (term -> factor .)
    DERLLAVE        reduce using rule 36 (term -> factor .)
    BREAK           reduce using rule 36 (term -> factor .)
    DERPAREN        reduce using rule 36 (term -> factor .)


state 30

    (40) tipos_datos -> NUMBER .

    MULT            reduce using rule 40 (tipos_datos -> NUMBER .)
    DIV             reduce using rule 40 (tipos_datos -> NUMBER .)
    MAS             reduce using rule 40 (tipos_datos -> NUMBER .)
    MENOS           reduce using rule 40 (tipos_datos -> NUMBER .)
    FINALDELINEA    reduce using rule 40 (tipos_datos -> NUMBER .)
    MAYORQUE        reduce using rule 40 (tipos_datos -> NUMBER .)
    MENORQUE        reduce using rule 40 (tipos_datos -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 40 (tipos_datos -> NUMBER .)
    MENORIGUALQUE   reduce using rule 40 (tipos_datos -> NUMBER .)
    NOIGUALQUE      reduce using rule 40 (tipos_datos -> NUMBER .)
    IGUALIGUAL      reduce using rule 40 (tipos_datos -> NUMBER .)
    AND             reduce using rule 40 (tipos_datos -> NUMBER .)
    OR              reduce using rule 40 (tipos_datos -> NUMBER .)
    VAR             reduce using rule 40 (tipos_datos -> NUMBER .)
    LET             reduce using rule 40 (tipos_datos -> NUMBER .)
    CONST           reduce using rule 40 (tipos_datos -> NUMBER .)
    VARIABLE        reduce using rule 40 (tipos_datos -> NUMBER .)
    RETURN          reduce using rule 40 (tipos_datos -> NUMBER .)
    IF              reduce using rule 40 (tipos_datos -> NUMBER .)
    SWITCH          reduce using rule 40 (tipos_datos -> NUMBER .)
    WHILE           reduce using rule 40 (tipos_datos -> NUMBER .)
    MAPLOWER        reduce using rule 40 (tipos_datos -> NUMBER .)
    FUNCTION        reduce using rule 40 (tipos_datos -> NUMBER .)
    IZQPAREN        reduce using rule 40 (tipos_datos -> NUMBER .)
    NUMBER          reduce using rule 40 (tipos_datos -> NUMBER .)
    STRING          reduce using rule 40 (tipos_datos -> NUMBER .)
    BOOLEAN         reduce using rule 40 (tipos_datos -> NUMBER .)
    BIGINT          reduce using rule 40 (tipos_datos -> NUMBER .)
    NULL            reduce using rule 40 (tipos_datos -> NUMBER .)
    SYMBOL          reduce using rule 40 (tipos_datos -> NUMBER .)
    IZQCORCHETE     reduce using rule 40 (tipos_datos -> NUMBER .)
    NEW             reduce using rule 40 (tipos_datos -> NUMBER .)
    $end            reduce using rule 40 (tipos_datos -> NUMBER .)
    DERLLAVE        reduce using rule 40 (tipos_datos -> NUMBER .)
    BREAK           reduce using rule 40 (tipos_datos -> NUMBER .)
    DERPAREN        reduce using rule 40 (tipos_datos -> NUMBER .)
    DERCORCHETE     reduce using rule 40 (tipos_datos -> NUMBER .)
    COMA            reduce using rule 40 (tipos_datos -> NUMBER .)
    DOSPUNTOS       reduce using rule 40 (tipos_datos -> NUMBER .)


state 31

    (41) tipos_datos -> STRING .

    MULT            reduce using rule 41 (tipos_datos -> STRING .)
    DIV             reduce using rule 41 (tipos_datos -> STRING .)
    MAS             reduce using rule 41 (tipos_datos -> STRING .)
    MENOS           reduce using rule 41 (tipos_datos -> STRING .)
    FINALDELINEA    reduce using rule 41 (tipos_datos -> STRING .)
    MAYORQUE        reduce using rule 41 (tipos_datos -> STRING .)
    MENORQUE        reduce using rule 41 (tipos_datos -> STRING .)
    MAYORIGUALQUE   reduce using rule 41 (tipos_datos -> STRING .)
    MENORIGUALQUE   reduce using rule 41 (tipos_datos -> STRING .)
    NOIGUALQUE      reduce using rule 41 (tipos_datos -> STRING .)
    IGUALIGUAL      reduce using rule 41 (tipos_datos -> STRING .)
    AND             reduce using rule 41 (tipos_datos -> STRING .)
    OR              reduce using rule 41 (tipos_datos -> STRING .)
    VAR             reduce using rule 41 (tipos_datos -> STRING .)
    LET             reduce using rule 41 (tipos_datos -> STRING .)
    CONST           reduce using rule 41 (tipos_datos -> STRING .)
    VARIABLE        reduce using rule 41 (tipos_datos -> STRING .)
    RETURN          reduce using rule 41 (tipos_datos -> STRING .)
    IF              reduce using rule 41 (tipos_datos -> STRING .)
    SWITCH          reduce using rule 41 (tipos_datos -> STRING .)
    WHILE           reduce using rule 41 (tipos_datos -> STRING .)
    MAPLOWER        reduce using rule 41 (tipos_datos -> STRING .)
    FUNCTION        reduce using rule 41 (tipos_datos -> STRING .)
    IZQPAREN        reduce using rule 41 (tipos_datos -> STRING .)
    NUMBER          reduce using rule 41 (tipos_datos -> STRING .)
    STRING          reduce using rule 41 (tipos_datos -> STRING .)
    BOOLEAN         reduce using rule 41 (tipos_datos -> STRING .)
    BIGINT          reduce using rule 41 (tipos_datos -> STRING .)
    NULL            reduce using rule 41 (tipos_datos -> STRING .)
    SYMBOL          reduce using rule 41 (tipos_datos -> STRING .)
    IZQCORCHETE     reduce using rule 41 (tipos_datos -> STRING .)
    NEW             reduce using rule 41 (tipos_datos -> STRING .)
    $end            reduce using rule 41 (tipos_datos -> STRING .)
    DERLLAVE        reduce using rule 41 (tipos_datos -> STRING .)
    BREAK           reduce using rule 41 (tipos_datos -> STRING .)
    DERPAREN        reduce using rule 41 (tipos_datos -> STRING .)
    DERCORCHETE     reduce using rule 41 (tipos_datos -> STRING .)
    COMA            reduce using rule 41 (tipos_datos -> STRING .)
    DOSPUNTOS       reduce using rule 41 (tipos_datos -> STRING .)


state 32

    (42) tipos_datos -> BOOLEAN .

    MULT            reduce using rule 42 (tipos_datos -> BOOLEAN .)
    DIV             reduce using rule 42 (tipos_datos -> BOOLEAN .)
    MAS             reduce using rule 42 (tipos_datos -> BOOLEAN .)
    MENOS           reduce using rule 42 (tipos_datos -> BOOLEAN .)
    FINALDELINEA    reduce using rule 42 (tipos_datos -> BOOLEAN .)
    MAYORQUE        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    MENORQUE        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    MAYORIGUALQUE   reduce using rule 42 (tipos_datos -> BOOLEAN .)
    MENORIGUALQUE   reduce using rule 42 (tipos_datos -> BOOLEAN .)
    NOIGUALQUE      reduce using rule 42 (tipos_datos -> BOOLEAN .)
    IGUALIGUAL      reduce using rule 42 (tipos_datos -> BOOLEAN .)
    AND             reduce using rule 42 (tipos_datos -> BOOLEAN .)
    OR              reduce using rule 42 (tipos_datos -> BOOLEAN .)
    VAR             reduce using rule 42 (tipos_datos -> BOOLEAN .)
    LET             reduce using rule 42 (tipos_datos -> BOOLEAN .)
    CONST           reduce using rule 42 (tipos_datos -> BOOLEAN .)
    VARIABLE        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    RETURN          reduce using rule 42 (tipos_datos -> BOOLEAN .)
    IF              reduce using rule 42 (tipos_datos -> BOOLEAN .)
    SWITCH          reduce using rule 42 (tipos_datos -> BOOLEAN .)
    WHILE           reduce using rule 42 (tipos_datos -> BOOLEAN .)
    MAPLOWER        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    FUNCTION        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    IZQPAREN        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    NUMBER          reduce using rule 42 (tipos_datos -> BOOLEAN .)
    STRING          reduce using rule 42 (tipos_datos -> BOOLEAN .)
    BOOLEAN         reduce using rule 42 (tipos_datos -> BOOLEAN .)
    BIGINT          reduce using rule 42 (tipos_datos -> BOOLEAN .)
    NULL            reduce using rule 42 (tipos_datos -> BOOLEAN .)
    SYMBOL          reduce using rule 42 (tipos_datos -> BOOLEAN .)
    IZQCORCHETE     reduce using rule 42 (tipos_datos -> BOOLEAN .)
    NEW             reduce using rule 42 (tipos_datos -> BOOLEAN .)
    $end            reduce using rule 42 (tipos_datos -> BOOLEAN .)
    DERLLAVE        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    BREAK           reduce using rule 42 (tipos_datos -> BOOLEAN .)
    DERPAREN        reduce using rule 42 (tipos_datos -> BOOLEAN .)
    DERCORCHETE     reduce using rule 42 (tipos_datos -> BOOLEAN .)
    COMA            reduce using rule 42 (tipos_datos -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 42 (tipos_datos -> BOOLEAN .)


state 33

    (43) tipos_datos -> BIGINT .

    MULT            reduce using rule 43 (tipos_datos -> BIGINT .)
    DIV             reduce using rule 43 (tipos_datos -> BIGINT .)
    MAS             reduce using rule 43 (tipos_datos -> BIGINT .)
    MENOS           reduce using rule 43 (tipos_datos -> BIGINT .)
    FINALDELINEA    reduce using rule 43 (tipos_datos -> BIGINT .)
    MAYORQUE        reduce using rule 43 (tipos_datos -> BIGINT .)
    MENORQUE        reduce using rule 43 (tipos_datos -> BIGINT .)
    MAYORIGUALQUE   reduce using rule 43 (tipos_datos -> BIGINT .)
    MENORIGUALQUE   reduce using rule 43 (tipos_datos -> BIGINT .)
    NOIGUALQUE      reduce using rule 43 (tipos_datos -> BIGINT .)
    IGUALIGUAL      reduce using rule 43 (tipos_datos -> BIGINT .)
    AND             reduce using rule 43 (tipos_datos -> BIGINT .)
    OR              reduce using rule 43 (tipos_datos -> BIGINT .)
    VAR             reduce using rule 43 (tipos_datos -> BIGINT .)
    LET             reduce using rule 43 (tipos_datos -> BIGINT .)
    CONST           reduce using rule 43 (tipos_datos -> BIGINT .)
    VARIABLE        reduce using rule 43 (tipos_datos -> BIGINT .)
    RETURN          reduce using rule 43 (tipos_datos -> BIGINT .)
    IF              reduce using rule 43 (tipos_datos -> BIGINT .)
    SWITCH          reduce using rule 43 (tipos_datos -> BIGINT .)
    WHILE           reduce using rule 43 (tipos_datos -> BIGINT .)
    MAPLOWER        reduce using rule 43 (tipos_datos -> BIGINT .)
    FUNCTION        reduce using rule 43 (tipos_datos -> BIGINT .)
    IZQPAREN        reduce using rule 43 (tipos_datos -> BIGINT .)
    NUMBER          reduce using rule 43 (tipos_datos -> BIGINT .)
    STRING          reduce using rule 43 (tipos_datos -> BIGINT .)
    BOOLEAN         reduce using rule 43 (tipos_datos -> BIGINT .)
    BIGINT          reduce using rule 43 (tipos_datos -> BIGINT .)
    NULL            reduce using rule 43 (tipos_datos -> BIGINT .)
    SYMBOL          reduce using rule 43 (tipos_datos -> BIGINT .)
    IZQCORCHETE     reduce using rule 43 (tipos_datos -> BIGINT .)
    NEW             reduce using rule 43 (tipos_datos -> BIGINT .)
    $end            reduce using rule 43 (tipos_datos -> BIGINT .)
    DERLLAVE        reduce using rule 43 (tipos_datos -> BIGINT .)
    BREAK           reduce using rule 43 (tipos_datos -> BIGINT .)
    DERPAREN        reduce using rule 43 (tipos_datos -> BIGINT .)
    DERCORCHETE     reduce using rule 43 (tipos_datos -> BIGINT .)
    COMA            reduce using rule 43 (tipos_datos -> BIGINT .)
    DOSPUNTOS       reduce using rule 43 (tipos_datos -> BIGINT .)


state 34

    (44) tipos_datos -> NULL .

    MULT            reduce using rule 44 (tipos_datos -> NULL .)
    DIV             reduce using rule 44 (tipos_datos -> NULL .)
    MAS             reduce using rule 44 (tipos_datos -> NULL .)
    MENOS           reduce using rule 44 (tipos_datos -> NULL .)
    FINALDELINEA    reduce using rule 44 (tipos_datos -> NULL .)
    MAYORQUE        reduce using rule 44 (tipos_datos -> NULL .)
    MENORQUE        reduce using rule 44 (tipos_datos -> NULL .)
    MAYORIGUALQUE   reduce using rule 44 (tipos_datos -> NULL .)
    MENORIGUALQUE   reduce using rule 44 (tipos_datos -> NULL .)
    NOIGUALQUE      reduce using rule 44 (tipos_datos -> NULL .)
    IGUALIGUAL      reduce using rule 44 (tipos_datos -> NULL .)
    AND             reduce using rule 44 (tipos_datos -> NULL .)
    OR              reduce using rule 44 (tipos_datos -> NULL .)
    VAR             reduce using rule 44 (tipos_datos -> NULL .)
    LET             reduce using rule 44 (tipos_datos -> NULL .)
    CONST           reduce using rule 44 (tipos_datos -> NULL .)
    VARIABLE        reduce using rule 44 (tipos_datos -> NULL .)
    RETURN          reduce using rule 44 (tipos_datos -> NULL .)
    IF              reduce using rule 44 (tipos_datos -> NULL .)
    SWITCH          reduce using rule 44 (tipos_datos -> NULL .)
    WHILE           reduce using rule 44 (tipos_datos -> NULL .)
    MAPLOWER        reduce using rule 44 (tipos_datos -> NULL .)
    FUNCTION        reduce using rule 44 (tipos_datos -> NULL .)
    IZQPAREN        reduce using rule 44 (tipos_datos -> NULL .)
    NUMBER          reduce using rule 44 (tipos_datos -> NULL .)
    STRING          reduce using rule 44 (tipos_datos -> NULL .)
    BOOLEAN         reduce using rule 44 (tipos_datos -> NULL .)
    BIGINT          reduce using rule 44 (tipos_datos -> NULL .)
    NULL            reduce using rule 44 (tipos_datos -> NULL .)
    SYMBOL          reduce using rule 44 (tipos_datos -> NULL .)
    IZQCORCHETE     reduce using rule 44 (tipos_datos -> NULL .)
    NEW             reduce using rule 44 (tipos_datos -> NULL .)
    $end            reduce using rule 44 (tipos_datos -> NULL .)
    DERLLAVE        reduce using rule 44 (tipos_datos -> NULL .)
    BREAK           reduce using rule 44 (tipos_datos -> NULL .)
    DERPAREN        reduce using rule 44 (tipos_datos -> NULL .)
    DERCORCHETE     reduce using rule 44 (tipos_datos -> NULL .)
    COMA            reduce using rule 44 (tipos_datos -> NULL .)
    DOSPUNTOS       reduce using rule 44 (tipos_datos -> NULL .)


state 35

    (45) tipos_datos -> SYMBOL .

    MULT            reduce using rule 45 (tipos_datos -> SYMBOL .)
    DIV             reduce using rule 45 (tipos_datos -> SYMBOL .)
    MAS             reduce using rule 45 (tipos_datos -> SYMBOL .)
    MENOS           reduce using rule 45 (tipos_datos -> SYMBOL .)
    FINALDELINEA    reduce using rule 45 (tipos_datos -> SYMBOL .)
    MAYORQUE        reduce using rule 45 (tipos_datos -> SYMBOL .)
    MENORQUE        reduce using rule 45 (tipos_datos -> SYMBOL .)
    MAYORIGUALQUE   reduce using rule 45 (tipos_datos -> SYMBOL .)
    MENORIGUALQUE   reduce using rule 45 (tipos_datos -> SYMBOL .)
    NOIGUALQUE      reduce using rule 45 (tipos_datos -> SYMBOL .)
    IGUALIGUAL      reduce using rule 45 (tipos_datos -> SYMBOL .)
    AND             reduce using rule 45 (tipos_datos -> SYMBOL .)
    OR              reduce using rule 45 (tipos_datos -> SYMBOL .)
    VAR             reduce using rule 45 (tipos_datos -> SYMBOL .)
    LET             reduce using rule 45 (tipos_datos -> SYMBOL .)
    CONST           reduce using rule 45 (tipos_datos -> SYMBOL .)
    VARIABLE        reduce using rule 45 (tipos_datos -> SYMBOL .)
    RETURN          reduce using rule 45 (tipos_datos -> SYMBOL .)
    IF              reduce using rule 45 (tipos_datos -> SYMBOL .)
    SWITCH          reduce using rule 45 (tipos_datos -> SYMBOL .)
    WHILE           reduce using rule 45 (tipos_datos -> SYMBOL .)
    MAPLOWER        reduce using rule 45 (tipos_datos -> SYMBOL .)
    FUNCTION        reduce using rule 45 (tipos_datos -> SYMBOL .)
    IZQPAREN        reduce using rule 45 (tipos_datos -> SYMBOL .)
    NUMBER          reduce using rule 45 (tipos_datos -> SYMBOL .)
    STRING          reduce using rule 45 (tipos_datos -> SYMBOL .)
    BOOLEAN         reduce using rule 45 (tipos_datos -> SYMBOL .)
    BIGINT          reduce using rule 45 (tipos_datos -> SYMBOL .)
    NULL            reduce using rule 45 (tipos_datos -> SYMBOL .)
    SYMBOL          reduce using rule 45 (tipos_datos -> SYMBOL .)
    IZQCORCHETE     reduce using rule 45 (tipos_datos -> SYMBOL .)
    NEW             reduce using rule 45 (tipos_datos -> SYMBOL .)
    $end            reduce using rule 45 (tipos_datos -> SYMBOL .)
    DERLLAVE        reduce using rule 45 (tipos_datos -> SYMBOL .)
    BREAK           reduce using rule 45 (tipos_datos -> SYMBOL .)
    DERPAREN        reduce using rule 45 (tipos_datos -> SYMBOL .)
    DERCORCHETE     reduce using rule 45 (tipos_datos -> SYMBOL .)
    COMA            reduce using rule 45 (tipos_datos -> SYMBOL .)
    DOSPUNTOS       reduce using rule 45 (tipos_datos -> SYMBOL .)


state 36

    (46) tipos_datos -> estructuras_datos .

    MULT            reduce using rule 46 (tipos_datos -> estructuras_datos .)
    DIV             reduce using rule 46 (tipos_datos -> estructuras_datos .)
    MAS             reduce using rule 46 (tipos_datos -> estructuras_datos .)
    MENOS           reduce using rule 46 (tipos_datos -> estructuras_datos .)
    FINALDELINEA    reduce using rule 46 (tipos_datos -> estructuras_datos .)
    MAYORQUE        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    MENORQUE        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    MAYORIGUALQUE   reduce using rule 46 (tipos_datos -> estructuras_datos .)
    MENORIGUALQUE   reduce using rule 46 (tipos_datos -> estructuras_datos .)
    NOIGUALQUE      reduce using rule 46 (tipos_datos -> estructuras_datos .)
    IGUALIGUAL      reduce using rule 46 (tipos_datos -> estructuras_datos .)
    AND             reduce using rule 46 (tipos_datos -> estructuras_datos .)
    OR              reduce using rule 46 (tipos_datos -> estructuras_datos .)
    VAR             reduce using rule 46 (tipos_datos -> estructuras_datos .)
    LET             reduce using rule 46 (tipos_datos -> estructuras_datos .)
    CONST           reduce using rule 46 (tipos_datos -> estructuras_datos .)
    VARIABLE        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    RETURN          reduce using rule 46 (tipos_datos -> estructuras_datos .)
    IF              reduce using rule 46 (tipos_datos -> estructuras_datos .)
    SWITCH          reduce using rule 46 (tipos_datos -> estructuras_datos .)
    WHILE           reduce using rule 46 (tipos_datos -> estructuras_datos .)
    MAPLOWER        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    FUNCTION        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    IZQPAREN        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    NUMBER          reduce using rule 46 (tipos_datos -> estructuras_datos .)
    STRING          reduce using rule 46 (tipos_datos -> estructuras_datos .)
    BOOLEAN         reduce using rule 46 (tipos_datos -> estructuras_datos .)
    BIGINT          reduce using rule 46 (tipos_datos -> estructuras_datos .)
    NULL            reduce using rule 46 (tipos_datos -> estructuras_datos .)
    SYMBOL          reduce using rule 46 (tipos_datos -> estructuras_datos .)
    IZQCORCHETE     reduce using rule 46 (tipos_datos -> estructuras_datos .)
    NEW             reduce using rule 46 (tipos_datos -> estructuras_datos .)
    $end            reduce using rule 46 (tipos_datos -> estructuras_datos .)
    DERLLAVE        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    BREAK           reduce using rule 46 (tipos_datos -> estructuras_datos .)
    DERPAREN        reduce using rule 46 (tipos_datos -> estructuras_datos .)
    DERCORCHETE     reduce using rule 46 (tipos_datos -> estructuras_datos .)
    COMA            reduce using rule 46 (tipos_datos -> estructuras_datos .)
    DOSPUNTOS       reduce using rule 46 (tipos_datos -> estructuras_datos .)


state 37

    (79) estructuras_datos -> arreglo .

    MULT            reduce using rule 79 (estructuras_datos -> arreglo .)
    DIV             reduce using rule 79 (estructuras_datos -> arreglo .)
    MAS             reduce using rule 79 (estructuras_datos -> arreglo .)
    MENOS           reduce using rule 79 (estructuras_datos -> arreglo .)
    FINALDELINEA    reduce using rule 79 (estructuras_datos -> arreglo .)
    MAYORQUE        reduce using rule 79 (estructuras_datos -> arreglo .)
    MENORQUE        reduce using rule 79 (estructuras_datos -> arreglo .)
    MAYORIGUALQUE   reduce using rule 79 (estructuras_datos -> arreglo .)
    MENORIGUALQUE   reduce using rule 79 (estructuras_datos -> arreglo .)
    NOIGUALQUE      reduce using rule 79 (estructuras_datos -> arreglo .)
    IGUALIGUAL      reduce using rule 79 (estructuras_datos -> arreglo .)
    AND             reduce using rule 79 (estructuras_datos -> arreglo .)
    OR              reduce using rule 79 (estructuras_datos -> arreglo .)
    VAR             reduce using rule 79 (estructuras_datos -> arreglo .)
    LET             reduce using rule 79 (estructuras_datos -> arreglo .)
    CONST           reduce using rule 79 (estructuras_datos -> arreglo .)
    VARIABLE        reduce using rule 79 (estructuras_datos -> arreglo .)
    RETURN          reduce using rule 79 (estructuras_datos -> arreglo .)
    IF              reduce using rule 79 (estructuras_datos -> arreglo .)
    SWITCH          reduce using rule 79 (estructuras_datos -> arreglo .)
    WHILE           reduce using rule 79 (estructuras_datos -> arreglo .)
    MAPLOWER        reduce using rule 79 (estructuras_datos -> arreglo .)
    FUNCTION        reduce using rule 79 (estructuras_datos -> arreglo .)
    IZQPAREN        reduce using rule 79 (estructuras_datos -> arreglo .)
    NUMBER          reduce using rule 79 (estructuras_datos -> arreglo .)
    STRING          reduce using rule 79 (estructuras_datos -> arreglo .)
    BOOLEAN         reduce using rule 79 (estructuras_datos -> arreglo .)
    BIGINT          reduce using rule 79 (estructuras_datos -> arreglo .)
    NULL            reduce using rule 79 (estructuras_datos -> arreglo .)
    SYMBOL          reduce using rule 79 (estructuras_datos -> arreglo .)
    IZQCORCHETE     reduce using rule 79 (estructuras_datos -> arreglo .)
    NEW             reduce using rule 79 (estructuras_datos -> arreglo .)
    $end            reduce using rule 79 (estructuras_datos -> arreglo .)
    DERLLAVE        reduce using rule 79 (estructuras_datos -> arreglo .)
    BREAK           reduce using rule 79 (estructuras_datos -> arreglo .)
    DERPAREN        reduce using rule 79 (estructuras_datos -> arreglo .)
    DERCORCHETE     reduce using rule 79 (estructuras_datos -> arreglo .)
    COMA            reduce using rule 79 (estructuras_datos -> arreglo .)
    DOSPUNTOS       reduce using rule 79 (estructuras_datos -> arreglo .)


state 38

    (80) estructuras_datos -> map .

    MULT            reduce using rule 80 (estructuras_datos -> map .)
    DIV             reduce using rule 80 (estructuras_datos -> map .)
    MAS             reduce using rule 80 (estructuras_datos -> map .)
    MENOS           reduce using rule 80 (estructuras_datos -> map .)
    FINALDELINEA    reduce using rule 80 (estructuras_datos -> map .)
    MAYORQUE        reduce using rule 80 (estructuras_datos -> map .)
    MENORQUE        reduce using rule 80 (estructuras_datos -> map .)
    MAYORIGUALQUE   reduce using rule 80 (estructuras_datos -> map .)
    MENORIGUALQUE   reduce using rule 80 (estructuras_datos -> map .)
    NOIGUALQUE      reduce using rule 80 (estructuras_datos -> map .)
    IGUALIGUAL      reduce using rule 80 (estructuras_datos -> map .)
    AND             reduce using rule 80 (estructuras_datos -> map .)
    OR              reduce using rule 80 (estructuras_datos -> map .)
    VAR             reduce using rule 80 (estructuras_datos -> map .)
    LET             reduce using rule 80 (estructuras_datos -> map .)
    CONST           reduce using rule 80 (estructuras_datos -> map .)
    VARIABLE        reduce using rule 80 (estructuras_datos -> map .)
    RETURN          reduce using rule 80 (estructuras_datos -> map .)
    IF              reduce using rule 80 (estructuras_datos -> map .)
    SWITCH          reduce using rule 80 (estructuras_datos -> map .)
    WHILE           reduce using rule 80 (estructuras_datos -> map .)
    MAPLOWER        reduce using rule 80 (estructuras_datos -> map .)
    FUNCTION        reduce using rule 80 (estructuras_datos -> map .)
    IZQPAREN        reduce using rule 80 (estructuras_datos -> map .)
    NUMBER          reduce using rule 80 (estructuras_datos -> map .)
    STRING          reduce using rule 80 (estructuras_datos -> map .)
    BOOLEAN         reduce using rule 80 (estructuras_datos -> map .)
    BIGINT          reduce using rule 80 (estructuras_datos -> map .)
    NULL            reduce using rule 80 (estructuras_datos -> map .)
    SYMBOL          reduce using rule 80 (estructuras_datos -> map .)
    IZQCORCHETE     reduce using rule 80 (estructuras_datos -> map .)
    NEW             reduce using rule 80 (estructuras_datos -> map .)
    $end            reduce using rule 80 (estructuras_datos -> map .)
    DERLLAVE        reduce using rule 80 (estructuras_datos -> map .)
    BREAK           reduce using rule 80 (estructuras_datos -> map .)
    DERPAREN        reduce using rule 80 (estructuras_datos -> map .)
    DERCORCHETE     reduce using rule 80 (estructuras_datos -> map .)
    COMA            reduce using rule 80 (estructuras_datos -> map .)
    DOSPUNTOS       reduce using rule 80 (estructuras_datos -> map .)


state 39

    (81) estructuras_datos -> set .

    MULT            reduce using rule 81 (estructuras_datos -> set .)
    DIV             reduce using rule 81 (estructuras_datos -> set .)
    MAS             reduce using rule 81 (estructuras_datos -> set .)
    MENOS           reduce using rule 81 (estructuras_datos -> set .)
    FINALDELINEA    reduce using rule 81 (estructuras_datos -> set .)
    MAYORQUE        reduce using rule 81 (estructuras_datos -> set .)
    MENORQUE        reduce using rule 81 (estructuras_datos -> set .)
    MAYORIGUALQUE   reduce using rule 81 (estructuras_datos -> set .)
    MENORIGUALQUE   reduce using rule 81 (estructuras_datos -> set .)
    NOIGUALQUE      reduce using rule 81 (estructuras_datos -> set .)
    IGUALIGUAL      reduce using rule 81 (estructuras_datos -> set .)
    AND             reduce using rule 81 (estructuras_datos -> set .)
    OR              reduce using rule 81 (estructuras_datos -> set .)
    VAR             reduce using rule 81 (estructuras_datos -> set .)
    LET             reduce using rule 81 (estructuras_datos -> set .)
    CONST           reduce using rule 81 (estructuras_datos -> set .)
    VARIABLE        reduce using rule 81 (estructuras_datos -> set .)
    RETURN          reduce using rule 81 (estructuras_datos -> set .)
    IF              reduce using rule 81 (estructuras_datos -> set .)
    SWITCH          reduce using rule 81 (estructuras_datos -> set .)
    WHILE           reduce using rule 81 (estructuras_datos -> set .)
    MAPLOWER        reduce using rule 81 (estructuras_datos -> set .)
    FUNCTION        reduce using rule 81 (estructuras_datos -> set .)
    IZQPAREN        reduce using rule 81 (estructuras_datos -> set .)
    NUMBER          reduce using rule 81 (estructuras_datos -> set .)
    STRING          reduce using rule 81 (estructuras_datos -> set .)
    BOOLEAN         reduce using rule 81 (estructuras_datos -> set .)
    BIGINT          reduce using rule 81 (estructuras_datos -> set .)
    NULL            reduce using rule 81 (estructuras_datos -> set .)
    SYMBOL          reduce using rule 81 (estructuras_datos -> set .)
    IZQCORCHETE     reduce using rule 81 (estructuras_datos -> set .)
    NEW             reduce using rule 81 (estructuras_datos -> set .)
    $end            reduce using rule 81 (estructuras_datos -> set .)
    DERLLAVE        reduce using rule 81 (estructuras_datos -> set .)
    BREAK           reduce using rule 81 (estructuras_datos -> set .)
    DERPAREN        reduce using rule 81 (estructuras_datos -> set .)
    DERCORCHETE     reduce using rule 81 (estructuras_datos -> set .)
    COMA            reduce using rule 81 (estructuras_datos -> set .)
    DOSPUNTOS       reduce using rule 81 (estructuras_datos -> set .)


state 40

    (82) arreglo -> IZQCORCHETE . lista DERCORCHETE final_linea
    (86) arreglo -> IZQCORCHETE . DERCORCHETE final_linea
    (87) lista -> . lista COMA lista
    (88) lista -> . tipos_datos
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    DERCORCHETE     shift and go to state 82
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    lista                          shift and go to state 81
    tipos_datos                    shift and go to state 83
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 41

    (83) arreglo -> NEW . ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> NEW . ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> NEW . ARRAY IZQPAREN lista DERPAREN final_linea
    (91) map -> NEW . MAP IZQPAREN DERPAREN final_linea
    (93) set -> NEW . SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> NEW . SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> NEW . SET_ESTRUC IZQPAREN lista DERPAREN

    ARRAY           shift and go to state 84
    MAP             shift and go to state 85
    SET_ESTRUC      shift and go to state 86


state 42

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)
    BREAK           reduce using rule 2 (js -> instrucciones js .)


state 43

    (3) instrucciones -> declaracion final_linea .

    VAR             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    LET             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    CONST           reduce using rule 3 (instrucciones -> declaracion final_linea .)
    VARIABLE        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    RETURN          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IF              reduce using rule 3 (instrucciones -> declaracion final_linea .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    WHILE           reduce using rule 3 (instrucciones -> declaracion final_linea .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    STRING          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BOOLEAN         reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BIGINT          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NULL            reduce using rule 3 (instrucciones -> declaracion final_linea .)
    SYMBOL          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IZQCORCHETE     reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NEW             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    $end            reduce using rule 3 (instrucciones -> declaracion final_linea .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BREAK           reduce using rule 3 (instrucciones -> declaracion final_linea .)


state 44

    (61) final_linea -> FINALDELINEA .

    VAR             reduce using rule 61 (final_linea -> FINALDELINEA .)
    LET             reduce using rule 61 (final_linea -> FINALDELINEA .)
    CONST           reduce using rule 61 (final_linea -> FINALDELINEA .)
    VARIABLE        reduce using rule 61 (final_linea -> FINALDELINEA .)
    RETURN          reduce using rule 61 (final_linea -> FINALDELINEA .)
    IF              reduce using rule 61 (final_linea -> FINALDELINEA .)
    SWITCH          reduce using rule 61 (final_linea -> FINALDELINEA .)
    WHILE           reduce using rule 61 (final_linea -> FINALDELINEA .)
    MAPLOWER        reduce using rule 61 (final_linea -> FINALDELINEA .)
    FUNCTION        reduce using rule 61 (final_linea -> FINALDELINEA .)
    IZQPAREN        reduce using rule 61 (final_linea -> FINALDELINEA .)
    NUMBER          reduce using rule 61 (final_linea -> FINALDELINEA .)
    STRING          reduce using rule 61 (final_linea -> FINALDELINEA .)
    BOOLEAN         reduce using rule 61 (final_linea -> FINALDELINEA .)
    BIGINT          reduce using rule 61 (final_linea -> FINALDELINEA .)
    NULL            reduce using rule 61 (final_linea -> FINALDELINEA .)
    SYMBOL          reduce using rule 61 (final_linea -> FINALDELINEA .)
    IZQCORCHETE     reduce using rule 61 (final_linea -> FINALDELINEA .)
    NEW             reduce using rule 61 (final_linea -> FINALDELINEA .)
    $end            reduce using rule 61 (final_linea -> FINALDELINEA .)
    DERLLAVE        reduce using rule 61 (final_linea -> FINALDELINEA .)
    BREAK           reduce using rule 61 (final_linea -> FINALDELINEA .)
    MULT            reduce using rule 61 (final_linea -> FINALDELINEA .)
    DIV             reduce using rule 61 (final_linea -> FINALDELINEA .)
    MAS             reduce using rule 61 (final_linea -> FINALDELINEA .)
    MENOS           reduce using rule 61 (final_linea -> FINALDELINEA .)
    FINALDELINEA    reduce using rule 61 (final_linea -> FINALDELINEA .)
    MAYORQUE        reduce using rule 61 (final_linea -> FINALDELINEA .)
    MENORQUE        reduce using rule 61 (final_linea -> FINALDELINEA .)
    MAYORIGUALQUE   reduce using rule 61 (final_linea -> FINALDELINEA .)
    MENORIGUALQUE   reduce using rule 61 (final_linea -> FINALDELINEA .)
    NOIGUALQUE      reduce using rule 61 (final_linea -> FINALDELINEA .)
    IGUALIGUAL      reduce using rule 61 (final_linea -> FINALDELINEA .)
    AND             reduce using rule 61 (final_linea -> FINALDELINEA .)
    OR              reduce using rule 61 (final_linea -> FINALDELINEA .)
    DERPAREN        reduce using rule 61 (final_linea -> FINALDELINEA .)
    DERCORCHETE     reduce using rule 61 (final_linea -> FINALDELINEA .)
    COMA            reduce using rule 61 (final_linea -> FINALDELINEA .)
    DOSPUNTOS       reduce using rule 61 (final_linea -> FINALDELINEA .)
    CASE            reduce using rule 61 (final_linea -> FINALDELINEA .)
    DEFAULT         reduce using rule 61 (final_linea -> FINALDELINEA .)


state 45

    (62) final_linea -> empty .

    VAR             reduce using rule 62 (final_linea -> empty .)
    LET             reduce using rule 62 (final_linea -> empty .)
    CONST           reduce using rule 62 (final_linea -> empty .)
    VARIABLE        reduce using rule 62 (final_linea -> empty .)
    RETURN          reduce using rule 62 (final_linea -> empty .)
    IF              reduce using rule 62 (final_linea -> empty .)
    SWITCH          reduce using rule 62 (final_linea -> empty .)
    WHILE           reduce using rule 62 (final_linea -> empty .)
    MAPLOWER        reduce using rule 62 (final_linea -> empty .)
    FUNCTION        reduce using rule 62 (final_linea -> empty .)
    IZQPAREN        reduce using rule 62 (final_linea -> empty .)
    NUMBER          reduce using rule 62 (final_linea -> empty .)
    STRING          reduce using rule 62 (final_linea -> empty .)
    BOOLEAN         reduce using rule 62 (final_linea -> empty .)
    BIGINT          reduce using rule 62 (final_linea -> empty .)
    NULL            reduce using rule 62 (final_linea -> empty .)
    SYMBOL          reduce using rule 62 (final_linea -> empty .)
    IZQCORCHETE     reduce using rule 62 (final_linea -> empty .)
    NEW             reduce using rule 62 (final_linea -> empty .)
    $end            reduce using rule 62 (final_linea -> empty .)
    DERLLAVE        reduce using rule 62 (final_linea -> empty .)
    BREAK           reduce using rule 62 (final_linea -> empty .)
    MULT            reduce using rule 62 (final_linea -> empty .)
    DIV             reduce using rule 62 (final_linea -> empty .)
    MAS             reduce using rule 62 (final_linea -> empty .)
    MENOS           reduce using rule 62 (final_linea -> empty .)
    FINALDELINEA    reduce using rule 62 (final_linea -> empty .)
    MAYORQUE        reduce using rule 62 (final_linea -> empty .)
    MENORQUE        reduce using rule 62 (final_linea -> empty .)
    MAYORIGUALQUE   reduce using rule 62 (final_linea -> empty .)
    MENORIGUALQUE   reduce using rule 62 (final_linea -> empty .)
    NOIGUALQUE      reduce using rule 62 (final_linea -> empty .)
    IGUALIGUAL      reduce using rule 62 (final_linea -> empty .)
    AND             reduce using rule 62 (final_linea -> empty .)
    OR              reduce using rule 62 (final_linea -> empty .)
    DERPAREN        reduce using rule 62 (final_linea -> empty .)
    DERCORCHETE     reduce using rule 62 (final_linea -> empty .)
    COMA            reduce using rule 62 (final_linea -> empty .)
    DOSPUNTOS       reduce using rule 62 (final_linea -> empty .)
    CASE            reduce using rule 62 (final_linea -> empty .)
    DEFAULT         reduce using rule 62 (final_linea -> empty .)


state 46

    (4) instrucciones -> asignacion final_linea .

    VAR             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    LET             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    CONST           reduce using rule 4 (instrucciones -> asignacion final_linea .)
    VARIABLE        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    RETURN          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IF              reduce using rule 4 (instrucciones -> asignacion final_linea .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion final_linea .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    STRING          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BOOLEAN         reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BIGINT          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NULL            reduce using rule 4 (instrucciones -> asignacion final_linea .)
    SYMBOL          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IZQCORCHETE     reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NEW             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    $end            reduce using rule 4 (instrucciones -> asignacion final_linea .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BREAK           reduce using rule 4 (instrucciones -> asignacion final_linea .)


state 47

    (6) instrucciones -> expresion final_linea .

    VAR             reduce using rule 6 (instrucciones -> expresion final_linea .)
    LET             reduce using rule 6 (instrucciones -> expresion final_linea .)
    CONST           reduce using rule 6 (instrucciones -> expresion final_linea .)
    VARIABLE        reduce using rule 6 (instrucciones -> expresion final_linea .)
    RETURN          reduce using rule 6 (instrucciones -> expresion final_linea .)
    IF              reduce using rule 6 (instrucciones -> expresion final_linea .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion final_linea .)
    WHILE           reduce using rule 6 (instrucciones -> expresion final_linea .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion final_linea .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion final_linea .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion final_linea .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion final_linea .)
    STRING          reduce using rule 6 (instrucciones -> expresion final_linea .)
    BOOLEAN         reduce using rule 6 (instrucciones -> expresion final_linea .)
    BIGINT          reduce using rule 6 (instrucciones -> expresion final_linea .)
    NULL            reduce using rule 6 (instrucciones -> expresion final_linea .)
    SYMBOL          reduce using rule 6 (instrucciones -> expresion final_linea .)
    IZQCORCHETE     reduce using rule 6 (instrucciones -> expresion final_linea .)
    NEW             reduce using rule 6 (instrucciones -> expresion final_linea .)
    $end            reduce using rule 6 (instrucciones -> expresion final_linea .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion final_linea .)
    BREAK           reduce using rule 6 (instrucciones -> expresion final_linea .)


state 48

    (28) expresion -> expresion MAS . term
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    term                           shift and go to state 87
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 49

    (29) expresion -> expresion MENOS . term
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    term                           shift and go to state 88
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 50

    (30) comparacion -> expresion operadores_comp . term
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    term                           shift and go to state 89
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 51

    (31) logica -> expresion operadores_log . term
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    term                           shift and go to state 90
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 52

    (53) operadores_comp -> MAYORQUE .

    VARIABLE        reduce using rule 53 (operadores_comp -> MAYORQUE .)
    IZQPAREN        reduce using rule 53 (operadores_comp -> MAYORQUE .)
    NUMBER          reduce using rule 53 (operadores_comp -> MAYORQUE .)
    STRING          reduce using rule 53 (operadores_comp -> MAYORQUE .)
    BOOLEAN         reduce using rule 53 (operadores_comp -> MAYORQUE .)
    BIGINT          reduce using rule 53 (operadores_comp -> MAYORQUE .)
    NULL            reduce using rule 53 (operadores_comp -> MAYORQUE .)
    SYMBOL          reduce using rule 53 (operadores_comp -> MAYORQUE .)
    IZQCORCHETE     reduce using rule 53 (operadores_comp -> MAYORQUE .)
    NEW             reduce using rule 53 (operadores_comp -> MAYORQUE .)


state 53

    (54) operadores_comp -> MENORQUE .

    VARIABLE        reduce using rule 54 (operadores_comp -> MENORQUE .)
    IZQPAREN        reduce using rule 54 (operadores_comp -> MENORQUE .)
    NUMBER          reduce using rule 54 (operadores_comp -> MENORQUE .)
    STRING          reduce using rule 54 (operadores_comp -> MENORQUE .)
    BOOLEAN         reduce using rule 54 (operadores_comp -> MENORQUE .)
    BIGINT          reduce using rule 54 (operadores_comp -> MENORQUE .)
    NULL            reduce using rule 54 (operadores_comp -> MENORQUE .)
    SYMBOL          reduce using rule 54 (operadores_comp -> MENORQUE .)
    IZQCORCHETE     reduce using rule 54 (operadores_comp -> MENORQUE .)
    NEW             reduce using rule 54 (operadores_comp -> MENORQUE .)


state 54

    (55) operadores_comp -> MAYORIGUALQUE .

    VARIABLE        reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    NUMBER          reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    STRING          reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    BIGINT          reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    NULL            reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    SYMBOL          reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    IZQCORCHETE     reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)
    NEW             reduce using rule 55 (operadores_comp -> MAYORIGUALQUE .)


state 55

    (56) operadores_comp -> MENORIGUALQUE .

    VARIABLE        reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    NUMBER          reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    STRING          reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    BIGINT          reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    NULL            reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    SYMBOL          reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    IZQCORCHETE     reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)
    NEW             reduce using rule 56 (operadores_comp -> MENORIGUALQUE .)


state 56

    (57) operadores_comp -> NOIGUALQUE .

    VARIABLE        reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    NUMBER          reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    STRING          reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    BOOLEAN         reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    BIGINT          reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    NULL            reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    SYMBOL          reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    IZQCORCHETE     reduce using rule 57 (operadores_comp -> NOIGUALQUE .)
    NEW             reduce using rule 57 (operadores_comp -> NOIGUALQUE .)


state 57

    (58) operadores_comp -> IGUALIGUAL .

    VARIABLE        reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    IZQPAREN        reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    NUMBER          reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    STRING          reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    BOOLEAN         reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    BIGINT          reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    NULL            reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    SYMBOL          reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    IZQCORCHETE     reduce using rule 58 (operadores_comp -> IGUALIGUAL .)
    NEW             reduce using rule 58 (operadores_comp -> IGUALIGUAL .)


state 58

    (59) operadores_log -> AND .

    VARIABLE        reduce using rule 59 (operadores_log -> AND .)
    IZQPAREN        reduce using rule 59 (operadores_log -> AND .)
    NUMBER          reduce using rule 59 (operadores_log -> AND .)
    STRING          reduce using rule 59 (operadores_log -> AND .)
    BOOLEAN         reduce using rule 59 (operadores_log -> AND .)
    BIGINT          reduce using rule 59 (operadores_log -> AND .)
    NULL            reduce using rule 59 (operadores_log -> AND .)
    SYMBOL          reduce using rule 59 (operadores_log -> AND .)
    IZQCORCHETE     reduce using rule 59 (operadores_log -> AND .)
    NEW             reduce using rule 59 (operadores_log -> AND .)


state 59

    (60) operadores_log -> OR .

    VARIABLE        reduce using rule 60 (operadores_log -> OR .)
    IZQPAREN        reduce using rule 60 (operadores_log -> OR .)
    NUMBER          reduce using rule 60 (operadores_log -> OR .)
    STRING          reduce using rule 60 (operadores_log -> OR .)
    BOOLEAN         reduce using rule 60 (operadores_log -> OR .)
    BIGINT          reduce using rule 60 (operadores_log -> OR .)
    NULL            reduce using rule 60 (operadores_log -> OR .)
    SYMBOL          reduce using rule 60 (operadores_log -> OR .)
    IZQCORCHETE     reduce using rule 60 (operadores_log -> OR .)
    NEW             reduce using rule 60 (operadores_log -> OR .)


state 60

    (15) declaracion -> VAR VARIABLE .
    (18) declaracion -> VAR VARIABLE . IGUAL comparacion
    (21) declaracion -> VAR VARIABLE . IGUAL expresion
    (89) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea

    FINALDELINEA    reduce using rule 15 (declaracion -> VAR VARIABLE .)
    VAR             reduce using rule 15 (declaracion -> VAR VARIABLE .)
    LET             reduce using rule 15 (declaracion -> VAR VARIABLE .)
    CONST           reduce using rule 15 (declaracion -> VAR VARIABLE .)
    VARIABLE        reduce using rule 15 (declaracion -> VAR VARIABLE .)
    RETURN          reduce using rule 15 (declaracion -> VAR VARIABLE .)
    IF              reduce using rule 15 (declaracion -> VAR VARIABLE .)
    SWITCH          reduce using rule 15 (declaracion -> VAR VARIABLE .)
    WHILE           reduce using rule 15 (declaracion -> VAR VARIABLE .)
    MAPLOWER        reduce using rule 15 (declaracion -> VAR VARIABLE .)
    FUNCTION        reduce using rule 15 (declaracion -> VAR VARIABLE .)
    IZQPAREN        reduce using rule 15 (declaracion -> VAR VARIABLE .)
    NUMBER          reduce using rule 15 (declaracion -> VAR VARIABLE .)
    STRING          reduce using rule 15 (declaracion -> VAR VARIABLE .)
    BOOLEAN         reduce using rule 15 (declaracion -> VAR VARIABLE .)
    BIGINT          reduce using rule 15 (declaracion -> VAR VARIABLE .)
    NULL            reduce using rule 15 (declaracion -> VAR VARIABLE .)
    SYMBOL          reduce using rule 15 (declaracion -> VAR VARIABLE .)
    IZQCORCHETE     reduce using rule 15 (declaracion -> VAR VARIABLE .)
    NEW             reduce using rule 15 (declaracion -> VAR VARIABLE .)
    $end            reduce using rule 15 (declaracion -> VAR VARIABLE .)
    DERLLAVE        reduce using rule 15 (declaracion -> VAR VARIABLE .)
    BREAK           reduce using rule 15 (declaracion -> VAR VARIABLE .)
    IGUAL           shift and go to state 91


state 61

    (24) asignacion -> VARIABLE operadores_asig . tipos_datos
    (25) asignacion -> VARIABLE operadores_asig . VARIABLE
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 92
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    tipos_datos                    shift and go to state 93
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 62

    (26) asignacion -> VARIABLE IGUAL . comparacion
    (27) asignacion -> VARIABLE IGUAL . expresion
    (47) operadores_asig -> IGUAL .
    (30) comparacion -> . expresion operadores_comp term
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BIGINT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SYMBOL resolved as shift
  ! shift/reduce conflict for IZQCORCHETE resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
    RETURN          shift and go to state 22
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

  ! VARIABLE        [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! NUMBER          [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! STRING          [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! BOOLEAN         [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! BIGINT          [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! NULL            [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! SYMBOL          [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! IZQCORCHETE     [ reduce using rule 47 (operadores_asig -> IGUAL .) ]
  ! NEW             [ reduce using rule 47 (operadores_asig -> IGUAL .) ]

    comparacion                    shift and go to state 94
    expresion                      shift and go to state 95
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 63

    (48) operadores_asig -> MASIGUAL .

    VARIABLE        reduce using rule 48 (operadores_asig -> MASIGUAL .)
    NUMBER          reduce using rule 48 (operadores_asig -> MASIGUAL .)
    STRING          reduce using rule 48 (operadores_asig -> MASIGUAL .)
    BOOLEAN         reduce using rule 48 (operadores_asig -> MASIGUAL .)
    BIGINT          reduce using rule 48 (operadores_asig -> MASIGUAL .)
    NULL            reduce using rule 48 (operadores_asig -> MASIGUAL .)
    SYMBOL          reduce using rule 48 (operadores_asig -> MASIGUAL .)
    IZQCORCHETE     reduce using rule 48 (operadores_asig -> MASIGUAL .)
    NEW             reduce using rule 48 (operadores_asig -> MASIGUAL .)


state 64

    (49) operadores_asig -> MENOSIGUAL .

    VARIABLE        reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    NUMBER          reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    STRING          reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    BIGINT          reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    NULL            reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    IZQCORCHETE     reduce using rule 49 (operadores_asig -> MENOSIGUAL .)
    NEW             reduce using rule 49 (operadores_asig -> MENOSIGUAL .)


state 65

    (50) operadores_asig -> DIVIGUAL .

    VARIABLE        reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    NUMBER          reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    STRING          reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    BIGINT          reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    NULL            reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    SYMBOL          reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    IZQCORCHETE     reduce using rule 50 (operadores_asig -> DIVIGUAL .)
    NEW             reduce using rule 50 (operadores_asig -> DIVIGUAL .)


state 66

    (51) operadores_asig -> MODIGUAL .

    VARIABLE        reduce using rule 51 (operadores_asig -> MODIGUAL .)
    NUMBER          reduce using rule 51 (operadores_asig -> MODIGUAL .)
    STRING          reduce using rule 51 (operadores_asig -> MODIGUAL .)
    BOOLEAN         reduce using rule 51 (operadores_asig -> MODIGUAL .)
    BIGINT          reduce using rule 51 (operadores_asig -> MODIGUAL .)
    NULL            reduce using rule 51 (operadores_asig -> MODIGUAL .)
    SYMBOL          reduce using rule 51 (operadores_asig -> MODIGUAL .)
    IZQCORCHETE     reduce using rule 51 (operadores_asig -> MODIGUAL .)
    NEW             reduce using rule 51 (operadores_asig -> MODIGUAL .)


state 67

    (52) operadores_asig -> MULTIGUAL .

    VARIABLE        reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    NUMBER          reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    STRING          reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    BOOLEAN         reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    BIGINT          reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    NULL            reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    SYMBOL          reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    IZQCORCHETE     reduce using rule 52 (operadores_asig -> MULTIGUAL .)
    NEW             reduce using rule 52 (operadores_asig -> MULTIGUAL .)


state 68

    (16) declaracion -> LET VARIABLE .
    (19) declaracion -> LET VARIABLE . IGUAL comparacion
    (22) declaracion -> LET VARIABLE . IGUAL expresion

    FINALDELINEA    reduce using rule 16 (declaracion -> LET VARIABLE .)
    VAR             reduce using rule 16 (declaracion -> LET VARIABLE .)
    LET             reduce using rule 16 (declaracion -> LET VARIABLE .)
    CONST           reduce using rule 16 (declaracion -> LET VARIABLE .)
    VARIABLE        reduce using rule 16 (declaracion -> LET VARIABLE .)
    RETURN          reduce using rule 16 (declaracion -> LET VARIABLE .)
    IF              reduce using rule 16 (declaracion -> LET VARIABLE .)
    SWITCH          reduce using rule 16 (declaracion -> LET VARIABLE .)
    WHILE           reduce using rule 16 (declaracion -> LET VARIABLE .)
    MAPLOWER        reduce using rule 16 (declaracion -> LET VARIABLE .)
    FUNCTION        reduce using rule 16 (declaracion -> LET VARIABLE .)
    IZQPAREN        reduce using rule 16 (declaracion -> LET VARIABLE .)
    NUMBER          reduce using rule 16 (declaracion -> LET VARIABLE .)
    STRING          reduce using rule 16 (declaracion -> LET VARIABLE .)
    BOOLEAN         reduce using rule 16 (declaracion -> LET VARIABLE .)
    BIGINT          reduce using rule 16 (declaracion -> LET VARIABLE .)
    NULL            reduce using rule 16 (declaracion -> LET VARIABLE .)
    SYMBOL          reduce using rule 16 (declaracion -> LET VARIABLE .)
    IZQCORCHETE     reduce using rule 16 (declaracion -> LET VARIABLE .)
    NEW             reduce using rule 16 (declaracion -> LET VARIABLE .)
    $end            reduce using rule 16 (declaracion -> LET VARIABLE .)
    DERLLAVE        reduce using rule 16 (declaracion -> LET VARIABLE .)
    BREAK           reduce using rule 16 (declaracion -> LET VARIABLE .)
    IGUAL           shift and go to state 96


state 69

    (17) declaracion -> CONST VARIABLE .
    (20) declaracion -> CONST VARIABLE . IGUAL comparacion
    (23) declaracion -> CONST VARIABLE . IGUAL expresion

    FINALDELINEA    reduce using rule 17 (declaracion -> CONST VARIABLE .)
    VAR             reduce using rule 17 (declaracion -> CONST VARIABLE .)
    LET             reduce using rule 17 (declaracion -> CONST VARIABLE .)
    CONST           reduce using rule 17 (declaracion -> CONST VARIABLE .)
    VARIABLE        reduce using rule 17 (declaracion -> CONST VARIABLE .)
    RETURN          reduce using rule 17 (declaracion -> CONST VARIABLE .)
    IF              reduce using rule 17 (declaracion -> CONST VARIABLE .)
    SWITCH          reduce using rule 17 (declaracion -> CONST VARIABLE .)
    WHILE           reduce using rule 17 (declaracion -> CONST VARIABLE .)
    MAPLOWER        reduce using rule 17 (declaracion -> CONST VARIABLE .)
    FUNCTION        reduce using rule 17 (declaracion -> CONST VARIABLE .)
    IZQPAREN        reduce using rule 17 (declaracion -> CONST VARIABLE .)
    NUMBER          reduce using rule 17 (declaracion -> CONST VARIABLE .)
    STRING          reduce using rule 17 (declaracion -> CONST VARIABLE .)
    BOOLEAN         reduce using rule 17 (declaracion -> CONST VARIABLE .)
    BIGINT          reduce using rule 17 (declaracion -> CONST VARIABLE .)
    NULL            reduce using rule 17 (declaracion -> CONST VARIABLE .)
    SYMBOL          reduce using rule 17 (declaracion -> CONST VARIABLE .)
    IZQCORCHETE     reduce using rule 17 (declaracion -> CONST VARIABLE .)
    NEW             reduce using rule 17 (declaracion -> CONST VARIABLE .)
    $end            reduce using rule 17 (declaracion -> CONST VARIABLE .)
    DERLLAVE        reduce using rule 17 (declaracion -> CONST VARIABLE .)
    BREAK           reduce using rule 17 (declaracion -> CONST VARIABLE .)
    IGUAL           shift and go to state 97


state 70

    (69) funcion -> funcion_enc IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    funcion_enc                    shift and go to state 20
    js                             shift and go to state 98
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    if                             shift and go to state 9
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    tipos_datos                    shift and go to state 19
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 71

    (34) term -> term MULT . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    factor                         shift and go to state 99
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 72

    (35) term -> term DIV . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    factor                         shift and go to state 100
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 73

    (33) expresion -> RETURN expresion .
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    FINALDELINEA    reduce using rule 33 (expresion -> RETURN expresion .)
    MAYORQUE        reduce using rule 33 (expresion -> RETURN expresion .)
    MENORQUE        reduce using rule 33 (expresion -> RETURN expresion .)
    MAYORIGUALQUE   reduce using rule 33 (expresion -> RETURN expresion .)
    MENORIGUALQUE   reduce using rule 33 (expresion -> RETURN expresion .)
    NOIGUALQUE      reduce using rule 33 (expresion -> RETURN expresion .)
    IGUALIGUAL      reduce using rule 33 (expresion -> RETURN expresion .)
    AND             reduce using rule 33 (expresion -> RETURN expresion .)
    OR              reduce using rule 33 (expresion -> RETURN expresion .)
    VAR             reduce using rule 33 (expresion -> RETURN expresion .)
    LET             reduce using rule 33 (expresion -> RETURN expresion .)
    CONST           reduce using rule 33 (expresion -> RETURN expresion .)
    VARIABLE        reduce using rule 33 (expresion -> RETURN expresion .)
    RETURN          reduce using rule 33 (expresion -> RETURN expresion .)
    IF              reduce using rule 33 (expresion -> RETURN expresion .)
    SWITCH          reduce using rule 33 (expresion -> RETURN expresion .)
    WHILE           reduce using rule 33 (expresion -> RETURN expresion .)
    MAPLOWER        reduce using rule 33 (expresion -> RETURN expresion .)
    FUNCTION        reduce using rule 33 (expresion -> RETURN expresion .)
    IZQPAREN        reduce using rule 33 (expresion -> RETURN expresion .)
    NUMBER          reduce using rule 33 (expresion -> RETURN expresion .)
    STRING          reduce using rule 33 (expresion -> RETURN expresion .)
    BOOLEAN         reduce using rule 33 (expresion -> RETURN expresion .)
    BIGINT          reduce using rule 33 (expresion -> RETURN expresion .)
    NULL            reduce using rule 33 (expresion -> RETURN expresion .)
    SYMBOL          reduce using rule 33 (expresion -> RETURN expresion .)
    IZQCORCHETE     reduce using rule 33 (expresion -> RETURN expresion .)
    NEW             reduce using rule 33 (expresion -> RETURN expresion .)
    $end            reduce using rule 33 (expresion -> RETURN expresion .)
    DERLLAVE        reduce using rule 33 (expresion -> RETURN expresion .)
    BREAK           reduce using rule 33 (expresion -> RETURN expresion .)
    DERPAREN        reduce using rule 33 (expresion -> RETURN expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49

  ! MAS             [ reduce using rule 33 (expresion -> RETURN expresion .) ]
  ! MENOS           [ reduce using rule 33 (expresion -> RETURN expresion .) ]


state 74

    (37) factor -> VARIABLE .

    MULT            reduce using rule 37 (factor -> VARIABLE .)
    DIV             reduce using rule 37 (factor -> VARIABLE .)
    MAS             reduce using rule 37 (factor -> VARIABLE .)
    MENOS           reduce using rule 37 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 37 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 37 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 37 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 37 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 37 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 37 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 37 (factor -> VARIABLE .)
    AND             reduce using rule 37 (factor -> VARIABLE .)
    OR              reduce using rule 37 (factor -> VARIABLE .)
    VAR             reduce using rule 37 (factor -> VARIABLE .)
    LET             reduce using rule 37 (factor -> VARIABLE .)
    CONST           reduce using rule 37 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 37 (factor -> VARIABLE .)
    RETURN          reduce using rule 37 (factor -> VARIABLE .)
    IF              reduce using rule 37 (factor -> VARIABLE .)
    SWITCH          reduce using rule 37 (factor -> VARIABLE .)
    WHILE           reduce using rule 37 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 37 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 37 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 37 (factor -> VARIABLE .)
    NUMBER          reduce using rule 37 (factor -> VARIABLE .)
    STRING          reduce using rule 37 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 37 (factor -> VARIABLE .)
    BIGINT          reduce using rule 37 (factor -> VARIABLE .)
    NULL            reduce using rule 37 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 37 (factor -> VARIABLE .)
    IZQCORCHETE     reduce using rule 37 (factor -> VARIABLE .)
    NEW             reduce using rule 37 (factor -> VARIABLE .)
    $end            reduce using rule 37 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 37 (factor -> VARIABLE .)
    BREAK           reduce using rule 37 (factor -> VARIABLE .)
    DERPAREN        reduce using rule 37 (factor -> VARIABLE .)


state 75

    (70) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (30) comparacion -> . expresion operadores_comp term
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    RETURN          shift and go to state 22
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 101
    expresion                      shift and go to state 102
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 76

    (39) factor -> IZQPAREN expresion . DERPAREN
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 103
    MAS             shift and go to state 48
    MENOS           shift and go to state 49


state 77

    (73) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 104


state 78

    (78) while -> WHILE IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (30) comparacion -> . expresion operadores_comp term
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    RETURN          shift and go to state 22
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 105
    expresion                      shift and go to state 102
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 79

    (92) map_Set -> MAPLOWER PUNTO . SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    SET_METODO      shift and go to state 106


state 80

    (64) funcion_enc -> FUNCTION VARIABLE . funcion_param
    (65) funcion_param -> . IZQPAREN parametros DERPAREN

    IZQPAREN        shift and go to state 108

    funcion_param                  shift and go to state 107

state 81

    (82) arreglo -> IZQCORCHETE lista . DERCORCHETE final_linea
    (87) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 109
    COMA            shift and go to state 110


state 82

    (86) arreglo -> IZQCORCHETE DERCORCHETE . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    MULT            reduce using rule 63 (empty -> .)
    DIV             reduce using rule 63 (empty -> .)
    MAS             reduce using rule 63 (empty -> .)
    MENOS           reduce using rule 63 (empty -> .)
    MAYORQUE        reduce using rule 63 (empty -> .)
    MENORQUE        reduce using rule 63 (empty -> .)
    MAYORIGUALQUE   reduce using rule 63 (empty -> .)
    MENORIGUALQUE   reduce using rule 63 (empty -> .)
    NOIGUALQUE      reduce using rule 63 (empty -> .)
    IGUALIGUAL      reduce using rule 63 (empty -> .)
    AND             reduce using rule 63 (empty -> .)
    OR              reduce using rule 63 (empty -> .)
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    DERPAREN        reduce using rule 63 (empty -> .)
    DERCORCHETE     reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)
    DOSPUNTOS       reduce using rule 63 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 63 (empty -> .) ]

    final_linea                    shift and go to state 111
    empty                          shift and go to state 45

state 83

    (88) lista -> tipos_datos .

    DERCORCHETE     reduce using rule 88 (lista -> tipos_datos .)
    COMA            reduce using rule 88 (lista -> tipos_datos .)
    DERPAREN        reduce using rule 88 (lista -> tipos_datos .)


state 84

    (83) arreglo -> NEW ARRAY . IZQPAREN DERPAREN final_linea
    (84) arreglo -> NEW ARRAY . IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> NEW ARRAY . IZQPAREN lista DERPAREN final_linea

    IZQPAREN        shift and go to state 112


state 85

    (91) map -> NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 113


state 86

    (93) set -> NEW SET_ESTRUC . IZQPAREN DERPAREN
    (94) set -> NEW SET_ESTRUC . IZQPAREN NULL DERPAREN
    (95) set -> NEW SET_ESTRUC . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 114


state 87

    (28) expresion -> expresion MAS term .
    (34) term -> term . MULT factor
    (35) term -> term . DIV factor

    MAS             reduce using rule 28 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 28 (expresion -> expresion MAS term .)
    FINALDELINEA    reduce using rule 28 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 28 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 28 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 28 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 28 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 28 (expresion -> expresion MAS term .)
    IGUALIGUAL      reduce using rule 28 (expresion -> expresion MAS term .)
    AND             reduce using rule 28 (expresion -> expresion MAS term .)
    OR              reduce using rule 28 (expresion -> expresion MAS term .)
    VAR             reduce using rule 28 (expresion -> expresion MAS term .)
    LET             reduce using rule 28 (expresion -> expresion MAS term .)
    CONST           reduce using rule 28 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 28 (expresion -> expresion MAS term .)
    RETURN          reduce using rule 28 (expresion -> expresion MAS term .)
    IF              reduce using rule 28 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 28 (expresion -> expresion MAS term .)
    WHILE           reduce using rule 28 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 28 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 28 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 28 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 28 (expresion -> expresion MAS term .)
    STRING          reduce using rule 28 (expresion -> expresion MAS term .)
    BOOLEAN         reduce using rule 28 (expresion -> expresion MAS term .)
    BIGINT          reduce using rule 28 (expresion -> expresion MAS term .)
    NULL            reduce using rule 28 (expresion -> expresion MAS term .)
    SYMBOL          reduce using rule 28 (expresion -> expresion MAS term .)
    IZQCORCHETE     reduce using rule 28 (expresion -> expresion MAS term .)
    NEW             reduce using rule 28 (expresion -> expresion MAS term .)
    $end            reduce using rule 28 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 28 (expresion -> expresion MAS term .)
    BREAK           reduce using rule 28 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 28 (expresion -> expresion MAS term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 88

    (29) expresion -> expresion MENOS term .
    (34) term -> term . MULT factor
    (35) term -> term . DIV factor

    MAS             reduce using rule 29 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 29 (expresion -> expresion MENOS term .)
    FINALDELINEA    reduce using rule 29 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 29 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 29 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 29 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 29 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 29 (expresion -> expresion MENOS term .)
    IGUALIGUAL      reduce using rule 29 (expresion -> expresion MENOS term .)
    AND             reduce using rule 29 (expresion -> expresion MENOS term .)
    OR              reduce using rule 29 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 29 (expresion -> expresion MENOS term .)
    LET             reduce using rule 29 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 29 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 29 (expresion -> expresion MENOS term .)
    RETURN          reduce using rule 29 (expresion -> expresion MENOS term .)
    IF              reduce using rule 29 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 29 (expresion -> expresion MENOS term .)
    WHILE           reduce using rule 29 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 29 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 29 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 29 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 29 (expresion -> expresion MENOS term .)
    STRING          reduce using rule 29 (expresion -> expresion MENOS term .)
    BOOLEAN         reduce using rule 29 (expresion -> expresion MENOS term .)
    BIGINT          reduce using rule 29 (expresion -> expresion MENOS term .)
    NULL            reduce using rule 29 (expresion -> expresion MENOS term .)
    SYMBOL          reduce using rule 29 (expresion -> expresion MENOS term .)
    IZQCORCHETE     reduce using rule 29 (expresion -> expresion MENOS term .)
    NEW             reduce using rule 29 (expresion -> expresion MENOS term .)
    $end            reduce using rule 29 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 29 (expresion -> expresion MENOS term .)
    BREAK           reduce using rule 29 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 29 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 89

    (30) comparacion -> expresion operadores_comp term .
    (34) term -> term . MULT factor
    (35) term -> term . DIV factor

    VAR             reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    LET             reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    CONST           reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    VARIABLE        reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    RETURN          reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    IF              reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    SWITCH          reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    WHILE           reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    MAPLOWER        reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    FUNCTION        reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    IZQPAREN        reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    NUMBER          reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    STRING          reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    BOOLEAN         reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    BIGINT          reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    NULL            reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    SYMBOL          reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    IZQCORCHETE     reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    NEW             reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    $end            reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    DERLLAVE        reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    BREAK           reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    FINALDELINEA    reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    DERPAREN        reduce using rule 30 (comparacion -> expresion operadores_comp term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 90

    (31) logica -> expresion operadores_log term .
    (34) term -> term . MULT factor
    (35) term -> term . DIV factor

    VAR             reduce using rule 31 (logica -> expresion operadores_log term .)
    LET             reduce using rule 31 (logica -> expresion operadores_log term .)
    CONST           reduce using rule 31 (logica -> expresion operadores_log term .)
    VARIABLE        reduce using rule 31 (logica -> expresion operadores_log term .)
    RETURN          reduce using rule 31 (logica -> expresion operadores_log term .)
    IF              reduce using rule 31 (logica -> expresion operadores_log term .)
    SWITCH          reduce using rule 31 (logica -> expresion operadores_log term .)
    WHILE           reduce using rule 31 (logica -> expresion operadores_log term .)
    MAPLOWER        reduce using rule 31 (logica -> expresion operadores_log term .)
    FUNCTION        reduce using rule 31 (logica -> expresion operadores_log term .)
    IZQPAREN        reduce using rule 31 (logica -> expresion operadores_log term .)
    NUMBER          reduce using rule 31 (logica -> expresion operadores_log term .)
    STRING          reduce using rule 31 (logica -> expresion operadores_log term .)
    BOOLEAN         reduce using rule 31 (logica -> expresion operadores_log term .)
    BIGINT          reduce using rule 31 (logica -> expresion operadores_log term .)
    NULL            reduce using rule 31 (logica -> expresion operadores_log term .)
    SYMBOL          reduce using rule 31 (logica -> expresion operadores_log term .)
    IZQCORCHETE     reduce using rule 31 (logica -> expresion operadores_log term .)
    NEW             reduce using rule 31 (logica -> expresion operadores_log term .)
    $end            reduce using rule 31 (logica -> expresion operadores_log term .)
    DERLLAVE        reduce using rule 31 (logica -> expresion operadores_log term .)
    BREAK           reduce using rule 31 (logica -> expresion operadores_log term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 91

    (18) declaracion -> VAR VARIABLE IGUAL . comparacion
    (21) declaracion -> VAR VARIABLE IGUAL . expresion
    (89) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (30) comparacion -> . expresion operadores_comp term
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 115
    RETURN          shift and go to state 22
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 116
    expresion                      shift and go to state 117
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 92

    (25) asignacion -> VARIABLE operadores_asig VARIABLE .

    FINALDELINEA    reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    VAR             reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    LET             reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    CONST           reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    VARIABLE        reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    RETURN          reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    IF              reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    SWITCH          reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    WHILE           reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    MAPLOWER        reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    FUNCTION        reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    IZQPAREN        reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    NUMBER          reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    STRING          reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    BOOLEAN         reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    BIGINT          reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    NULL            reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    SYMBOL          reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    IZQCORCHETE     reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    NEW             reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    $end            reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    DERLLAVE        reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    BREAK           reduce using rule 25 (asignacion -> VARIABLE operadores_asig VARIABLE .)


state 93

    (24) asignacion -> VARIABLE operadores_asig tipos_datos .

    FINALDELINEA    reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    VAR             reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    LET             reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    CONST           reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    VARIABLE        reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    RETURN          reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IF              reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    SWITCH          reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    WHILE           reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    MAPLOWER        reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    FUNCTION        reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IZQPAREN        reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NUMBER          reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    STRING          reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BOOLEAN         reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BIGINT          reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NULL            reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    SYMBOL          reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IZQCORCHETE     reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NEW             reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    $end            reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    DERLLAVE        reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BREAK           reduce using rule 24 (asignacion -> VARIABLE operadores_asig tipos_datos .)


state 94

    (26) asignacion -> VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    LET             reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    IF              reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    $end            reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 26 (asignacion -> VARIABLE IGUAL comparacion .)


state 95

    (27) asignacion -> VARIABLE IGUAL expresion .
    (30) comparacion -> expresion . operadores_comp term
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term
    (53) operadores_comp -> . MAYORQUE
    (54) operadores_comp -> . MENORQUE
    (55) operadores_comp -> . MAYORIGUALQUE
    (56) operadores_comp -> . MENORIGUALQUE
    (57) operadores_comp -> . NOIGUALQUE
    (58) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    VAR             reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    LET             reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    CONST           reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    IF              reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    STRING          reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    NULL            reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    NEW             reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    $end            reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 27 (asignacion -> VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 96

    (19) declaracion -> LET VARIABLE IGUAL . comparacion
    (22) declaracion -> LET VARIABLE IGUAL . expresion
    (30) comparacion -> . expresion operadores_comp term
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    RETURN          shift and go to state 22
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 118
    expresion                      shift and go to state 119
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 97

    (20) declaracion -> CONST VARIABLE IGUAL . comparacion
    (23) declaracion -> CONST VARIABLE IGUAL . expresion
    (30) comparacion -> . expresion operadores_comp term
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    RETURN          shift and go to state 22
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 120
    expresion                      shift and go to state 121
    term                           shift and go to state 21
    factor                         shift and go to state 29
    tipos_datos                    shift and go to state 19
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 98

    (69) funcion -> funcion_enc IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 122


state 99

    (34) term -> term MULT factor .

    MULT            reduce using rule 34 (term -> term MULT factor .)
    DIV             reduce using rule 34 (term -> term MULT factor .)
    MAS             reduce using rule 34 (term -> term MULT factor .)
    MENOS           reduce using rule 34 (term -> term MULT factor .)
    FINALDELINEA    reduce using rule 34 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 34 (term -> term MULT factor .)
    MENORQUE        reduce using rule 34 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 34 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 34 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 34 (term -> term MULT factor .)
    IGUALIGUAL      reduce using rule 34 (term -> term MULT factor .)
    AND             reduce using rule 34 (term -> term MULT factor .)
    OR              reduce using rule 34 (term -> term MULT factor .)
    VAR             reduce using rule 34 (term -> term MULT factor .)
    LET             reduce using rule 34 (term -> term MULT factor .)
    CONST           reduce using rule 34 (term -> term MULT factor .)
    VARIABLE        reduce using rule 34 (term -> term MULT factor .)
    RETURN          reduce using rule 34 (term -> term MULT factor .)
    IF              reduce using rule 34 (term -> term MULT factor .)
    SWITCH          reduce using rule 34 (term -> term MULT factor .)
    WHILE           reduce using rule 34 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 34 (term -> term MULT factor .)
    FUNCTION        reduce using rule 34 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 34 (term -> term MULT factor .)
    NUMBER          reduce using rule 34 (term -> term MULT factor .)
    STRING          reduce using rule 34 (term -> term MULT factor .)
    BOOLEAN         reduce using rule 34 (term -> term MULT factor .)
    BIGINT          reduce using rule 34 (term -> term MULT factor .)
    NULL            reduce using rule 34 (term -> term MULT factor .)
    SYMBOL          reduce using rule 34 (term -> term MULT factor .)
    IZQCORCHETE     reduce using rule 34 (term -> term MULT factor .)
    NEW             reduce using rule 34 (term -> term MULT factor .)
    $end            reduce using rule 34 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 34 (term -> term MULT factor .)
    BREAK           reduce using rule 34 (term -> term MULT factor .)
    DERPAREN        reduce using rule 34 (term -> term MULT factor .)


state 100

    (35) term -> term DIV factor .

    MULT            reduce using rule 35 (term -> term DIV factor .)
    DIV             reduce using rule 35 (term -> term DIV factor .)
    MAS             reduce using rule 35 (term -> term DIV factor .)
    MENOS           reduce using rule 35 (term -> term DIV factor .)
    FINALDELINEA    reduce using rule 35 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 35 (term -> term DIV factor .)
    MENORQUE        reduce using rule 35 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 35 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 35 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 35 (term -> term DIV factor .)
    IGUALIGUAL      reduce using rule 35 (term -> term DIV factor .)
    AND             reduce using rule 35 (term -> term DIV factor .)
    OR              reduce using rule 35 (term -> term DIV factor .)
    VAR             reduce using rule 35 (term -> term DIV factor .)
    LET             reduce using rule 35 (term -> term DIV factor .)
    CONST           reduce using rule 35 (term -> term DIV factor .)
    VARIABLE        reduce using rule 35 (term -> term DIV factor .)
    RETURN          reduce using rule 35 (term -> term DIV factor .)
    IF              reduce using rule 35 (term -> term DIV factor .)
    SWITCH          reduce using rule 35 (term -> term DIV factor .)
    WHILE           reduce using rule 35 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 35 (term -> term DIV factor .)
    FUNCTION        reduce using rule 35 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 35 (term -> term DIV factor .)
    NUMBER          reduce using rule 35 (term -> term DIV factor .)
    STRING          reduce using rule 35 (term -> term DIV factor .)
    BOOLEAN         reduce using rule 35 (term -> term DIV factor .)
    BIGINT          reduce using rule 35 (term -> term DIV factor .)
    NULL            reduce using rule 35 (term -> term DIV factor .)
    SYMBOL          reduce using rule 35 (term -> term DIV factor .)
    IZQCORCHETE     reduce using rule 35 (term -> term DIV factor .)
    NEW             reduce using rule 35 (term -> term DIV factor .)
    $end            reduce using rule 35 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 35 (term -> term DIV factor .)
    BREAK           reduce using rule 35 (term -> term DIV factor .)
    DERPAREN        reduce using rule 35 (term -> term DIV factor .)


state 101

    (70) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 123


state 102

    (30) comparacion -> expresion . operadores_comp term
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term
    (53) operadores_comp -> . MAYORQUE
    (54) operadores_comp -> . MENORQUE
    (55) operadores_comp -> . MAYORIGUALQUE
    (56) operadores_comp -> . MENORIGUALQUE
    (57) operadores_comp -> . NOIGUALQUE
    (58) operadores_comp -> . IGUALIGUAL

    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 103

    (39) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    FINALDELINEA    reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    IGUALIGUAL      reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    AND             reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    OR              reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    RETURN          reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    WHILE           reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    STRING          reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    BOOLEAN         reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    BIGINT          reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    NULL            reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    SYMBOL          reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    IZQCORCHETE     reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    NEW             reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    BREAK           reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 39 (factor -> IZQPAREN expresion DERPAREN .)


state 104

    (73) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 124


state 105

    (78) while -> WHILE IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 125


state 106

    (92) map_Set -> MAPLOWER PUNTO SET_METODO . IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    IZQPAREN        shift and go to state 126


state 107

    (64) funcion_enc -> FUNCTION VARIABLE funcion_param .

    IZQLLAVE        reduce using rule 64 (funcion_enc -> FUNCTION VARIABLE funcion_param .)


state 108

    (65) funcion_param -> IZQPAREN . parametros DERPAREN
    (66) parametros -> . VARIABLE
    (67) parametros -> . VARIABLE COMA parametros
    (68) parametros -> . empty
    (63) empty -> .

    VARIABLE        shift and go to state 128
    DERPAREN        reduce using rule 63 (empty -> .)

    parametros                     shift and go to state 127
    empty                          shift and go to state 129

state 109

    (82) arreglo -> IZQCORCHETE lista DERCORCHETE . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    MULT            reduce using rule 63 (empty -> .)
    DIV             reduce using rule 63 (empty -> .)
    MAS             reduce using rule 63 (empty -> .)
    MENOS           reduce using rule 63 (empty -> .)
    MAYORQUE        reduce using rule 63 (empty -> .)
    MENORQUE        reduce using rule 63 (empty -> .)
    MAYORIGUALQUE   reduce using rule 63 (empty -> .)
    MENORIGUALQUE   reduce using rule 63 (empty -> .)
    NOIGUALQUE      reduce using rule 63 (empty -> .)
    IGUALIGUAL      reduce using rule 63 (empty -> .)
    AND             reduce using rule 63 (empty -> .)
    OR              reduce using rule 63 (empty -> .)
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    DERPAREN        reduce using rule 63 (empty -> .)
    DERCORCHETE     reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)
    DOSPUNTOS       reduce using rule 63 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 63 (empty -> .) ]

    final_linea                    shift and go to state 130
    empty                          shift and go to state 45

state 110

    (87) lista -> lista COMA . lista
    (87) lista -> . lista COMA lista
    (88) lista -> . tipos_datos
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    lista                          shift and go to state 131
    tipos_datos                    shift and go to state 83
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 111

    (86) arreglo -> IZQCORCHETE DERCORCHETE final_linea .

    MULT            reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DIV             reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAS             reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MENOS           reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    FINALDELINEA    reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAYORQUE        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MENORQUE        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAYORIGUALQUE   reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MENORIGUALQUE   reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NOIGUALQUE      reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IGUALIGUAL      reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    AND             reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    OR              reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    VAR             reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    LET             reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    CONST           reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    VARIABLE        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    RETURN          reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IF              reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    SWITCH          reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    WHILE           reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAPLOWER        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    FUNCTION        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IZQPAREN        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NUMBER          reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    STRING          reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    BOOLEAN         reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    BIGINT          reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NULL            reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    SYMBOL          reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IZQCORCHETE     reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NEW             reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    $end            reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DERLLAVE        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    BREAK           reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DERPAREN        reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DERCORCHETE     reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    COMA            reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DOSPUNTOS       reduce using rule 86 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)


state 112

    (83) arreglo -> NEW ARRAY IZQPAREN . DERPAREN final_linea
    (84) arreglo -> NEW ARRAY IZQPAREN . NUMBER DERPAREN final_linea
    (85) arreglo -> NEW ARRAY IZQPAREN . lista DERPAREN final_linea
    (87) lista -> . lista COMA lista
    (88) lista -> . tipos_datos
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    DERPAREN        shift and go to state 132
    NUMBER          shift and go to state 133
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    lista                          shift and go to state 134
    tipos_datos                    shift and go to state 83
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 113

    (91) map -> NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 135


state 114

    (93) set -> NEW SET_ESTRUC IZQPAREN . DERPAREN
    (94) set -> NEW SET_ESTRUC IZQPAREN . NULL DERPAREN
    (95) set -> NEW SET_ESTRUC IZQPAREN . lista DERPAREN
    (87) lista -> . lista COMA lista
    (88) lista -> . tipos_datos
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    DERPAREN        shift and go to state 136
    NULL            shift and go to state 137
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    lista                          shift and go to state 138
    tipos_datos                    shift and go to state 83
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 115

    (89) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (37) factor -> VARIABLE .

    PUNTO           shift and go to state 139
    MULT            reduce using rule 37 (factor -> VARIABLE .)
    DIV             reduce using rule 37 (factor -> VARIABLE .)
    MAS             reduce using rule 37 (factor -> VARIABLE .)
    MENOS           reduce using rule 37 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 37 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 37 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 37 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 37 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 37 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 37 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 37 (factor -> VARIABLE .)
    VAR             reduce using rule 37 (factor -> VARIABLE .)
    LET             reduce using rule 37 (factor -> VARIABLE .)
    CONST           reduce using rule 37 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 37 (factor -> VARIABLE .)
    RETURN          reduce using rule 37 (factor -> VARIABLE .)
    IF              reduce using rule 37 (factor -> VARIABLE .)
    SWITCH          reduce using rule 37 (factor -> VARIABLE .)
    WHILE           reduce using rule 37 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 37 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 37 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 37 (factor -> VARIABLE .)
    NUMBER          reduce using rule 37 (factor -> VARIABLE .)
    STRING          reduce using rule 37 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 37 (factor -> VARIABLE .)
    BIGINT          reduce using rule 37 (factor -> VARIABLE .)
    NULL            reduce using rule 37 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 37 (factor -> VARIABLE .)
    IZQCORCHETE     reduce using rule 37 (factor -> VARIABLE .)
    NEW             reduce using rule 37 (factor -> VARIABLE .)
    $end            reduce using rule 37 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 37 (factor -> VARIABLE .)
    BREAK           reduce using rule 37 (factor -> VARIABLE .)


state 116

    (18) declaracion -> VAR VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    LET             reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IF              reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    $end            reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 18 (declaracion -> VAR VARIABLE IGUAL comparacion .)


state 117

    (21) declaracion -> VAR VARIABLE IGUAL expresion .
    (30) comparacion -> expresion . operadores_comp term
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term
    (53) operadores_comp -> . MAYORQUE
    (54) operadores_comp -> . MENORQUE
    (55) operadores_comp -> . MAYORIGUALQUE
    (56) operadores_comp -> . MENORIGUALQUE
    (57) operadores_comp -> . NOIGUALQUE
    (58) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    VAR             reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    LET             reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    CONST           reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IF              reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    STRING          reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NULL            reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NEW             reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    $end            reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 21 (declaracion -> VAR VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 118

    (19) declaracion -> LET VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    LET             reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IF              reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    $end            reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 19 (declaracion -> LET VARIABLE IGUAL comparacion .)


state 119

    (22) declaracion -> LET VARIABLE IGUAL expresion .
    (30) comparacion -> expresion . operadores_comp term
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term
    (53) operadores_comp -> . MAYORQUE
    (54) operadores_comp -> . MENORQUE
    (55) operadores_comp -> . MAYORIGUALQUE
    (56) operadores_comp -> . MENORIGUALQUE
    (57) operadores_comp -> . NOIGUALQUE
    (58) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    VAR             reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    LET             reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    CONST           reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    IF              reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    STRING          reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    NULL            reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    NEW             reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    $end            reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 22 (declaracion -> LET VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 120

    (20) declaracion -> CONST VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    LET             reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IF              reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    $end            reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 20 (declaracion -> CONST VARIABLE IGUAL comparacion .)


state 121

    (23) declaracion -> CONST VARIABLE IGUAL expresion .
    (30) comparacion -> expresion . operadores_comp term
    (28) expresion -> expresion . MAS term
    (29) expresion -> expresion . MENOS term
    (53) operadores_comp -> . MAYORQUE
    (54) operadores_comp -> . MENORQUE
    (55) operadores_comp -> . MAYORIGUALQUE
    (56) operadores_comp -> . MENORIGUALQUE
    (57) operadores_comp -> . NOIGUALQUE
    (58) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    VAR             reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    LET             reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    CONST           reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IF              reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    STRING          reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NULL            reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NEW             reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    $end            reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 23 (declaracion -> CONST VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 122

    (69) funcion -> funcion_enc IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 69 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)


state 123

    (70) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (71) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (72) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 140


state 124

    (73) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 141


state 125

    (78) while -> WHILE IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 142


state 126

    (92) map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN . tipos_datos COMA tipos_datos DERPAREN final_linea
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    tipos_datos                    shift and go to state 143
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 127

    (65) funcion_param -> IZQPAREN parametros . DERPAREN

    DERPAREN        shift and go to state 144


state 128

    (66) parametros -> VARIABLE .
    (67) parametros -> VARIABLE . COMA parametros

    DERPAREN        reduce using rule 66 (parametros -> VARIABLE .)
    COMA            shift and go to state 145


state 129

    (68) parametros -> empty .

    DERPAREN        reduce using rule 68 (parametros -> empty .)


state 130

    (82) arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .

    MULT            reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DIV             reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAS             reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MENOS           reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    FINALDELINEA    reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAYORQUE        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MENORQUE        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAYORIGUALQUE   reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MENORIGUALQUE   reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NOIGUALQUE      reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IGUALIGUAL      reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    AND             reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    OR              reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    VAR             reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    LET             reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    CONST           reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    VARIABLE        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    RETURN          reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IF              reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    SWITCH          reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    WHILE           reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAPLOWER        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    FUNCTION        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IZQPAREN        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NUMBER          reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    STRING          reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    BOOLEAN         reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    BIGINT          reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NULL            reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    SYMBOL          reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IZQCORCHETE     reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NEW             reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    $end            reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DERLLAVE        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    BREAK           reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DERPAREN        reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DERCORCHETE     reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    COMA            reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DOSPUNTOS       reduce using rule 82 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)


state 131

    (87) lista -> lista COMA lista .
    (87) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 87 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 87 (lista -> lista COMA lista .)
    COMA            shift and go to state 110

  ! COMA            [ reduce using rule 87 (lista -> lista COMA lista .) ]


state 132

    (83) arreglo -> NEW ARRAY IZQPAREN DERPAREN . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    MULT            reduce using rule 63 (empty -> .)
    DIV             reduce using rule 63 (empty -> .)
    MAS             reduce using rule 63 (empty -> .)
    MENOS           reduce using rule 63 (empty -> .)
    MAYORQUE        reduce using rule 63 (empty -> .)
    MENORQUE        reduce using rule 63 (empty -> .)
    MAYORIGUALQUE   reduce using rule 63 (empty -> .)
    MENORIGUALQUE   reduce using rule 63 (empty -> .)
    NOIGUALQUE      reduce using rule 63 (empty -> .)
    IGUALIGUAL      reduce using rule 63 (empty -> .)
    AND             reduce using rule 63 (empty -> .)
    OR              reduce using rule 63 (empty -> .)
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    DERPAREN        reduce using rule 63 (empty -> .)
    DERCORCHETE     reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)
    DOSPUNTOS       reduce using rule 63 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 63 (empty -> .) ]

    final_linea                    shift and go to state 146
    empty                          shift and go to state 45

state 133

    (84) arreglo -> NEW ARRAY IZQPAREN NUMBER . DERPAREN final_linea
    (40) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 147
    COMA            reduce using rule 40 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 40 (tipos_datos -> NUMBER .) ]


state 134

    (85) arreglo -> NEW ARRAY IZQPAREN lista . DERPAREN final_linea
    (87) lista -> lista . COMA lista

    DERPAREN        shift and go to state 148
    COMA            shift and go to state 110


state 135

    (91) map -> NEW MAP IZQPAREN DERPAREN . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    MULT            reduce using rule 63 (empty -> .)
    DIV             reduce using rule 63 (empty -> .)
    MAS             reduce using rule 63 (empty -> .)
    MENOS           reduce using rule 63 (empty -> .)
    MAYORQUE        reduce using rule 63 (empty -> .)
    MENORQUE        reduce using rule 63 (empty -> .)
    MAYORIGUALQUE   reduce using rule 63 (empty -> .)
    MENORIGUALQUE   reduce using rule 63 (empty -> .)
    NOIGUALQUE      reduce using rule 63 (empty -> .)
    IGUALIGUAL      reduce using rule 63 (empty -> .)
    AND             reduce using rule 63 (empty -> .)
    OR              reduce using rule 63 (empty -> .)
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    DERPAREN        reduce using rule 63 (empty -> .)
    DERCORCHETE     reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)
    DOSPUNTOS       reduce using rule 63 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 63 (empty -> .) ]

    final_linea                    shift and go to state 149
    empty                          shift and go to state 45

state 136

    (93) set -> NEW SET_ESTRUC IZQPAREN DERPAREN .

    MULT            reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    DIV             reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    MAS             reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    MENOS           reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    FINALDELINEA    reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    MAYORQUE        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    MENORQUE        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    MAYORIGUALQUE   reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    MENORIGUALQUE   reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    NOIGUALQUE      reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    IGUALIGUAL      reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    AND             reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    OR              reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    VAR             reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    LET             reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    CONST           reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    RETURN          reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    IF              reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    WHILE           reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    STRING          reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    NULL            reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    IZQCORCHETE     reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    NEW             reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    $end            reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    BREAK           reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    DERPAREN        reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    DERCORCHETE     reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    COMA            reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)
    DOSPUNTOS       reduce using rule 93 (set -> NEW SET_ESTRUC IZQPAREN DERPAREN .)


state 137

    (94) set -> NEW SET_ESTRUC IZQPAREN NULL . DERPAREN
    (44) tipos_datos -> NULL .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 150
    COMA            reduce using rule 44 (tipos_datos -> NULL .)

  ! DERPAREN        [ reduce using rule 44 (tipos_datos -> NULL .) ]


state 138

    (95) set -> NEW SET_ESTRUC IZQPAREN lista . DERPAREN
    (87) lista -> lista . COMA lista

    DERPAREN        shift and go to state 151
    COMA            shift and go to state 110


state 139

    (89) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN final_linea
    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN final_linea

    POP             shift and go to state 152
    PUSH            shift and go to state 153


state 140

    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (71) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 7
    js                             shift and go to state 154
    if                             shift and go to state 9
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    tipos_datos                    shift and go to state 19
    funcion_enc                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 141

    (73) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (74) ncasos -> . casos
    (75) ncasos -> . casos ncasos
    (76) casos -> . CASE tipos_datos DOSPUNTOS js BREAK final_linea
    (77) casos -> . CASE tipos_datos DOSPUNTOS

    CASE            shift and go to state 157

    ncasos                         shift and go to state 155
    casos                          shift and go to state 156

state 142

    (78) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 7
    js                             shift and go to state 158
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    if                             shift and go to state 9
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    tipos_datos                    shift and go to state 19
    funcion_enc                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 143

    (92) map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos . COMA tipos_datos DERPAREN final_linea

    COMA            shift and go to state 159


state 144

    (65) funcion_param -> IZQPAREN parametros DERPAREN .

    IZQLLAVE        reduce using rule 65 (funcion_param -> IZQPAREN parametros DERPAREN .)


state 145

    (67) parametros -> VARIABLE COMA . parametros
    (66) parametros -> . VARIABLE
    (67) parametros -> . VARIABLE COMA parametros
    (68) parametros -> . empty
    (63) empty -> .

    VARIABLE        shift and go to state 128
    DERPAREN        reduce using rule 63 (empty -> .)

    parametros                     shift and go to state 160
    empty                          shift and go to state 129

state 146

    (83) arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .

    MULT            reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DIV             reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAS             reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MENOS           reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAYORQUE        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MENORQUE        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    AND             reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    OR              reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    VAR             reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DERPAREN        reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    COMA            reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 83 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)


state 147

    (84) arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    MULT            reduce using rule 63 (empty -> .)
    DIV             reduce using rule 63 (empty -> .)
    MAS             reduce using rule 63 (empty -> .)
    MENOS           reduce using rule 63 (empty -> .)
    MAYORQUE        reduce using rule 63 (empty -> .)
    MENORQUE        reduce using rule 63 (empty -> .)
    MAYORIGUALQUE   reduce using rule 63 (empty -> .)
    MENORIGUALQUE   reduce using rule 63 (empty -> .)
    NOIGUALQUE      reduce using rule 63 (empty -> .)
    IGUALIGUAL      reduce using rule 63 (empty -> .)
    AND             reduce using rule 63 (empty -> .)
    OR              reduce using rule 63 (empty -> .)
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    DERPAREN        reduce using rule 63 (empty -> .)
    DERCORCHETE     reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)
    DOSPUNTOS       reduce using rule 63 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 63 (empty -> .) ]

    final_linea                    shift and go to state 161
    empty                          shift and go to state 45

state 148

    (85) arreglo -> NEW ARRAY IZQPAREN lista DERPAREN . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    MULT            reduce using rule 63 (empty -> .)
    DIV             reduce using rule 63 (empty -> .)
    MAS             reduce using rule 63 (empty -> .)
    MENOS           reduce using rule 63 (empty -> .)
    MAYORQUE        reduce using rule 63 (empty -> .)
    MENORQUE        reduce using rule 63 (empty -> .)
    MAYORIGUALQUE   reduce using rule 63 (empty -> .)
    MENORIGUALQUE   reduce using rule 63 (empty -> .)
    NOIGUALQUE      reduce using rule 63 (empty -> .)
    IGUALIGUAL      reduce using rule 63 (empty -> .)
    AND             reduce using rule 63 (empty -> .)
    OR              reduce using rule 63 (empty -> .)
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    DERPAREN        reduce using rule 63 (empty -> .)
    DERCORCHETE     reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)
    DOSPUNTOS       reduce using rule 63 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 63 (empty -> .) ]

    final_linea                    shift and go to state 162
    empty                          shift and go to state 45

state 149

    (91) map -> NEW MAP IZQPAREN DERPAREN final_linea .

    MULT            reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    DIV             reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    MAS             reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    MENOS           reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORQUE        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORQUE        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    AND             reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    OR              reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    VAR             reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    DERPAREN        reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    COMA            reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 91 (map -> NEW MAP IZQPAREN DERPAREN final_linea .)


state 150

    (94) set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .

    MULT            reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    DIV             reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    MAS             reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    MENOS           reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    FINALDELINEA    reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    MAYORQUE        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    MENORQUE        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    MAYORIGUALQUE   reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    MENORIGUALQUE   reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    NOIGUALQUE      reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    IGUALIGUAL      reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    AND             reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    OR              reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    VAR             reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    LET             reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    CONST           reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    VARIABLE        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    RETURN          reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    IF              reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    SWITCH          reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    WHILE           reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    MAPLOWER        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    FUNCTION        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    IZQPAREN        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    NUMBER          reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    STRING          reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    BOOLEAN         reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    BIGINT          reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    NULL            reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    SYMBOL          reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    IZQCORCHETE     reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    NEW             reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    $end            reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    DERLLAVE        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    BREAK           reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    DERPAREN        reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    DERCORCHETE     reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    COMA            reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)
    DOSPUNTOS       reduce using rule 94 (set -> NEW SET_ESTRUC IZQPAREN NULL DERPAREN .)


state 151

    (95) set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .

    MULT            reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    DIV             reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    MAS             reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    MENOS           reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    FINALDELINEA    reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    MAYORQUE        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    MENORQUE        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    MAYORIGUALQUE   reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    MENORIGUALQUE   reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    NOIGUALQUE      reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    IGUALIGUAL      reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    AND             reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    OR              reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    LET             reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    RETURN          reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    IF              reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    IZQCORCHETE     reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    NEW             reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    $end            reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    BREAK           reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    DERPAREN        reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    DERCORCHETE     reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    COMA            reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)
    DOSPUNTOS       reduce using rule 95 (set -> NEW SET_ESTRUC IZQPAREN lista DERPAREN .)


state 152

    (89) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 163


state 153

    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN final_linea

    IZQPAREN        shift and go to state 164


state 154

    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (71) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 165


state 155

    (73) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 166


state 156

    (74) ncasos -> casos .
    (75) ncasos -> casos . ncasos
    (74) ncasos -> . casos
    (75) ncasos -> . casos ncasos
    (76) casos -> . CASE tipos_datos DOSPUNTOS js BREAK final_linea
    (77) casos -> . CASE tipos_datos DOSPUNTOS

    DEFAULT         reduce using rule 74 (ncasos -> casos .)
    CASE            shift and go to state 157

    casos                          shift and go to state 156
    ncasos                         shift and go to state 167

state 157

    (76) casos -> CASE . tipos_datos DOSPUNTOS js BREAK final_linea
    (77) casos -> CASE . tipos_datos DOSPUNTOS
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    tipos_datos                    shift and go to state 168
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 158

    (78) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 169


state 159

    (92) map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA . tipos_datos DERPAREN final_linea
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    tipos_datos                    shift and go to state 170
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 160

    (67) parametros -> VARIABLE COMA parametros .

    DERPAREN        reduce using rule 67 (parametros -> VARIABLE COMA parametros .)


state 161

    (84) arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .

    MULT            reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DIV             reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAS             reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MENOS           reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAYORQUE        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MENORQUE        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    AND             reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    OR              reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    VAR             reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    LET             reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    CONST           reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    VARIABLE        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    RETURN          reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IF              reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    SWITCH          reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    WHILE           reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAPLOWER        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    FUNCTION        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IZQPAREN        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NUMBER          reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    STRING          reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    BOOLEAN         reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    BIGINT          reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NULL            reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    SYMBOL          reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NEW             reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    $end            reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DERLLAVE        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    BREAK           reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DERPAREN        reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    COMA            reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 84 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)


state 162

    (85) arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .

    MULT            reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DIV             reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAS             reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MENOS           reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAYORQUE        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MENORQUE        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    AND             reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    OR              reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    VAR             reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    LET             reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    CONST           reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    VARIABLE        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    RETURN          reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IF              reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    SWITCH          reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    WHILE           reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAPLOWER        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    FUNCTION        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IZQPAREN        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NUMBER          reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    STRING          reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    BOOLEAN         reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    BIGINT          reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NULL            reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    SYMBOL          reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NEW             reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    $end            reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DERLLAVE        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    BREAK           reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DERPAREN        reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    COMA            reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 85 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)


state 163

    (89) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 171


state 164

    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN final_linea
    (87) lista -> . lista COMA lista
    (88) lista -> . tipos_datos
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    lista                          shift and go to state 172
    tipos_datos                    shift and go to state 83
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 165

    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (71) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VAR             reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 174
    IF              shift and go to state 23

  ! IF              [ reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 173

state 166

    (73) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 175


state 167

    (75) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 75 (ncasos -> casos ncasos .)


state 168

    (76) casos -> CASE tipos_datos . DOSPUNTOS js BREAK final_linea
    (77) casos -> CASE tipos_datos . DOSPUNTOS

    DOSPUNTOS       shift and go to state 176


state 169

    (78) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 78 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)


state 170

    (92) map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos . DERPAREN final_linea

    DERPAREN        shift and go to state 177


state 171

    (89) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)

    final_linea                    shift and go to state 178
    empty                          shift and go to state 45

state 172

    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN final_linea
    (87) lista -> lista . COMA lista

    DERPAREN        shift and go to state 179
    COMA            shift and go to state 110


state 173

    (71) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VAR             reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VARIABLE        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    RETURN          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    WHILE           reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    STRING          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BOOLEAN         reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BIGINT          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NULL            reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SYMBOL          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQCORCHETE     reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NEW             reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BREAK           reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 174

    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 180


state 175

    (73) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    js                             shift and go to state 181
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    if                             shift and go to state 9
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    tipos_datos                    shift and go to state 19
    funcion_enc                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 176

    (76) casos -> CASE tipos_datos DOSPUNTOS . js BREAK final_linea
    (77) casos -> CASE tipos_datos DOSPUNTOS .
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    CASE            reduce using rule 77 (casos -> CASE tipos_datos DOSPUNTOS .)
    DEFAULT         reduce using rule 77 (casos -> CASE tipos_datos DOSPUNTOS .)
    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    tipos_datos                    shift and go to state 19
    js                             shift and go to state 182
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    if                             shift and go to state 9
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    funcion_enc                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 177

    (92) map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)

    final_linea                    shift and go to state 183
    empty                          shift and go to state 45

state 178

    (89) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 89 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)


state 179

    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 63 (empty -> .)
    LET             reduce using rule 63 (empty -> .)
    CONST           reduce using rule 63 (empty -> .)
    VARIABLE        reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    SWITCH          reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    MAPLOWER        reduce using rule 63 (empty -> .)
    FUNCTION        reduce using rule 63 (empty -> .)
    IZQPAREN        reduce using rule 63 (empty -> .)
    NUMBER          reduce using rule 63 (empty -> .)
    STRING          reduce using rule 63 (empty -> .)
    BOOLEAN         reduce using rule 63 (empty -> .)
    BIGINT          reduce using rule 63 (empty -> .)
    NULL            reduce using rule 63 (empty -> .)
    SYMBOL          reduce using rule 63 (empty -> .)
    IZQCORCHETE     reduce using rule 63 (empty -> .)
    NEW             reduce using rule 63 (empty -> .)
    $end            reduce using rule 63 (empty -> .)
    DERLLAVE        reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)

    final_linea                    shift and go to state 184
    empty                          shift and go to state 45

state 180

    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . if
    (10) instrucciones -> . switch
    (11) instrucciones -> . while
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . map_Set
    (15) declaracion -> . VAR VARIABLE
    (16) declaracion -> . LET VARIABLE
    (17) declaracion -> . CONST VARIABLE
    (18) declaracion -> . VAR VARIABLE IGUAL comparacion
    (19) declaracion -> . LET VARIABLE IGUAL comparacion
    (20) declaracion -> . CONST VARIABLE IGUAL comparacion
    (21) declaracion -> . VAR VARIABLE IGUAL expresion
    (22) declaracion -> . LET VARIABLE IGUAL expresion
    (23) declaracion -> . CONST VARIABLE IGUAL expresion
    (24) asignacion -> . VARIABLE operadores_asig tipos_datos
    (25) asignacion -> . VARIABLE operadores_asig VARIABLE
    (26) asignacion -> . VARIABLE IGUAL comparacion
    (27) asignacion -> . VARIABLE IGUAL expresion
    (69) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (28) expresion -> . expresion MAS term
    (29) expresion -> . expresion MENOS term
    (32) expresion -> . term
    (33) expresion -> . RETURN expresion
    (30) comparacion -> . expresion operadores_comp term
    (31) logica -> . expresion operadores_log term
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (73) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (78) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (89) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (92) map_Set -> . MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (64) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (34) term -> . term MULT factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . VARIABLE
    (38) factor -> . tipos_datos
    (39) factor -> . IZQPAREN expresion DERPAREN
    (40) tipos_datos -> . NUMBER
    (41) tipos_datos -> . STRING
    (42) tipos_datos -> . BOOLEAN
    (43) tipos_datos -> . BIGINT
    (44) tipos_datos -> . NULL
    (45) tipos_datos -> . SYMBOL
    (46) tipos_datos -> . estructuras_datos
    (79) estructuras_datos -> . arreglo
    (80) estructuras_datos -> . map
    (81) estructuras_datos -> . set
    (82) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (83) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (84) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (85) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (86) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (91) map -> . NEW MAP IZQPAREN DERPAREN final_linea
    (93) set -> . NEW SET_ESTRUC IZQPAREN DERPAREN
    (94) set -> . NEW SET_ESTRUC IZQPAREN NULL DERPAREN
    (95) set -> . NEW SET_ESTRUC IZQPAREN lista DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    RETURN          shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    MAPLOWER        shift and go to state 27
    FUNCTION        shift and go to state 28
    IZQPAREN        shift and go to state 24
    NUMBER          shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQCORCHETE     shift and go to state 40
    NEW             shift and go to state 41

    comparacion                    shift and go to state 7
    js                             shift and go to state 185
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    if                             shift and go to state 9
    switch                         shift and go to state 10
    while                          shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    map_Set                        shift and go to state 14
    tipos_datos                    shift and go to state 19
    funcion_enc                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 29
    estructuras_datos              shift and go to state 36
    arreglo                        shift and go to state 37
    map                            shift and go to state 38
    set                            shift and go to state 39

state 181

    (73) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 186


state 182

    (76) casos -> CASE tipos_datos DOSPUNTOS js . BREAK final_linea

    BREAK           shift and go to state 187


state 183

    (92) map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .

    VAR             reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    LET             reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    CONST           reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    VARIABLE        reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    RETURN          reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IF              reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SWITCH          reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    WHILE           reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    MAPLOWER        reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    FUNCTION        reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IZQPAREN        reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NUMBER          reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    STRING          reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BOOLEAN         reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BIGINT          reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NULL            reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SYMBOL          reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NEW             reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    $end            reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    DERLLAVE        reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BREAK           reduce using rule 92 (map_Set -> MAPLOWER PUNTO SET_METODO IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)


state 184

    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .

    VAR             reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    LET             reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    CONST           reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    VARIABLE        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    RETURN          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    IF              reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    SWITCH          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    WHILE           reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    MAPLOWER        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    FUNCTION        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    IZQPAREN        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    NUMBER          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    STRING          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    BOOLEAN         reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    BIGINT          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    NULL            reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    SYMBOL          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    NEW             reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    $end            reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    DERLLAVE        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    BREAK           reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)


state 185

    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 188


state 186

    (73) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VAR             reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VARIABLE        reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    RETURN          reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    WHILE           reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    STRING          reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BOOLEAN         reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BIGINT          reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NULL            reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SYMBOL          reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQCORCHETE     reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NEW             reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BREAK           reduce using rule 73 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 187

    (76) casos -> CASE tipos_datos DOSPUNTOS js BREAK . final_linea
    (61) final_linea -> . FINALDELINEA
    (62) final_linea -> . empty
    (63) empty -> .

    FINALDELINEA    shift and go to state 44
    CASE            reduce using rule 63 (empty -> .)
    DEFAULT         reduce using rule 63 (empty -> .)

    final_linea                    shift and go to state 189
    empty                          shift and go to state 45

state 188

    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 189

    (76) casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .

    CASE            reduce using rule 76 (casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .)
    DEFAULT         reduce using rule 76 (casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 62 resolved as shift
WARNING: shift/reduce conflict for BIGINT in state 62 resolved as shift
WARNING: shift/reduce conflict for NULL in state 62 resolved as shift
WARNING: shift/reduce conflict for SYMBOL in state 62 resolved as shift
WARNING: shift/reduce conflict for IZQCORCHETE in state 62 resolved as shift
WARNING: shift/reduce conflict for NEW in state 62 resolved as shift
WARNING: shift/reduce conflict for MAS in state 73 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 73 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 82 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 109 resolved as shift
WARNING: shift/reduce conflict for COMA in state 131 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 132 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 133 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 135 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 147 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 148 resolved as shift
WARNING: shift/reduce conflict for IF in state 165 resolved as shift
