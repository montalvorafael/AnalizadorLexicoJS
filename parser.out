Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AWAIT
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FOR
    GET
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    SUPER
    UNDEFINED
    VOID

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracion final_linea
Rule 4     instrucciones -> asignacion final_linea
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion final_linea
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> logica
Rule 9     instrucciones -> arreglo
Rule 10    instrucciones -> map
Rule 11    instrucciones -> if
Rule 12    instrucciones -> switch
Rule 13    instrucciones -> while
Rule 14    instrucciones -> pop
Rule 15    instrucciones -> push
Rule 16    instrucciones -> mapSet
Rule 17    declaracion -> VAR VARIABLE
Rule 18    declaracion -> LET VARIABLE
Rule 19    declaracion -> CONST VARIABLE
Rule 20    declaracion -> VAR VARIABLE IGUAL tipos_datos
Rule 21    declaracion -> LET VARIABLE IGUAL tipos_datos
Rule 22    declaracion -> CONST VARIABLE IGUAL tipos_datos
Rule 23    declaracion -> VAR VARIABLE IGUAL comparacion
Rule 24    declaracion -> LET VARIABLE IGUAL comparacion
Rule 25    declaracion -> CONST VARIABLE IGUAL comparacion
Rule 26    declaracion -> VAR VARIABLE IGUAL expresion
Rule 27    declaracion -> LET VARIABLE IGUAL expresion
Rule 28    declaracion -> CONST VARIABLE IGUAL expresion
Rule 29    asignacion -> VARIABLE operadores_asig tipos_datos
Rule 30    asignacion -> VARIABLE operadores_asig VARIABLE
Rule 31    asignacion -> VARIABLE IGUAL comparacion
Rule 32    asignacion -> VARIABLE IGUAL expresion
Rule 33    expresion -> expresion MAS term
Rule 34    expresion -> expresion MENOS term
Rule 35    comparacion -> expresion operadores_comp term
Rule 36    logica -> expresion operadores_log term
Rule 37    expresion -> term
Rule 38    expresion -> RETURN expresion
Rule 39    term -> term MULT factor
Rule 40    term -> term DIV factor
Rule 41    term -> factor
Rule 42    factor -> VARIABLE
Rule 43    factor -> tipos_datos
Rule 44    factor -> IZQPAREN expresion DERPAREN
Rule 45    tipos_datos -> NUMBER
Rule 46    tipos_datos -> STRING
Rule 47    tipos_datos -> BOOLEAN
Rule 48    tipos_datos -> BIGINT
Rule 49    tipos_datos -> NULL
Rule 50    tipos_datos -> SYMBOL
Rule 51    tipos_datos -> estructuras_datos
Rule 52    operadores_asig -> IGUAL
Rule 53    operadores_asig -> MASIGUAL
Rule 54    operadores_asig -> MENOSIGUAL
Rule 55    operadores_asig -> DIVIGUAL
Rule 56    operadores_asig -> MODIGUAL
Rule 57    operadores_asig -> MULTIGUAL
Rule 58    operadores_comp -> MAYORQUE
Rule 59    operadores_comp -> MENORQUE
Rule 60    operadores_comp -> MAYORIGUALQUE
Rule 61    operadores_comp -> MENORIGUALQUE
Rule 62    operadores_comp -> NOIGUALQUE
Rule 63    operadores_comp -> IGUALIGUAL
Rule 64    operadores_log -> AND
Rule 65    operadores_log -> OR
Rule 66    final_linea -> FINALDELINEA
Rule 67    final_linea -> empty
Rule 68    empty -> <empty>
Rule 69    funcion_enc -> FUNCTION VARIABLE funcion_param
Rule 70    funcion_param -> IZQPAREN parametros DERPAREN
Rule 71    parametros -> VARIABLE
Rule 72    parametros -> VARIABLE COMA parametros
Rule 73    parametros -> empty
Rule 74    funcion -> funcion_enc IZQLLAVE js DERLLAVE
Rule 75    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 76    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 77    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 78    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 79    ncasos -> casos
Rule 80    ncasos -> casos ncasos
Rule 81    casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea
Rule 82    casos -> CASE tipos_datos DOSPUNTOS
Rule 83    while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 84    estructuras_datos -> arreglo
Rule 85    estructuras_datos -> map
Rule 86    estructuras_datos -> set
Rule 87    arreglo -> IZQCORCHETE lista DERCORCHETE final_linea
Rule 88    arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea
Rule 89    arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
Rule 90    arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea
Rule 91    arreglo -> IZQCORCHETE DERCORCHETE final_linea
Rule 92    lista -> lista COMA lista
Rule 93    lista -> tipos_datos
Rule 94    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
Rule 95    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
Rule 96    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 97    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 98    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 99    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
Rule 100   set -> NEW SET IZQPAREN DERPAREN
Rule 101   set -> NEW SET IZQPAREN NULL DERPAREN
Rule 102   set -> NEW SET IZQPAREN lista DERPAREN

Terminals, with rules where they appear

AND                  : 64
ARRAY                : 88 89 90
AWAIT                : 
BIGINT               : 48
BOOLEAN              : 47
BREAK                : 81
CASE                 : 81 82
CATCH                : 
CLASS                : 
COMA                 : 72 92 99
CONST                : 19 22 25 28 98
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 78
DELETE               : 
DERCORCHETE          : 87 91
DERLLAVE             : 74 75 76 77 77 78 83
DERPAREN             : 44 70 75 76 77 78 83 88 89 90 94 95 96 97 98 99 100 101 102
DIV                  : 40
DIVIGUAL             : 55
DO                   : 
DOSPUNTOS            : 78 81 82
ELSE                 : 77
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 66
FOR                  : 
FUNCTION             : 69
GET                  : 
IF                   : 75 76 77
IGUAL                : 20 21 22 23 24 25 26 27 28 31 32 52 94 95 96 97 98
IGUALIGUAL           : 63
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 87 91
IZQLLAVE             : 74 75 76 77 77 78 83
IZQPAREN             : 44 70 75 76 77 78 83 88 89 90 94 95 96 97 98 99 100 101 102
LET                  : 18 21 24 27 96
MAP                  : 96 97 98
MAPLOWER             : 99
MAS                  : 33
MASIGUAL             : 53
MAYORIGUALQUE        : 60
MAYORQUE             : 58
MENORIGUALQUE        : 61
MENORQUE             : 59
MENOS                : 34
MENOSIGUAL           : 54
MODIGUAL             : 56
MULT                 : 39
MULTIGUAL            : 57
NEW                  : 88 89 90 96 97 98 100 101 102
NOIGUALQUE           : 62
NULL                 : 49 101
NUMBER               : 45 89
OR                   : 65
PACKAGE              : 
POP                  : 94
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 94 95 99
PUSH                 : 95
RETURN               : 38
SET                  : 99 100 101 102
STRING               : 46
SUPER                : 
SWITCH               : 78
SYMBOL               : 50
UNDEFINED            : 
VAR                  : 17 20 23 26 94 95 97
VARIABLE             : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 30 31 32 42 69 71 72 78 94 94 95 95 96 97 98
VOID                 : 
WHILE                : 83
error                : 

Nonterminals, with rules where they appear

arreglo              : 9 84
asignacion           : 4
casos                : 79 80
comparacion          : 7 23 24 25 31 75 76 77 83
declaracion          : 3
empty                : 67 73
estructuras_datos    : 51
expresion            : 6 26 27 28 32 33 34 35 36 38 44
factor               : 39 40 41
final_linea          : 3 4 6 81 87 88 89 90 91 94 95 96 97 98 99
funcion              : 5
funcion_enc          : 74
funcion_param        : 69
if                   : 11 76
instrucciones        : 1 2
js                   : 2 74 75 76 77 77 78 81 83 0
lista                : 87 90 92 92 95 102
logica               : 8
map                  : 10 85
mapSet               : 16
ncasos               : 78 80
operadores_asig      : 29 30
operadores_comp      : 35
operadores_log       : 36
parametros           : 70 72
pop                  : 14
push                 : 15
set                  : 86
switch               : 12
term                 : 33 34 35 36 37 39 40
tipos_datos          : 20 21 22 29 43 81 82 93 99 99
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    BREAK           reduce using rule 1 (js -> instrucciones .)
    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    instrucciones                  shift and go to state 2
    js                             shift and go to state 42
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 3

    (3) instrucciones -> declaracion . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    final_linea                    shift and go to state 43
    empty                          shift and go to state 45

state 4

    (4) instrucciones -> asignacion . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    final_linea                    shift and go to state 46
    empty                          shift and go to state 45

state 5

    (5) instrucciones -> funcion .

    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    RETURN          reduce using rule 5 (instrucciones -> funcion .)
    IZQCORCHETE     reduce using rule 5 (instrucciones -> funcion .)
    NEW             reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    WHILE           reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    STRING          reduce using rule 5 (instrucciones -> funcion .)
    BOOLEAN         reduce using rule 5 (instrucciones -> funcion .)
    BIGINT          reduce using rule 5 (instrucciones -> funcion .)
    NULL            reduce using rule 5 (instrucciones -> funcion .)
    SYMBOL          reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)
    BREAK           reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion . final_linea
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term
    (35) comparacion -> expresion . operadores_comp term
    (36) logica -> expresion . operadores_log term
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (58) operadores_comp -> . MAYORQUE
    (59) operadores_comp -> . MENORQUE
    (60) operadores_comp -> . MAYORIGUALQUE
    (61) operadores_comp -> . MENORIGUALQUE
    (62) operadores_comp -> . NOIGUALQUE
    (63) operadores_comp -> . IGUALIGUAL
    (64) operadores_log -> . AND
    (65) operadores_log -> . OR
    (68) empty -> .

    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    FINALDELINEA    shift and go to state 44
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57
    AND             shift and go to state 58
    OR              shift and go to state 59
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    final_linea                    shift and go to state 47
    operadores_comp                shift and go to state 50
    operadores_log                 shift and go to state 51
    empty                          shift and go to state 45

state 7

    (7) instrucciones -> comparacion .

    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    RETURN          reduce using rule 7 (instrucciones -> comparacion .)
    IZQCORCHETE     reduce using rule 7 (instrucciones -> comparacion .)
    NEW             reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    WHILE           reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    STRING          reduce using rule 7 (instrucciones -> comparacion .)
    BOOLEAN         reduce using rule 7 (instrucciones -> comparacion .)
    BIGINT          reduce using rule 7 (instrucciones -> comparacion .)
    NULL            reduce using rule 7 (instrucciones -> comparacion .)
    SYMBOL          reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)
    BREAK           reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> logica .

    VAR             reduce using rule 8 (instrucciones -> logica .)
    LET             reduce using rule 8 (instrucciones -> logica .)
    CONST           reduce using rule 8 (instrucciones -> logica .)
    VARIABLE        reduce using rule 8 (instrucciones -> logica .)
    RETURN          reduce using rule 8 (instrucciones -> logica .)
    IZQCORCHETE     reduce using rule 8 (instrucciones -> logica .)
    NEW             reduce using rule 8 (instrucciones -> logica .)
    IF              reduce using rule 8 (instrucciones -> logica .)
    SWITCH          reduce using rule 8 (instrucciones -> logica .)
    WHILE           reduce using rule 8 (instrucciones -> logica .)
    MAPLOWER        reduce using rule 8 (instrucciones -> logica .)
    FUNCTION        reduce using rule 8 (instrucciones -> logica .)
    IZQPAREN        reduce using rule 8 (instrucciones -> logica .)
    NUMBER          reduce using rule 8 (instrucciones -> logica .)
    STRING          reduce using rule 8 (instrucciones -> logica .)
    BOOLEAN         reduce using rule 8 (instrucciones -> logica .)
    BIGINT          reduce using rule 8 (instrucciones -> logica .)
    NULL            reduce using rule 8 (instrucciones -> logica .)
    SYMBOL          reduce using rule 8 (instrucciones -> logica .)
    $end            reduce using rule 8 (instrucciones -> logica .)
    DERLLAVE        reduce using rule 8 (instrucciones -> logica .)
    BREAK           reduce using rule 8 (instrucciones -> logica .)


state 9

    (9) instrucciones -> arreglo .
    (84) estructuras_datos -> arreglo .

  ! reduce/reduce conflict for VAR resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for LET resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for CONST resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for IZQCORCHETE resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for NEW resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for IF resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for SWITCH resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for BIGINT resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for NULL resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for $end resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 9 (instrucciones -> arreglo .)
  ! reduce/reduce conflict for BREAK resolved using rule 9 (instrucciones -> arreglo .)
    VAR             reduce using rule 9 (instrucciones -> arreglo .)
    LET             reduce using rule 9 (instrucciones -> arreglo .)
    CONST           reduce using rule 9 (instrucciones -> arreglo .)
    VARIABLE        reduce using rule 9 (instrucciones -> arreglo .)
    RETURN          reduce using rule 9 (instrucciones -> arreglo .)
    IZQCORCHETE     reduce using rule 9 (instrucciones -> arreglo .)
    NEW             reduce using rule 9 (instrucciones -> arreglo .)
    IF              reduce using rule 9 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 9 (instrucciones -> arreglo .)
    WHILE           reduce using rule 9 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 9 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 9 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 9 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 9 (instrucciones -> arreglo .)
    STRING          reduce using rule 9 (instrucciones -> arreglo .)
    BOOLEAN         reduce using rule 9 (instrucciones -> arreglo .)
    BIGINT          reduce using rule 9 (instrucciones -> arreglo .)
    NULL            reduce using rule 9 (instrucciones -> arreglo .)
    SYMBOL          reduce using rule 9 (instrucciones -> arreglo .)
    $end            reduce using rule 9 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 9 (instrucciones -> arreglo .)
    BREAK           reduce using rule 9 (instrucciones -> arreglo .)
    MULT            reduce using rule 84 (estructuras_datos -> arreglo .)
    DIV             reduce using rule 84 (estructuras_datos -> arreglo .)
    MAS             reduce using rule 84 (estructuras_datos -> arreglo .)
    MENOS           reduce using rule 84 (estructuras_datos -> arreglo .)
    FINALDELINEA    reduce using rule 84 (estructuras_datos -> arreglo .)
    MAYORQUE        reduce using rule 84 (estructuras_datos -> arreglo .)
    MENORQUE        reduce using rule 84 (estructuras_datos -> arreglo .)
    MAYORIGUALQUE   reduce using rule 84 (estructuras_datos -> arreglo .)
    MENORIGUALQUE   reduce using rule 84 (estructuras_datos -> arreglo .)
    NOIGUALQUE      reduce using rule 84 (estructuras_datos -> arreglo .)
    IGUALIGUAL      reduce using rule 84 (estructuras_datos -> arreglo .)
    AND             reduce using rule 84 (estructuras_datos -> arreglo .)
    OR              reduce using rule 84 (estructuras_datos -> arreglo .)

  ! VAR             [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! LET             [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! CONST           [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! VARIABLE        [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! RETURN          [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! IZQCORCHETE     [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! NEW             [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! IF              [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! SWITCH          [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! WHILE           [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! MAPLOWER        [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! FUNCTION        [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! IZQPAREN        [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! NUMBER          [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! STRING          [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! BOOLEAN         [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! BIGINT          [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! NULL            [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! SYMBOL          [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! $end            [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! DERLLAVE        [ reduce using rule 84 (estructuras_datos -> arreglo .) ]
  ! BREAK           [ reduce using rule 84 (estructuras_datos -> arreglo .) ]


state 10

    (10) instrucciones -> map .
    (85) estructuras_datos -> map .

  ! reduce/reduce conflict for VAR resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for LET resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for CONST resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for IZQCORCHETE resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for NEW resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for IF resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for SWITCH resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for BIGINT resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for NULL resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for $end resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 10 (instrucciones -> map .)
  ! reduce/reduce conflict for BREAK resolved using rule 10 (instrucciones -> map .)
    VAR             reduce using rule 10 (instrucciones -> map .)
    LET             reduce using rule 10 (instrucciones -> map .)
    CONST           reduce using rule 10 (instrucciones -> map .)
    VARIABLE        reduce using rule 10 (instrucciones -> map .)
    RETURN          reduce using rule 10 (instrucciones -> map .)
    IZQCORCHETE     reduce using rule 10 (instrucciones -> map .)
    NEW             reduce using rule 10 (instrucciones -> map .)
    IF              reduce using rule 10 (instrucciones -> map .)
    SWITCH          reduce using rule 10 (instrucciones -> map .)
    WHILE           reduce using rule 10 (instrucciones -> map .)
    MAPLOWER        reduce using rule 10 (instrucciones -> map .)
    FUNCTION        reduce using rule 10 (instrucciones -> map .)
    IZQPAREN        reduce using rule 10 (instrucciones -> map .)
    NUMBER          reduce using rule 10 (instrucciones -> map .)
    STRING          reduce using rule 10 (instrucciones -> map .)
    BOOLEAN         reduce using rule 10 (instrucciones -> map .)
    BIGINT          reduce using rule 10 (instrucciones -> map .)
    NULL            reduce using rule 10 (instrucciones -> map .)
    SYMBOL          reduce using rule 10 (instrucciones -> map .)
    $end            reduce using rule 10 (instrucciones -> map .)
    DERLLAVE        reduce using rule 10 (instrucciones -> map .)
    BREAK           reduce using rule 10 (instrucciones -> map .)
    MULT            reduce using rule 85 (estructuras_datos -> map .)
    DIV             reduce using rule 85 (estructuras_datos -> map .)
    MAS             reduce using rule 85 (estructuras_datos -> map .)
    MENOS           reduce using rule 85 (estructuras_datos -> map .)
    FINALDELINEA    reduce using rule 85 (estructuras_datos -> map .)
    MAYORQUE        reduce using rule 85 (estructuras_datos -> map .)
    MENORQUE        reduce using rule 85 (estructuras_datos -> map .)
    MAYORIGUALQUE   reduce using rule 85 (estructuras_datos -> map .)
    MENORIGUALQUE   reduce using rule 85 (estructuras_datos -> map .)
    NOIGUALQUE      reduce using rule 85 (estructuras_datos -> map .)
    IGUALIGUAL      reduce using rule 85 (estructuras_datos -> map .)
    AND             reduce using rule 85 (estructuras_datos -> map .)
    OR              reduce using rule 85 (estructuras_datos -> map .)

  ! VAR             [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! LET             [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! CONST           [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! VARIABLE        [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! RETURN          [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! IZQCORCHETE     [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! NEW             [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! IF              [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! SWITCH          [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! WHILE           [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! MAPLOWER        [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! FUNCTION        [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! IZQPAREN        [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! NUMBER          [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! STRING          [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! BOOLEAN         [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! BIGINT          [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! NULL            [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! SYMBOL          [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! $end            [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! DERLLAVE        [ reduce using rule 85 (estructuras_datos -> map .) ]
  ! BREAK           [ reduce using rule 85 (estructuras_datos -> map .) ]


state 11

    (11) instrucciones -> if .

    VAR             reduce using rule 11 (instrucciones -> if .)
    LET             reduce using rule 11 (instrucciones -> if .)
    CONST           reduce using rule 11 (instrucciones -> if .)
    VARIABLE        reduce using rule 11 (instrucciones -> if .)
    RETURN          reduce using rule 11 (instrucciones -> if .)
    IZQCORCHETE     reduce using rule 11 (instrucciones -> if .)
    NEW             reduce using rule 11 (instrucciones -> if .)
    IF              reduce using rule 11 (instrucciones -> if .)
    SWITCH          reduce using rule 11 (instrucciones -> if .)
    WHILE           reduce using rule 11 (instrucciones -> if .)
    MAPLOWER        reduce using rule 11 (instrucciones -> if .)
    FUNCTION        reduce using rule 11 (instrucciones -> if .)
    IZQPAREN        reduce using rule 11 (instrucciones -> if .)
    NUMBER          reduce using rule 11 (instrucciones -> if .)
    STRING          reduce using rule 11 (instrucciones -> if .)
    BOOLEAN         reduce using rule 11 (instrucciones -> if .)
    BIGINT          reduce using rule 11 (instrucciones -> if .)
    NULL            reduce using rule 11 (instrucciones -> if .)
    SYMBOL          reduce using rule 11 (instrucciones -> if .)
    $end            reduce using rule 11 (instrucciones -> if .)
    DERLLAVE        reduce using rule 11 (instrucciones -> if .)
    BREAK           reduce using rule 11 (instrucciones -> if .)


state 12

    (12) instrucciones -> switch .

    VAR             reduce using rule 12 (instrucciones -> switch .)
    LET             reduce using rule 12 (instrucciones -> switch .)
    CONST           reduce using rule 12 (instrucciones -> switch .)
    VARIABLE        reduce using rule 12 (instrucciones -> switch .)
    RETURN          reduce using rule 12 (instrucciones -> switch .)
    IZQCORCHETE     reduce using rule 12 (instrucciones -> switch .)
    NEW             reduce using rule 12 (instrucciones -> switch .)
    IF              reduce using rule 12 (instrucciones -> switch .)
    SWITCH          reduce using rule 12 (instrucciones -> switch .)
    WHILE           reduce using rule 12 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 12 (instrucciones -> switch .)
    FUNCTION        reduce using rule 12 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 12 (instrucciones -> switch .)
    NUMBER          reduce using rule 12 (instrucciones -> switch .)
    STRING          reduce using rule 12 (instrucciones -> switch .)
    BOOLEAN         reduce using rule 12 (instrucciones -> switch .)
    BIGINT          reduce using rule 12 (instrucciones -> switch .)
    NULL            reduce using rule 12 (instrucciones -> switch .)
    SYMBOL          reduce using rule 12 (instrucciones -> switch .)
    $end            reduce using rule 12 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 12 (instrucciones -> switch .)
    BREAK           reduce using rule 12 (instrucciones -> switch .)


state 13

    (13) instrucciones -> while .

    VAR             reduce using rule 13 (instrucciones -> while .)
    LET             reduce using rule 13 (instrucciones -> while .)
    CONST           reduce using rule 13 (instrucciones -> while .)
    VARIABLE        reduce using rule 13 (instrucciones -> while .)
    RETURN          reduce using rule 13 (instrucciones -> while .)
    IZQCORCHETE     reduce using rule 13 (instrucciones -> while .)
    NEW             reduce using rule 13 (instrucciones -> while .)
    IF              reduce using rule 13 (instrucciones -> while .)
    SWITCH          reduce using rule 13 (instrucciones -> while .)
    WHILE           reduce using rule 13 (instrucciones -> while .)
    MAPLOWER        reduce using rule 13 (instrucciones -> while .)
    FUNCTION        reduce using rule 13 (instrucciones -> while .)
    IZQPAREN        reduce using rule 13 (instrucciones -> while .)
    NUMBER          reduce using rule 13 (instrucciones -> while .)
    STRING          reduce using rule 13 (instrucciones -> while .)
    BOOLEAN         reduce using rule 13 (instrucciones -> while .)
    BIGINT          reduce using rule 13 (instrucciones -> while .)
    NULL            reduce using rule 13 (instrucciones -> while .)
    SYMBOL          reduce using rule 13 (instrucciones -> while .)
    $end            reduce using rule 13 (instrucciones -> while .)
    DERLLAVE        reduce using rule 13 (instrucciones -> while .)
    BREAK           reduce using rule 13 (instrucciones -> while .)


state 14

    (14) instrucciones -> pop .

    VAR             reduce using rule 14 (instrucciones -> pop .)
    LET             reduce using rule 14 (instrucciones -> pop .)
    CONST           reduce using rule 14 (instrucciones -> pop .)
    VARIABLE        reduce using rule 14 (instrucciones -> pop .)
    RETURN          reduce using rule 14 (instrucciones -> pop .)
    IZQCORCHETE     reduce using rule 14 (instrucciones -> pop .)
    NEW             reduce using rule 14 (instrucciones -> pop .)
    IF              reduce using rule 14 (instrucciones -> pop .)
    SWITCH          reduce using rule 14 (instrucciones -> pop .)
    WHILE           reduce using rule 14 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 14 (instrucciones -> pop .)
    FUNCTION        reduce using rule 14 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 14 (instrucciones -> pop .)
    NUMBER          reduce using rule 14 (instrucciones -> pop .)
    STRING          reduce using rule 14 (instrucciones -> pop .)
    BOOLEAN         reduce using rule 14 (instrucciones -> pop .)
    BIGINT          reduce using rule 14 (instrucciones -> pop .)
    NULL            reduce using rule 14 (instrucciones -> pop .)
    SYMBOL          reduce using rule 14 (instrucciones -> pop .)
    $end            reduce using rule 14 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 14 (instrucciones -> pop .)
    BREAK           reduce using rule 14 (instrucciones -> pop .)


state 15

    (15) instrucciones -> push .

    VAR             reduce using rule 15 (instrucciones -> push .)
    LET             reduce using rule 15 (instrucciones -> push .)
    CONST           reduce using rule 15 (instrucciones -> push .)
    VARIABLE        reduce using rule 15 (instrucciones -> push .)
    RETURN          reduce using rule 15 (instrucciones -> push .)
    IZQCORCHETE     reduce using rule 15 (instrucciones -> push .)
    NEW             reduce using rule 15 (instrucciones -> push .)
    IF              reduce using rule 15 (instrucciones -> push .)
    SWITCH          reduce using rule 15 (instrucciones -> push .)
    WHILE           reduce using rule 15 (instrucciones -> push .)
    MAPLOWER        reduce using rule 15 (instrucciones -> push .)
    FUNCTION        reduce using rule 15 (instrucciones -> push .)
    IZQPAREN        reduce using rule 15 (instrucciones -> push .)
    NUMBER          reduce using rule 15 (instrucciones -> push .)
    STRING          reduce using rule 15 (instrucciones -> push .)
    BOOLEAN         reduce using rule 15 (instrucciones -> push .)
    BIGINT          reduce using rule 15 (instrucciones -> push .)
    NULL            reduce using rule 15 (instrucciones -> push .)
    SYMBOL          reduce using rule 15 (instrucciones -> push .)
    $end            reduce using rule 15 (instrucciones -> push .)
    DERLLAVE        reduce using rule 15 (instrucciones -> push .)
    BREAK           reduce using rule 15 (instrucciones -> push .)


state 16

    (16) instrucciones -> mapSet .

    VAR             reduce using rule 16 (instrucciones -> mapSet .)
    LET             reduce using rule 16 (instrucciones -> mapSet .)
    CONST           reduce using rule 16 (instrucciones -> mapSet .)
    VARIABLE        reduce using rule 16 (instrucciones -> mapSet .)
    RETURN          reduce using rule 16 (instrucciones -> mapSet .)
    IZQCORCHETE     reduce using rule 16 (instrucciones -> mapSet .)
    NEW             reduce using rule 16 (instrucciones -> mapSet .)
    IF              reduce using rule 16 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 16 (instrucciones -> mapSet .)
    WHILE           reduce using rule 16 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 16 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 16 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 16 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 16 (instrucciones -> mapSet .)
    STRING          reduce using rule 16 (instrucciones -> mapSet .)
    BOOLEAN         reduce using rule 16 (instrucciones -> mapSet .)
    BIGINT          reduce using rule 16 (instrucciones -> mapSet .)
    NULL            reduce using rule 16 (instrucciones -> mapSet .)
    SYMBOL          reduce using rule 16 (instrucciones -> mapSet .)
    $end            reduce using rule 16 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 16 (instrucciones -> mapSet .)
    BREAK           reduce using rule 16 (instrucciones -> mapSet .)


state 17

    (17) declaracion -> VAR . VARIABLE
    (20) declaracion -> VAR . VARIABLE IGUAL tipos_datos
    (23) declaracion -> VAR . VARIABLE IGUAL comparacion
    (26) declaracion -> VAR . VARIABLE IGUAL expresion
    (97) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (94) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea

    VARIABLE        shift and go to state 60


state 18

    (29) asignacion -> VARIABLE . operadores_asig tipos_datos
    (30) asignacion -> VARIABLE . operadores_asig VARIABLE
    (31) asignacion -> VARIABLE . IGUAL comparacion
    (32) asignacion -> VARIABLE . IGUAL expresion
    (42) factor -> VARIABLE .
    (52) operadores_asig -> . IGUAL
    (53) operadores_asig -> . MASIGUAL
    (54) operadores_asig -> . MENOSIGUAL
    (55) operadores_asig -> . DIVIGUAL
    (56) operadores_asig -> . MODIGUAL
    (57) operadores_asig -> . MULTIGUAL

    IGUAL           shift and go to state 62
    MULT            reduce using rule 42 (factor -> VARIABLE .)
    DIV             reduce using rule 42 (factor -> VARIABLE .)
    MAS             reduce using rule 42 (factor -> VARIABLE .)
    MENOS           reduce using rule 42 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 42 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 42 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 42 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 42 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 42 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 42 (factor -> VARIABLE .)
    AND             reduce using rule 42 (factor -> VARIABLE .)
    OR              reduce using rule 42 (factor -> VARIABLE .)
    VAR             reduce using rule 42 (factor -> VARIABLE .)
    LET             reduce using rule 42 (factor -> VARIABLE .)
    CONST           reduce using rule 42 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 42 (factor -> VARIABLE .)
    RETURN          reduce using rule 42 (factor -> VARIABLE .)
    IZQCORCHETE     reduce using rule 42 (factor -> VARIABLE .)
    NEW             reduce using rule 42 (factor -> VARIABLE .)
    IF              reduce using rule 42 (factor -> VARIABLE .)
    SWITCH          reduce using rule 42 (factor -> VARIABLE .)
    WHILE           reduce using rule 42 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 42 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 42 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 42 (factor -> VARIABLE .)
    NUMBER          reduce using rule 42 (factor -> VARIABLE .)
    STRING          reduce using rule 42 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 42 (factor -> VARIABLE .)
    BIGINT          reduce using rule 42 (factor -> VARIABLE .)
    NULL            reduce using rule 42 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 42 (factor -> VARIABLE .)
    $end            reduce using rule 42 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 42 (factor -> VARIABLE .)
    BREAK           reduce using rule 42 (factor -> VARIABLE .)
    MASIGUAL        shift and go to state 63
    MENOSIGUAL      shift and go to state 64
    DIVIGUAL        shift and go to state 65
    MODIGUAL        shift and go to state 66
    MULTIGUAL       shift and go to state 67

    operadores_asig                shift and go to state 61

state 19

    (18) declaracion -> LET . VARIABLE
    (21) declaracion -> LET . VARIABLE IGUAL tipos_datos
    (24) declaracion -> LET . VARIABLE IGUAL comparacion
    (27) declaracion -> LET . VARIABLE IGUAL expresion
    (96) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 68


state 20

    (19) declaracion -> CONST . VARIABLE
    (22) declaracion -> CONST . VARIABLE IGUAL tipos_datos
    (25) declaracion -> CONST . VARIABLE IGUAL comparacion
    (28) declaracion -> CONST . VARIABLE IGUAL expresion
    (98) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 69


state 21

    (43) factor -> tipos_datos .

    MULT            reduce using rule 43 (factor -> tipos_datos .)
    DIV             reduce using rule 43 (factor -> tipos_datos .)
    MAS             reduce using rule 43 (factor -> tipos_datos .)
    MENOS           reduce using rule 43 (factor -> tipos_datos .)
    FINALDELINEA    reduce using rule 43 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 43 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 43 (factor -> tipos_datos .)
    AND             reduce using rule 43 (factor -> tipos_datos .)
    OR              reduce using rule 43 (factor -> tipos_datos .)
    VAR             reduce using rule 43 (factor -> tipos_datos .)
    LET             reduce using rule 43 (factor -> tipos_datos .)
    CONST           reduce using rule 43 (factor -> tipos_datos .)
    VARIABLE        reduce using rule 43 (factor -> tipos_datos .)
    RETURN          reduce using rule 43 (factor -> tipos_datos .)
    IZQCORCHETE     reduce using rule 43 (factor -> tipos_datos .)
    NEW             reduce using rule 43 (factor -> tipos_datos .)
    IF              reduce using rule 43 (factor -> tipos_datos .)
    SWITCH          reduce using rule 43 (factor -> tipos_datos .)
    WHILE           reduce using rule 43 (factor -> tipos_datos .)
    MAPLOWER        reduce using rule 43 (factor -> tipos_datos .)
    FUNCTION        reduce using rule 43 (factor -> tipos_datos .)
    IZQPAREN        reduce using rule 43 (factor -> tipos_datos .)
    NUMBER          reduce using rule 43 (factor -> tipos_datos .)
    STRING          reduce using rule 43 (factor -> tipos_datos .)
    BOOLEAN         reduce using rule 43 (factor -> tipos_datos .)
    BIGINT          reduce using rule 43 (factor -> tipos_datos .)
    NULL            reduce using rule 43 (factor -> tipos_datos .)
    SYMBOL          reduce using rule 43 (factor -> tipos_datos .)
    $end            reduce using rule 43 (factor -> tipos_datos .)
    DERLLAVE        reduce using rule 43 (factor -> tipos_datos .)
    BREAK           reduce using rule 43 (factor -> tipos_datos .)
    DERPAREN        reduce using rule 43 (factor -> tipos_datos .)


state 22

    (74) funcion -> funcion_enc . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 70


state 23

    (37) expresion -> term .
    (39) term -> term . MULT factor
    (40) term -> term . DIV factor

    MAS             reduce using rule 37 (expresion -> term .)
    MENOS           reduce using rule 37 (expresion -> term .)
    FINALDELINEA    reduce using rule 37 (expresion -> term .)
    MAYORQUE        reduce using rule 37 (expresion -> term .)
    MENORQUE        reduce using rule 37 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 37 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 37 (expresion -> term .)
    NOIGUALQUE      reduce using rule 37 (expresion -> term .)
    IGUALIGUAL      reduce using rule 37 (expresion -> term .)
    AND             reduce using rule 37 (expresion -> term .)
    OR              reduce using rule 37 (expresion -> term .)
    VAR             reduce using rule 37 (expresion -> term .)
    LET             reduce using rule 37 (expresion -> term .)
    CONST           reduce using rule 37 (expresion -> term .)
    VARIABLE        reduce using rule 37 (expresion -> term .)
    RETURN          reduce using rule 37 (expresion -> term .)
    IZQCORCHETE     reduce using rule 37 (expresion -> term .)
    NEW             reduce using rule 37 (expresion -> term .)
    IF              reduce using rule 37 (expresion -> term .)
    SWITCH          reduce using rule 37 (expresion -> term .)
    WHILE           reduce using rule 37 (expresion -> term .)
    MAPLOWER        reduce using rule 37 (expresion -> term .)
    FUNCTION        reduce using rule 37 (expresion -> term .)
    IZQPAREN        reduce using rule 37 (expresion -> term .)
    NUMBER          reduce using rule 37 (expresion -> term .)
    STRING          reduce using rule 37 (expresion -> term .)
    BOOLEAN         reduce using rule 37 (expresion -> term .)
    BIGINT          reduce using rule 37 (expresion -> term .)
    NULL            reduce using rule 37 (expresion -> term .)
    SYMBOL          reduce using rule 37 (expresion -> term .)
    $end            reduce using rule 37 (expresion -> term .)
    DERLLAVE        reduce using rule 37 (expresion -> term .)
    BREAK           reduce using rule 37 (expresion -> term .)
    DERPAREN        reduce using rule 37 (expresion -> term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 24

    (38) expresion -> RETURN . expresion
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    expresion                      shift and go to state 73
    term                           shift and go to state 23
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 25

    (87) arreglo -> IZQCORCHETE . lista DERCORCHETE final_linea
    (91) arreglo -> IZQCORCHETE . DERCORCHETE final_linea
    (92) lista -> . lista COMA lista
    (93) lista -> . tipos_datos
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    DERCORCHETE     shift and go to state 81
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    lista                          shift and go to state 80
    tipos_datos                    shift and go to state 82
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 26

    (88) arreglo -> NEW . ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> NEW . ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> NEW . ARRAY IZQPAREN lista DERPAREN final_linea
    (100) set -> NEW . SET IZQPAREN DERPAREN
    (101) set -> NEW . SET IZQPAREN NULL DERPAREN
    (102) set -> NEW . SET IZQPAREN lista DERPAREN

    ARRAY           shift and go to state 83
    SET             shift and go to state 84


state 27

    (44) factor -> IZQPAREN . expresion DERPAREN
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    expresion                      shift and go to state 85
    term                           shift and go to state 23
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 28

    (45) tipos_datos -> NUMBER .

    MULT            reduce using rule 45 (tipos_datos -> NUMBER .)
    DIV             reduce using rule 45 (tipos_datos -> NUMBER .)
    MAS             reduce using rule 45 (tipos_datos -> NUMBER .)
    MENOS           reduce using rule 45 (tipos_datos -> NUMBER .)
    FINALDELINEA    reduce using rule 45 (tipos_datos -> NUMBER .)
    MAYORQUE        reduce using rule 45 (tipos_datos -> NUMBER .)
    MENORQUE        reduce using rule 45 (tipos_datos -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 45 (tipos_datos -> NUMBER .)
    MENORIGUALQUE   reduce using rule 45 (tipos_datos -> NUMBER .)
    NOIGUALQUE      reduce using rule 45 (tipos_datos -> NUMBER .)
    IGUALIGUAL      reduce using rule 45 (tipos_datos -> NUMBER .)
    AND             reduce using rule 45 (tipos_datos -> NUMBER .)
    OR              reduce using rule 45 (tipos_datos -> NUMBER .)
    VAR             reduce using rule 45 (tipos_datos -> NUMBER .)
    LET             reduce using rule 45 (tipos_datos -> NUMBER .)
    CONST           reduce using rule 45 (tipos_datos -> NUMBER .)
    VARIABLE        reduce using rule 45 (tipos_datos -> NUMBER .)
    RETURN          reduce using rule 45 (tipos_datos -> NUMBER .)
    IZQCORCHETE     reduce using rule 45 (tipos_datos -> NUMBER .)
    NEW             reduce using rule 45 (tipos_datos -> NUMBER .)
    IF              reduce using rule 45 (tipos_datos -> NUMBER .)
    SWITCH          reduce using rule 45 (tipos_datos -> NUMBER .)
    WHILE           reduce using rule 45 (tipos_datos -> NUMBER .)
    MAPLOWER        reduce using rule 45 (tipos_datos -> NUMBER .)
    FUNCTION        reduce using rule 45 (tipos_datos -> NUMBER .)
    IZQPAREN        reduce using rule 45 (tipos_datos -> NUMBER .)
    NUMBER          reduce using rule 45 (tipos_datos -> NUMBER .)
    STRING          reduce using rule 45 (tipos_datos -> NUMBER .)
    BOOLEAN         reduce using rule 45 (tipos_datos -> NUMBER .)
    BIGINT          reduce using rule 45 (tipos_datos -> NUMBER .)
    NULL            reduce using rule 45 (tipos_datos -> NUMBER .)
    SYMBOL          reduce using rule 45 (tipos_datos -> NUMBER .)
    $end            reduce using rule 45 (tipos_datos -> NUMBER .)
    DERLLAVE        reduce using rule 45 (tipos_datos -> NUMBER .)
    BREAK           reduce using rule 45 (tipos_datos -> NUMBER .)
    DERPAREN        reduce using rule 45 (tipos_datos -> NUMBER .)
    DERCORCHETE     reduce using rule 45 (tipos_datos -> NUMBER .)
    COMA            reduce using rule 45 (tipos_datos -> NUMBER .)
    DOSPUNTOS       reduce using rule 45 (tipos_datos -> NUMBER .)


state 29

    (75) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 86


state 30

    (78) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 87


state 31

    (83) while -> WHILE . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 88


state 32

    (99) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    PUNTO           shift and go to state 89


state 33

    (69) funcion_enc -> FUNCTION . VARIABLE funcion_param

    VARIABLE        shift and go to state 90


state 34

    (41) term -> factor .

    MULT            reduce using rule 41 (term -> factor .)
    DIV             reduce using rule 41 (term -> factor .)
    MAS             reduce using rule 41 (term -> factor .)
    MENOS           reduce using rule 41 (term -> factor .)
    FINALDELINEA    reduce using rule 41 (term -> factor .)
    MAYORQUE        reduce using rule 41 (term -> factor .)
    MENORQUE        reduce using rule 41 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 41 (term -> factor .)
    MENORIGUALQUE   reduce using rule 41 (term -> factor .)
    NOIGUALQUE      reduce using rule 41 (term -> factor .)
    IGUALIGUAL      reduce using rule 41 (term -> factor .)
    AND             reduce using rule 41 (term -> factor .)
    OR              reduce using rule 41 (term -> factor .)
    VAR             reduce using rule 41 (term -> factor .)
    LET             reduce using rule 41 (term -> factor .)
    CONST           reduce using rule 41 (term -> factor .)
    VARIABLE        reduce using rule 41 (term -> factor .)
    RETURN          reduce using rule 41 (term -> factor .)
    IZQCORCHETE     reduce using rule 41 (term -> factor .)
    NEW             reduce using rule 41 (term -> factor .)
    IF              reduce using rule 41 (term -> factor .)
    SWITCH          reduce using rule 41 (term -> factor .)
    WHILE           reduce using rule 41 (term -> factor .)
    MAPLOWER        reduce using rule 41 (term -> factor .)
    FUNCTION        reduce using rule 41 (term -> factor .)
    IZQPAREN        reduce using rule 41 (term -> factor .)
    NUMBER          reduce using rule 41 (term -> factor .)
    STRING          reduce using rule 41 (term -> factor .)
    BOOLEAN         reduce using rule 41 (term -> factor .)
    BIGINT          reduce using rule 41 (term -> factor .)
    NULL            reduce using rule 41 (term -> factor .)
    SYMBOL          reduce using rule 41 (term -> factor .)
    $end            reduce using rule 41 (term -> factor .)
    DERLLAVE        reduce using rule 41 (term -> factor .)
    BREAK           reduce using rule 41 (term -> factor .)
    DERPAREN        reduce using rule 41 (term -> factor .)


state 35

    (46) tipos_datos -> STRING .

    MULT            reduce using rule 46 (tipos_datos -> STRING .)
    DIV             reduce using rule 46 (tipos_datos -> STRING .)
    MAS             reduce using rule 46 (tipos_datos -> STRING .)
    MENOS           reduce using rule 46 (tipos_datos -> STRING .)
    FINALDELINEA    reduce using rule 46 (tipos_datos -> STRING .)
    MAYORQUE        reduce using rule 46 (tipos_datos -> STRING .)
    MENORQUE        reduce using rule 46 (tipos_datos -> STRING .)
    MAYORIGUALQUE   reduce using rule 46 (tipos_datos -> STRING .)
    MENORIGUALQUE   reduce using rule 46 (tipos_datos -> STRING .)
    NOIGUALQUE      reduce using rule 46 (tipos_datos -> STRING .)
    IGUALIGUAL      reduce using rule 46 (tipos_datos -> STRING .)
    AND             reduce using rule 46 (tipos_datos -> STRING .)
    OR              reduce using rule 46 (tipos_datos -> STRING .)
    VAR             reduce using rule 46 (tipos_datos -> STRING .)
    LET             reduce using rule 46 (tipos_datos -> STRING .)
    CONST           reduce using rule 46 (tipos_datos -> STRING .)
    VARIABLE        reduce using rule 46 (tipos_datos -> STRING .)
    RETURN          reduce using rule 46 (tipos_datos -> STRING .)
    IZQCORCHETE     reduce using rule 46 (tipos_datos -> STRING .)
    NEW             reduce using rule 46 (tipos_datos -> STRING .)
    IF              reduce using rule 46 (tipos_datos -> STRING .)
    SWITCH          reduce using rule 46 (tipos_datos -> STRING .)
    WHILE           reduce using rule 46 (tipos_datos -> STRING .)
    MAPLOWER        reduce using rule 46 (tipos_datos -> STRING .)
    FUNCTION        reduce using rule 46 (tipos_datos -> STRING .)
    IZQPAREN        reduce using rule 46 (tipos_datos -> STRING .)
    NUMBER          reduce using rule 46 (tipos_datos -> STRING .)
    STRING          reduce using rule 46 (tipos_datos -> STRING .)
    BOOLEAN         reduce using rule 46 (tipos_datos -> STRING .)
    BIGINT          reduce using rule 46 (tipos_datos -> STRING .)
    NULL            reduce using rule 46 (tipos_datos -> STRING .)
    SYMBOL          reduce using rule 46 (tipos_datos -> STRING .)
    $end            reduce using rule 46 (tipos_datos -> STRING .)
    DERLLAVE        reduce using rule 46 (tipos_datos -> STRING .)
    BREAK           reduce using rule 46 (tipos_datos -> STRING .)
    DERPAREN        reduce using rule 46 (tipos_datos -> STRING .)
    DERCORCHETE     reduce using rule 46 (tipos_datos -> STRING .)
    COMA            reduce using rule 46 (tipos_datos -> STRING .)
    DOSPUNTOS       reduce using rule 46 (tipos_datos -> STRING .)


state 36

    (47) tipos_datos -> BOOLEAN .

    MULT            reduce using rule 47 (tipos_datos -> BOOLEAN .)
    DIV             reduce using rule 47 (tipos_datos -> BOOLEAN .)
    MAS             reduce using rule 47 (tipos_datos -> BOOLEAN .)
    MENOS           reduce using rule 47 (tipos_datos -> BOOLEAN .)
    FINALDELINEA    reduce using rule 47 (tipos_datos -> BOOLEAN .)
    MAYORQUE        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    MENORQUE        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    MAYORIGUALQUE   reduce using rule 47 (tipos_datos -> BOOLEAN .)
    MENORIGUALQUE   reduce using rule 47 (tipos_datos -> BOOLEAN .)
    NOIGUALQUE      reduce using rule 47 (tipos_datos -> BOOLEAN .)
    IGUALIGUAL      reduce using rule 47 (tipos_datos -> BOOLEAN .)
    AND             reduce using rule 47 (tipos_datos -> BOOLEAN .)
    OR              reduce using rule 47 (tipos_datos -> BOOLEAN .)
    VAR             reduce using rule 47 (tipos_datos -> BOOLEAN .)
    LET             reduce using rule 47 (tipos_datos -> BOOLEAN .)
    CONST           reduce using rule 47 (tipos_datos -> BOOLEAN .)
    VARIABLE        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    RETURN          reduce using rule 47 (tipos_datos -> BOOLEAN .)
    IZQCORCHETE     reduce using rule 47 (tipos_datos -> BOOLEAN .)
    NEW             reduce using rule 47 (tipos_datos -> BOOLEAN .)
    IF              reduce using rule 47 (tipos_datos -> BOOLEAN .)
    SWITCH          reduce using rule 47 (tipos_datos -> BOOLEAN .)
    WHILE           reduce using rule 47 (tipos_datos -> BOOLEAN .)
    MAPLOWER        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    FUNCTION        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    IZQPAREN        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    NUMBER          reduce using rule 47 (tipos_datos -> BOOLEAN .)
    STRING          reduce using rule 47 (tipos_datos -> BOOLEAN .)
    BOOLEAN         reduce using rule 47 (tipos_datos -> BOOLEAN .)
    BIGINT          reduce using rule 47 (tipos_datos -> BOOLEAN .)
    NULL            reduce using rule 47 (tipos_datos -> BOOLEAN .)
    SYMBOL          reduce using rule 47 (tipos_datos -> BOOLEAN .)
    $end            reduce using rule 47 (tipos_datos -> BOOLEAN .)
    DERLLAVE        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    BREAK           reduce using rule 47 (tipos_datos -> BOOLEAN .)
    DERPAREN        reduce using rule 47 (tipos_datos -> BOOLEAN .)
    DERCORCHETE     reduce using rule 47 (tipos_datos -> BOOLEAN .)
    COMA            reduce using rule 47 (tipos_datos -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 47 (tipos_datos -> BOOLEAN .)


state 37

    (48) tipos_datos -> BIGINT .

    MULT            reduce using rule 48 (tipos_datos -> BIGINT .)
    DIV             reduce using rule 48 (tipos_datos -> BIGINT .)
    MAS             reduce using rule 48 (tipos_datos -> BIGINT .)
    MENOS           reduce using rule 48 (tipos_datos -> BIGINT .)
    FINALDELINEA    reduce using rule 48 (tipos_datos -> BIGINT .)
    MAYORQUE        reduce using rule 48 (tipos_datos -> BIGINT .)
    MENORQUE        reduce using rule 48 (tipos_datos -> BIGINT .)
    MAYORIGUALQUE   reduce using rule 48 (tipos_datos -> BIGINT .)
    MENORIGUALQUE   reduce using rule 48 (tipos_datos -> BIGINT .)
    NOIGUALQUE      reduce using rule 48 (tipos_datos -> BIGINT .)
    IGUALIGUAL      reduce using rule 48 (tipos_datos -> BIGINT .)
    AND             reduce using rule 48 (tipos_datos -> BIGINT .)
    OR              reduce using rule 48 (tipos_datos -> BIGINT .)
    VAR             reduce using rule 48 (tipos_datos -> BIGINT .)
    LET             reduce using rule 48 (tipos_datos -> BIGINT .)
    CONST           reduce using rule 48 (tipos_datos -> BIGINT .)
    VARIABLE        reduce using rule 48 (tipos_datos -> BIGINT .)
    RETURN          reduce using rule 48 (tipos_datos -> BIGINT .)
    IZQCORCHETE     reduce using rule 48 (tipos_datos -> BIGINT .)
    NEW             reduce using rule 48 (tipos_datos -> BIGINT .)
    IF              reduce using rule 48 (tipos_datos -> BIGINT .)
    SWITCH          reduce using rule 48 (tipos_datos -> BIGINT .)
    WHILE           reduce using rule 48 (tipos_datos -> BIGINT .)
    MAPLOWER        reduce using rule 48 (tipos_datos -> BIGINT .)
    FUNCTION        reduce using rule 48 (tipos_datos -> BIGINT .)
    IZQPAREN        reduce using rule 48 (tipos_datos -> BIGINT .)
    NUMBER          reduce using rule 48 (tipos_datos -> BIGINT .)
    STRING          reduce using rule 48 (tipos_datos -> BIGINT .)
    BOOLEAN         reduce using rule 48 (tipos_datos -> BIGINT .)
    BIGINT          reduce using rule 48 (tipos_datos -> BIGINT .)
    NULL            reduce using rule 48 (tipos_datos -> BIGINT .)
    SYMBOL          reduce using rule 48 (tipos_datos -> BIGINT .)
    $end            reduce using rule 48 (tipos_datos -> BIGINT .)
    DERLLAVE        reduce using rule 48 (tipos_datos -> BIGINT .)
    BREAK           reduce using rule 48 (tipos_datos -> BIGINT .)
    DERPAREN        reduce using rule 48 (tipos_datos -> BIGINT .)
    DERCORCHETE     reduce using rule 48 (tipos_datos -> BIGINT .)
    COMA            reduce using rule 48 (tipos_datos -> BIGINT .)
    DOSPUNTOS       reduce using rule 48 (tipos_datos -> BIGINT .)


state 38

    (49) tipos_datos -> NULL .

    MULT            reduce using rule 49 (tipos_datos -> NULL .)
    DIV             reduce using rule 49 (tipos_datos -> NULL .)
    MAS             reduce using rule 49 (tipos_datos -> NULL .)
    MENOS           reduce using rule 49 (tipos_datos -> NULL .)
    FINALDELINEA    reduce using rule 49 (tipos_datos -> NULL .)
    MAYORQUE        reduce using rule 49 (tipos_datos -> NULL .)
    MENORQUE        reduce using rule 49 (tipos_datos -> NULL .)
    MAYORIGUALQUE   reduce using rule 49 (tipos_datos -> NULL .)
    MENORIGUALQUE   reduce using rule 49 (tipos_datos -> NULL .)
    NOIGUALQUE      reduce using rule 49 (tipos_datos -> NULL .)
    IGUALIGUAL      reduce using rule 49 (tipos_datos -> NULL .)
    AND             reduce using rule 49 (tipos_datos -> NULL .)
    OR              reduce using rule 49 (tipos_datos -> NULL .)
    VAR             reduce using rule 49 (tipos_datos -> NULL .)
    LET             reduce using rule 49 (tipos_datos -> NULL .)
    CONST           reduce using rule 49 (tipos_datos -> NULL .)
    VARIABLE        reduce using rule 49 (tipos_datos -> NULL .)
    RETURN          reduce using rule 49 (tipos_datos -> NULL .)
    IZQCORCHETE     reduce using rule 49 (tipos_datos -> NULL .)
    NEW             reduce using rule 49 (tipos_datos -> NULL .)
    IF              reduce using rule 49 (tipos_datos -> NULL .)
    SWITCH          reduce using rule 49 (tipos_datos -> NULL .)
    WHILE           reduce using rule 49 (tipos_datos -> NULL .)
    MAPLOWER        reduce using rule 49 (tipos_datos -> NULL .)
    FUNCTION        reduce using rule 49 (tipos_datos -> NULL .)
    IZQPAREN        reduce using rule 49 (tipos_datos -> NULL .)
    NUMBER          reduce using rule 49 (tipos_datos -> NULL .)
    STRING          reduce using rule 49 (tipos_datos -> NULL .)
    BOOLEAN         reduce using rule 49 (tipos_datos -> NULL .)
    BIGINT          reduce using rule 49 (tipos_datos -> NULL .)
    NULL            reduce using rule 49 (tipos_datos -> NULL .)
    SYMBOL          reduce using rule 49 (tipos_datos -> NULL .)
    $end            reduce using rule 49 (tipos_datos -> NULL .)
    DERLLAVE        reduce using rule 49 (tipos_datos -> NULL .)
    BREAK           reduce using rule 49 (tipos_datos -> NULL .)
    DERPAREN        reduce using rule 49 (tipos_datos -> NULL .)
    DERCORCHETE     reduce using rule 49 (tipos_datos -> NULL .)
    COMA            reduce using rule 49 (tipos_datos -> NULL .)
    DOSPUNTOS       reduce using rule 49 (tipos_datos -> NULL .)


state 39

    (50) tipos_datos -> SYMBOL .

    MULT            reduce using rule 50 (tipos_datos -> SYMBOL .)
    DIV             reduce using rule 50 (tipos_datos -> SYMBOL .)
    MAS             reduce using rule 50 (tipos_datos -> SYMBOL .)
    MENOS           reduce using rule 50 (tipos_datos -> SYMBOL .)
    FINALDELINEA    reduce using rule 50 (tipos_datos -> SYMBOL .)
    MAYORQUE        reduce using rule 50 (tipos_datos -> SYMBOL .)
    MENORQUE        reduce using rule 50 (tipos_datos -> SYMBOL .)
    MAYORIGUALQUE   reduce using rule 50 (tipos_datos -> SYMBOL .)
    MENORIGUALQUE   reduce using rule 50 (tipos_datos -> SYMBOL .)
    NOIGUALQUE      reduce using rule 50 (tipos_datos -> SYMBOL .)
    IGUALIGUAL      reduce using rule 50 (tipos_datos -> SYMBOL .)
    AND             reduce using rule 50 (tipos_datos -> SYMBOL .)
    OR              reduce using rule 50 (tipos_datos -> SYMBOL .)
    VAR             reduce using rule 50 (tipos_datos -> SYMBOL .)
    LET             reduce using rule 50 (tipos_datos -> SYMBOL .)
    CONST           reduce using rule 50 (tipos_datos -> SYMBOL .)
    VARIABLE        reduce using rule 50 (tipos_datos -> SYMBOL .)
    RETURN          reduce using rule 50 (tipos_datos -> SYMBOL .)
    IZQCORCHETE     reduce using rule 50 (tipos_datos -> SYMBOL .)
    NEW             reduce using rule 50 (tipos_datos -> SYMBOL .)
    IF              reduce using rule 50 (tipos_datos -> SYMBOL .)
    SWITCH          reduce using rule 50 (tipos_datos -> SYMBOL .)
    WHILE           reduce using rule 50 (tipos_datos -> SYMBOL .)
    MAPLOWER        reduce using rule 50 (tipos_datos -> SYMBOL .)
    FUNCTION        reduce using rule 50 (tipos_datos -> SYMBOL .)
    IZQPAREN        reduce using rule 50 (tipos_datos -> SYMBOL .)
    NUMBER          reduce using rule 50 (tipos_datos -> SYMBOL .)
    STRING          reduce using rule 50 (tipos_datos -> SYMBOL .)
    BOOLEAN         reduce using rule 50 (tipos_datos -> SYMBOL .)
    BIGINT          reduce using rule 50 (tipos_datos -> SYMBOL .)
    NULL            reduce using rule 50 (tipos_datos -> SYMBOL .)
    SYMBOL          reduce using rule 50 (tipos_datos -> SYMBOL .)
    $end            reduce using rule 50 (tipos_datos -> SYMBOL .)
    DERLLAVE        reduce using rule 50 (tipos_datos -> SYMBOL .)
    BREAK           reduce using rule 50 (tipos_datos -> SYMBOL .)
    DERPAREN        reduce using rule 50 (tipos_datos -> SYMBOL .)
    DERCORCHETE     reduce using rule 50 (tipos_datos -> SYMBOL .)
    COMA            reduce using rule 50 (tipos_datos -> SYMBOL .)
    DOSPUNTOS       reduce using rule 50 (tipos_datos -> SYMBOL .)


state 40

    (51) tipos_datos -> estructuras_datos .

    MULT            reduce using rule 51 (tipos_datos -> estructuras_datos .)
    DIV             reduce using rule 51 (tipos_datos -> estructuras_datos .)
    MAS             reduce using rule 51 (tipos_datos -> estructuras_datos .)
    MENOS           reduce using rule 51 (tipos_datos -> estructuras_datos .)
    FINALDELINEA    reduce using rule 51 (tipos_datos -> estructuras_datos .)
    MAYORQUE        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    MENORQUE        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    MAYORIGUALQUE   reduce using rule 51 (tipos_datos -> estructuras_datos .)
    MENORIGUALQUE   reduce using rule 51 (tipos_datos -> estructuras_datos .)
    NOIGUALQUE      reduce using rule 51 (tipos_datos -> estructuras_datos .)
    IGUALIGUAL      reduce using rule 51 (tipos_datos -> estructuras_datos .)
    AND             reduce using rule 51 (tipos_datos -> estructuras_datos .)
    OR              reduce using rule 51 (tipos_datos -> estructuras_datos .)
    VAR             reduce using rule 51 (tipos_datos -> estructuras_datos .)
    LET             reduce using rule 51 (tipos_datos -> estructuras_datos .)
    CONST           reduce using rule 51 (tipos_datos -> estructuras_datos .)
    VARIABLE        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    RETURN          reduce using rule 51 (tipos_datos -> estructuras_datos .)
    IZQCORCHETE     reduce using rule 51 (tipos_datos -> estructuras_datos .)
    NEW             reduce using rule 51 (tipos_datos -> estructuras_datos .)
    IF              reduce using rule 51 (tipos_datos -> estructuras_datos .)
    SWITCH          reduce using rule 51 (tipos_datos -> estructuras_datos .)
    WHILE           reduce using rule 51 (tipos_datos -> estructuras_datos .)
    MAPLOWER        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    FUNCTION        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    IZQPAREN        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    NUMBER          reduce using rule 51 (tipos_datos -> estructuras_datos .)
    STRING          reduce using rule 51 (tipos_datos -> estructuras_datos .)
    BOOLEAN         reduce using rule 51 (tipos_datos -> estructuras_datos .)
    BIGINT          reduce using rule 51 (tipos_datos -> estructuras_datos .)
    NULL            reduce using rule 51 (tipos_datos -> estructuras_datos .)
    SYMBOL          reduce using rule 51 (tipos_datos -> estructuras_datos .)
    $end            reduce using rule 51 (tipos_datos -> estructuras_datos .)
    DERLLAVE        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    BREAK           reduce using rule 51 (tipos_datos -> estructuras_datos .)
    DERPAREN        reduce using rule 51 (tipos_datos -> estructuras_datos .)
    DERCORCHETE     reduce using rule 51 (tipos_datos -> estructuras_datos .)
    COMA            reduce using rule 51 (tipos_datos -> estructuras_datos .)
    DOSPUNTOS       reduce using rule 51 (tipos_datos -> estructuras_datos .)


state 41

    (86) estructuras_datos -> set .

    MULT            reduce using rule 86 (estructuras_datos -> set .)
    DIV             reduce using rule 86 (estructuras_datos -> set .)
    MAS             reduce using rule 86 (estructuras_datos -> set .)
    MENOS           reduce using rule 86 (estructuras_datos -> set .)
    FINALDELINEA    reduce using rule 86 (estructuras_datos -> set .)
    MAYORQUE        reduce using rule 86 (estructuras_datos -> set .)
    MENORQUE        reduce using rule 86 (estructuras_datos -> set .)
    MAYORIGUALQUE   reduce using rule 86 (estructuras_datos -> set .)
    MENORIGUALQUE   reduce using rule 86 (estructuras_datos -> set .)
    NOIGUALQUE      reduce using rule 86 (estructuras_datos -> set .)
    IGUALIGUAL      reduce using rule 86 (estructuras_datos -> set .)
    AND             reduce using rule 86 (estructuras_datos -> set .)
    OR              reduce using rule 86 (estructuras_datos -> set .)
    VAR             reduce using rule 86 (estructuras_datos -> set .)
    LET             reduce using rule 86 (estructuras_datos -> set .)
    CONST           reduce using rule 86 (estructuras_datos -> set .)
    VARIABLE        reduce using rule 86 (estructuras_datos -> set .)
    RETURN          reduce using rule 86 (estructuras_datos -> set .)
    IZQCORCHETE     reduce using rule 86 (estructuras_datos -> set .)
    NEW             reduce using rule 86 (estructuras_datos -> set .)
    IF              reduce using rule 86 (estructuras_datos -> set .)
    SWITCH          reduce using rule 86 (estructuras_datos -> set .)
    WHILE           reduce using rule 86 (estructuras_datos -> set .)
    MAPLOWER        reduce using rule 86 (estructuras_datos -> set .)
    FUNCTION        reduce using rule 86 (estructuras_datos -> set .)
    IZQPAREN        reduce using rule 86 (estructuras_datos -> set .)
    NUMBER          reduce using rule 86 (estructuras_datos -> set .)
    STRING          reduce using rule 86 (estructuras_datos -> set .)
    BOOLEAN         reduce using rule 86 (estructuras_datos -> set .)
    BIGINT          reduce using rule 86 (estructuras_datos -> set .)
    NULL            reduce using rule 86 (estructuras_datos -> set .)
    SYMBOL          reduce using rule 86 (estructuras_datos -> set .)
    $end            reduce using rule 86 (estructuras_datos -> set .)
    DERLLAVE        reduce using rule 86 (estructuras_datos -> set .)
    BREAK           reduce using rule 86 (estructuras_datos -> set .)
    DERPAREN        reduce using rule 86 (estructuras_datos -> set .)
    DERCORCHETE     reduce using rule 86 (estructuras_datos -> set .)
    COMA            reduce using rule 86 (estructuras_datos -> set .)
    DOSPUNTOS       reduce using rule 86 (estructuras_datos -> set .)


state 42

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)
    BREAK           reduce using rule 2 (js -> instrucciones js .)


state 43

    (3) instrucciones -> declaracion final_linea .

    VAR             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    LET             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    CONST           reduce using rule 3 (instrucciones -> declaracion final_linea .)
    VARIABLE        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    RETURN          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IZQCORCHETE     reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NEW             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IF              reduce using rule 3 (instrucciones -> declaracion final_linea .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    WHILE           reduce using rule 3 (instrucciones -> declaracion final_linea .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    STRING          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BOOLEAN         reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BIGINT          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NULL            reduce using rule 3 (instrucciones -> declaracion final_linea .)
    SYMBOL          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    $end            reduce using rule 3 (instrucciones -> declaracion final_linea .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BREAK           reduce using rule 3 (instrucciones -> declaracion final_linea .)


state 44

    (66) final_linea -> FINALDELINEA .

    VAR             reduce using rule 66 (final_linea -> FINALDELINEA .)
    LET             reduce using rule 66 (final_linea -> FINALDELINEA .)
    CONST           reduce using rule 66 (final_linea -> FINALDELINEA .)
    VARIABLE        reduce using rule 66 (final_linea -> FINALDELINEA .)
    RETURN          reduce using rule 66 (final_linea -> FINALDELINEA .)
    IZQCORCHETE     reduce using rule 66 (final_linea -> FINALDELINEA .)
    NEW             reduce using rule 66 (final_linea -> FINALDELINEA .)
    IF              reduce using rule 66 (final_linea -> FINALDELINEA .)
    SWITCH          reduce using rule 66 (final_linea -> FINALDELINEA .)
    WHILE           reduce using rule 66 (final_linea -> FINALDELINEA .)
    MAPLOWER        reduce using rule 66 (final_linea -> FINALDELINEA .)
    FUNCTION        reduce using rule 66 (final_linea -> FINALDELINEA .)
    IZQPAREN        reduce using rule 66 (final_linea -> FINALDELINEA .)
    NUMBER          reduce using rule 66 (final_linea -> FINALDELINEA .)
    STRING          reduce using rule 66 (final_linea -> FINALDELINEA .)
    BOOLEAN         reduce using rule 66 (final_linea -> FINALDELINEA .)
    BIGINT          reduce using rule 66 (final_linea -> FINALDELINEA .)
    NULL            reduce using rule 66 (final_linea -> FINALDELINEA .)
    SYMBOL          reduce using rule 66 (final_linea -> FINALDELINEA .)
    $end            reduce using rule 66 (final_linea -> FINALDELINEA .)
    DERLLAVE        reduce using rule 66 (final_linea -> FINALDELINEA .)
    BREAK           reduce using rule 66 (final_linea -> FINALDELINEA .)
    MULT            reduce using rule 66 (final_linea -> FINALDELINEA .)
    DIV             reduce using rule 66 (final_linea -> FINALDELINEA .)
    MAS             reduce using rule 66 (final_linea -> FINALDELINEA .)
    MENOS           reduce using rule 66 (final_linea -> FINALDELINEA .)
    FINALDELINEA    reduce using rule 66 (final_linea -> FINALDELINEA .)
    MAYORQUE        reduce using rule 66 (final_linea -> FINALDELINEA .)
    MENORQUE        reduce using rule 66 (final_linea -> FINALDELINEA .)
    MAYORIGUALQUE   reduce using rule 66 (final_linea -> FINALDELINEA .)
    MENORIGUALQUE   reduce using rule 66 (final_linea -> FINALDELINEA .)
    NOIGUALQUE      reduce using rule 66 (final_linea -> FINALDELINEA .)
    IGUALIGUAL      reduce using rule 66 (final_linea -> FINALDELINEA .)
    AND             reduce using rule 66 (final_linea -> FINALDELINEA .)
    OR              reduce using rule 66 (final_linea -> FINALDELINEA .)
    DERPAREN        reduce using rule 66 (final_linea -> FINALDELINEA .)
    DERCORCHETE     reduce using rule 66 (final_linea -> FINALDELINEA .)
    COMA            reduce using rule 66 (final_linea -> FINALDELINEA .)
    DOSPUNTOS       reduce using rule 66 (final_linea -> FINALDELINEA .)
    CASE            reduce using rule 66 (final_linea -> FINALDELINEA .)
    DEFAULT         reduce using rule 66 (final_linea -> FINALDELINEA .)


state 45

    (67) final_linea -> empty .

    VAR             reduce using rule 67 (final_linea -> empty .)
    LET             reduce using rule 67 (final_linea -> empty .)
    CONST           reduce using rule 67 (final_linea -> empty .)
    VARIABLE        reduce using rule 67 (final_linea -> empty .)
    RETURN          reduce using rule 67 (final_linea -> empty .)
    IZQCORCHETE     reduce using rule 67 (final_linea -> empty .)
    NEW             reduce using rule 67 (final_linea -> empty .)
    IF              reduce using rule 67 (final_linea -> empty .)
    SWITCH          reduce using rule 67 (final_linea -> empty .)
    WHILE           reduce using rule 67 (final_linea -> empty .)
    MAPLOWER        reduce using rule 67 (final_linea -> empty .)
    FUNCTION        reduce using rule 67 (final_linea -> empty .)
    IZQPAREN        reduce using rule 67 (final_linea -> empty .)
    NUMBER          reduce using rule 67 (final_linea -> empty .)
    STRING          reduce using rule 67 (final_linea -> empty .)
    BOOLEAN         reduce using rule 67 (final_linea -> empty .)
    BIGINT          reduce using rule 67 (final_linea -> empty .)
    NULL            reduce using rule 67 (final_linea -> empty .)
    SYMBOL          reduce using rule 67 (final_linea -> empty .)
    $end            reduce using rule 67 (final_linea -> empty .)
    DERLLAVE        reduce using rule 67 (final_linea -> empty .)
    BREAK           reduce using rule 67 (final_linea -> empty .)
    MULT            reduce using rule 67 (final_linea -> empty .)
    DIV             reduce using rule 67 (final_linea -> empty .)
    MAS             reduce using rule 67 (final_linea -> empty .)
    MENOS           reduce using rule 67 (final_linea -> empty .)
    FINALDELINEA    reduce using rule 67 (final_linea -> empty .)
    MAYORQUE        reduce using rule 67 (final_linea -> empty .)
    MENORQUE        reduce using rule 67 (final_linea -> empty .)
    MAYORIGUALQUE   reduce using rule 67 (final_linea -> empty .)
    MENORIGUALQUE   reduce using rule 67 (final_linea -> empty .)
    NOIGUALQUE      reduce using rule 67 (final_linea -> empty .)
    IGUALIGUAL      reduce using rule 67 (final_linea -> empty .)
    AND             reduce using rule 67 (final_linea -> empty .)
    OR              reduce using rule 67 (final_linea -> empty .)
    DERPAREN        reduce using rule 67 (final_linea -> empty .)
    DERCORCHETE     reduce using rule 67 (final_linea -> empty .)
    COMA            reduce using rule 67 (final_linea -> empty .)
    DOSPUNTOS       reduce using rule 67 (final_linea -> empty .)
    CASE            reduce using rule 67 (final_linea -> empty .)
    DEFAULT         reduce using rule 67 (final_linea -> empty .)


state 46

    (4) instrucciones -> asignacion final_linea .

    VAR             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    LET             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    CONST           reduce using rule 4 (instrucciones -> asignacion final_linea .)
    VARIABLE        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    RETURN          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IZQCORCHETE     reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NEW             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IF              reduce using rule 4 (instrucciones -> asignacion final_linea .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion final_linea .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    STRING          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BOOLEAN         reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BIGINT          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NULL            reduce using rule 4 (instrucciones -> asignacion final_linea .)
    SYMBOL          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    $end            reduce using rule 4 (instrucciones -> asignacion final_linea .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BREAK           reduce using rule 4 (instrucciones -> asignacion final_linea .)


state 47

    (6) instrucciones -> expresion final_linea .

    VAR             reduce using rule 6 (instrucciones -> expresion final_linea .)
    LET             reduce using rule 6 (instrucciones -> expresion final_linea .)
    CONST           reduce using rule 6 (instrucciones -> expresion final_linea .)
    VARIABLE        reduce using rule 6 (instrucciones -> expresion final_linea .)
    RETURN          reduce using rule 6 (instrucciones -> expresion final_linea .)
    IZQCORCHETE     reduce using rule 6 (instrucciones -> expresion final_linea .)
    NEW             reduce using rule 6 (instrucciones -> expresion final_linea .)
    IF              reduce using rule 6 (instrucciones -> expresion final_linea .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion final_linea .)
    WHILE           reduce using rule 6 (instrucciones -> expresion final_linea .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion final_linea .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion final_linea .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion final_linea .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion final_linea .)
    STRING          reduce using rule 6 (instrucciones -> expresion final_linea .)
    BOOLEAN         reduce using rule 6 (instrucciones -> expresion final_linea .)
    BIGINT          reduce using rule 6 (instrucciones -> expresion final_linea .)
    NULL            reduce using rule 6 (instrucciones -> expresion final_linea .)
    SYMBOL          reduce using rule 6 (instrucciones -> expresion final_linea .)
    $end            reduce using rule 6 (instrucciones -> expresion final_linea .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion final_linea .)
    BREAK           reduce using rule 6 (instrucciones -> expresion final_linea .)


state 48

    (33) expresion -> expresion MAS . term
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    term                           shift and go to state 91
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 49

    (34) expresion -> expresion MENOS . term
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    term                           shift and go to state 92
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 50

    (35) comparacion -> expresion operadores_comp . term
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    term                           shift and go to state 93
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 51

    (36) logica -> expresion operadores_log . term
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    term                           shift and go to state 94
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 52

    (58) operadores_comp -> MAYORQUE .

    VARIABLE        reduce using rule 58 (operadores_comp -> MAYORQUE .)
    IZQPAREN        reduce using rule 58 (operadores_comp -> MAYORQUE .)
    NUMBER          reduce using rule 58 (operadores_comp -> MAYORQUE .)
    STRING          reduce using rule 58 (operadores_comp -> MAYORQUE .)
    BOOLEAN         reduce using rule 58 (operadores_comp -> MAYORQUE .)
    BIGINT          reduce using rule 58 (operadores_comp -> MAYORQUE .)
    NULL            reduce using rule 58 (operadores_comp -> MAYORQUE .)
    SYMBOL          reduce using rule 58 (operadores_comp -> MAYORQUE .)
    IZQCORCHETE     reduce using rule 58 (operadores_comp -> MAYORQUE .)
    NEW             reduce using rule 58 (operadores_comp -> MAYORQUE .)
    LET             reduce using rule 58 (operadores_comp -> MAYORQUE .)
    VAR             reduce using rule 58 (operadores_comp -> MAYORQUE .)
    CONST           reduce using rule 58 (operadores_comp -> MAYORQUE .)


state 53

    (59) operadores_comp -> MENORQUE .

    VARIABLE        reduce using rule 59 (operadores_comp -> MENORQUE .)
    IZQPAREN        reduce using rule 59 (operadores_comp -> MENORQUE .)
    NUMBER          reduce using rule 59 (operadores_comp -> MENORQUE .)
    STRING          reduce using rule 59 (operadores_comp -> MENORQUE .)
    BOOLEAN         reduce using rule 59 (operadores_comp -> MENORQUE .)
    BIGINT          reduce using rule 59 (operadores_comp -> MENORQUE .)
    NULL            reduce using rule 59 (operadores_comp -> MENORQUE .)
    SYMBOL          reduce using rule 59 (operadores_comp -> MENORQUE .)
    IZQCORCHETE     reduce using rule 59 (operadores_comp -> MENORQUE .)
    NEW             reduce using rule 59 (operadores_comp -> MENORQUE .)
    LET             reduce using rule 59 (operadores_comp -> MENORQUE .)
    VAR             reduce using rule 59 (operadores_comp -> MENORQUE .)
    CONST           reduce using rule 59 (operadores_comp -> MENORQUE .)


state 54

    (60) operadores_comp -> MAYORIGUALQUE .

    VARIABLE        reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    NUMBER          reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    STRING          reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    BIGINT          reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    NULL            reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    SYMBOL          reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    IZQCORCHETE     reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    NEW             reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    LET             reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    VAR             reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)
    CONST           reduce using rule 60 (operadores_comp -> MAYORIGUALQUE .)


state 55

    (61) operadores_comp -> MENORIGUALQUE .

    VARIABLE        reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    NUMBER          reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    STRING          reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    BIGINT          reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    NULL            reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    SYMBOL          reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    IZQCORCHETE     reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    NEW             reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    LET             reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    VAR             reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)
    CONST           reduce using rule 61 (operadores_comp -> MENORIGUALQUE .)


state 56

    (62) operadores_comp -> NOIGUALQUE .

    VARIABLE        reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    NUMBER          reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    STRING          reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    BOOLEAN         reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    BIGINT          reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    NULL            reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    SYMBOL          reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    IZQCORCHETE     reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    NEW             reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    LET             reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    VAR             reduce using rule 62 (operadores_comp -> NOIGUALQUE .)
    CONST           reduce using rule 62 (operadores_comp -> NOIGUALQUE .)


state 57

    (63) operadores_comp -> IGUALIGUAL .

    VARIABLE        reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    IZQPAREN        reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    NUMBER          reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    STRING          reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    BOOLEAN         reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    BIGINT          reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    NULL            reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    SYMBOL          reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    IZQCORCHETE     reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    NEW             reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    LET             reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    VAR             reduce using rule 63 (operadores_comp -> IGUALIGUAL .)
    CONST           reduce using rule 63 (operadores_comp -> IGUALIGUAL .)


state 58

    (64) operadores_log -> AND .

    VARIABLE        reduce using rule 64 (operadores_log -> AND .)
    IZQPAREN        reduce using rule 64 (operadores_log -> AND .)
    NUMBER          reduce using rule 64 (operadores_log -> AND .)
    STRING          reduce using rule 64 (operadores_log -> AND .)
    BOOLEAN         reduce using rule 64 (operadores_log -> AND .)
    BIGINT          reduce using rule 64 (operadores_log -> AND .)
    NULL            reduce using rule 64 (operadores_log -> AND .)
    SYMBOL          reduce using rule 64 (operadores_log -> AND .)
    IZQCORCHETE     reduce using rule 64 (operadores_log -> AND .)
    NEW             reduce using rule 64 (operadores_log -> AND .)
    LET             reduce using rule 64 (operadores_log -> AND .)
    VAR             reduce using rule 64 (operadores_log -> AND .)
    CONST           reduce using rule 64 (operadores_log -> AND .)


state 59

    (65) operadores_log -> OR .

    VARIABLE        reduce using rule 65 (operadores_log -> OR .)
    IZQPAREN        reduce using rule 65 (operadores_log -> OR .)
    NUMBER          reduce using rule 65 (operadores_log -> OR .)
    STRING          reduce using rule 65 (operadores_log -> OR .)
    BOOLEAN         reduce using rule 65 (operadores_log -> OR .)
    BIGINT          reduce using rule 65 (operadores_log -> OR .)
    NULL            reduce using rule 65 (operadores_log -> OR .)
    SYMBOL          reduce using rule 65 (operadores_log -> OR .)
    IZQCORCHETE     reduce using rule 65 (operadores_log -> OR .)
    NEW             reduce using rule 65 (operadores_log -> OR .)
    LET             reduce using rule 65 (operadores_log -> OR .)
    VAR             reduce using rule 65 (operadores_log -> OR .)
    CONST           reduce using rule 65 (operadores_log -> OR .)


state 60

    (17) declaracion -> VAR VARIABLE .
    (20) declaracion -> VAR VARIABLE . IGUAL tipos_datos
    (23) declaracion -> VAR VARIABLE . IGUAL comparacion
    (26) declaracion -> VAR VARIABLE . IGUAL expresion
    (97) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (94) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea

    FINALDELINEA    reduce using rule 17 (declaracion -> VAR VARIABLE .)
    VAR             reduce using rule 17 (declaracion -> VAR VARIABLE .)
    LET             reduce using rule 17 (declaracion -> VAR VARIABLE .)
    CONST           reduce using rule 17 (declaracion -> VAR VARIABLE .)
    VARIABLE        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    RETURN          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    IZQCORCHETE     reduce using rule 17 (declaracion -> VAR VARIABLE .)
    NEW             reduce using rule 17 (declaracion -> VAR VARIABLE .)
    IF              reduce using rule 17 (declaracion -> VAR VARIABLE .)
    SWITCH          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    WHILE           reduce using rule 17 (declaracion -> VAR VARIABLE .)
    MAPLOWER        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    FUNCTION        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    IZQPAREN        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    NUMBER          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    STRING          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    BOOLEAN         reduce using rule 17 (declaracion -> VAR VARIABLE .)
    BIGINT          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    NULL            reduce using rule 17 (declaracion -> VAR VARIABLE .)
    SYMBOL          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    $end            reduce using rule 17 (declaracion -> VAR VARIABLE .)
    DERLLAVE        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    BREAK           reduce using rule 17 (declaracion -> VAR VARIABLE .)
    IGUAL           shift and go to state 95


state 61

    (29) asignacion -> VARIABLE operadores_asig . tipos_datos
    (30) asignacion -> VARIABLE operadores_asig . VARIABLE
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 96
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    tipos_datos                    shift and go to state 97
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 62

    (31) asignacion -> VARIABLE IGUAL . comparacion
    (32) asignacion -> VARIABLE IGUAL . expresion
    (52) operadores_asig -> IGUAL .
    (35) comparacion -> . expresion operadores_comp term
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BIGINT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SYMBOL resolved as shift
  ! shift/reduce conflict for IZQCORCHETE resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

  ! VARIABLE        [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! NUMBER          [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! STRING          [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! BOOLEAN         [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! BIGINT          [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! NULL            [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! SYMBOL          [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! IZQCORCHETE     [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! NEW             [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! LET             [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! VAR             [ reduce using rule 52 (operadores_asig -> IGUAL .) ]
  ! CONST           [ reduce using rule 52 (operadores_asig -> IGUAL .) ]

    comparacion                    shift and go to state 98
    expresion                      shift and go to state 99
    term                           shift and go to state 23
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 63

    (53) operadores_asig -> MASIGUAL .

    VARIABLE        reduce using rule 53 (operadores_asig -> MASIGUAL .)
    NUMBER          reduce using rule 53 (operadores_asig -> MASIGUAL .)
    STRING          reduce using rule 53 (operadores_asig -> MASIGUAL .)
    BOOLEAN         reduce using rule 53 (operadores_asig -> MASIGUAL .)
    BIGINT          reduce using rule 53 (operadores_asig -> MASIGUAL .)
    NULL            reduce using rule 53 (operadores_asig -> MASIGUAL .)
    SYMBOL          reduce using rule 53 (operadores_asig -> MASIGUAL .)
    IZQCORCHETE     reduce using rule 53 (operadores_asig -> MASIGUAL .)
    NEW             reduce using rule 53 (operadores_asig -> MASIGUAL .)
    LET             reduce using rule 53 (operadores_asig -> MASIGUAL .)
    VAR             reduce using rule 53 (operadores_asig -> MASIGUAL .)
    CONST           reduce using rule 53 (operadores_asig -> MASIGUAL .)


state 64

    (54) operadores_asig -> MENOSIGUAL .

    VARIABLE        reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    NUMBER          reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    STRING          reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    BIGINT          reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    NULL            reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    IZQCORCHETE     reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    NEW             reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    LET             reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    VAR             reduce using rule 54 (operadores_asig -> MENOSIGUAL .)
    CONST           reduce using rule 54 (operadores_asig -> MENOSIGUAL .)


state 65

    (55) operadores_asig -> DIVIGUAL .

    VARIABLE        reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    NUMBER          reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    STRING          reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    BIGINT          reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    NULL            reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    SYMBOL          reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    IZQCORCHETE     reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    NEW             reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    LET             reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    VAR             reduce using rule 55 (operadores_asig -> DIVIGUAL .)
    CONST           reduce using rule 55 (operadores_asig -> DIVIGUAL .)


state 66

    (56) operadores_asig -> MODIGUAL .

    VARIABLE        reduce using rule 56 (operadores_asig -> MODIGUAL .)
    NUMBER          reduce using rule 56 (operadores_asig -> MODIGUAL .)
    STRING          reduce using rule 56 (operadores_asig -> MODIGUAL .)
    BOOLEAN         reduce using rule 56 (operadores_asig -> MODIGUAL .)
    BIGINT          reduce using rule 56 (operadores_asig -> MODIGUAL .)
    NULL            reduce using rule 56 (operadores_asig -> MODIGUAL .)
    SYMBOL          reduce using rule 56 (operadores_asig -> MODIGUAL .)
    IZQCORCHETE     reduce using rule 56 (operadores_asig -> MODIGUAL .)
    NEW             reduce using rule 56 (operadores_asig -> MODIGUAL .)
    LET             reduce using rule 56 (operadores_asig -> MODIGUAL .)
    VAR             reduce using rule 56 (operadores_asig -> MODIGUAL .)
    CONST           reduce using rule 56 (operadores_asig -> MODIGUAL .)


state 67

    (57) operadores_asig -> MULTIGUAL .

    VARIABLE        reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    NUMBER          reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    STRING          reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    BOOLEAN         reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    BIGINT          reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    NULL            reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    SYMBOL          reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    IZQCORCHETE     reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    NEW             reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    LET             reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    VAR             reduce using rule 57 (operadores_asig -> MULTIGUAL .)
    CONST           reduce using rule 57 (operadores_asig -> MULTIGUAL .)


state 68

    (18) declaracion -> LET VARIABLE .
    (21) declaracion -> LET VARIABLE . IGUAL tipos_datos
    (24) declaracion -> LET VARIABLE . IGUAL comparacion
    (27) declaracion -> LET VARIABLE . IGUAL expresion
    (96) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    FINALDELINEA    reduce using rule 18 (declaracion -> LET VARIABLE .)
    VAR             reduce using rule 18 (declaracion -> LET VARIABLE .)
    LET             reduce using rule 18 (declaracion -> LET VARIABLE .)
    CONST           reduce using rule 18 (declaracion -> LET VARIABLE .)
    VARIABLE        reduce using rule 18 (declaracion -> LET VARIABLE .)
    RETURN          reduce using rule 18 (declaracion -> LET VARIABLE .)
    IZQCORCHETE     reduce using rule 18 (declaracion -> LET VARIABLE .)
    NEW             reduce using rule 18 (declaracion -> LET VARIABLE .)
    IF              reduce using rule 18 (declaracion -> LET VARIABLE .)
    SWITCH          reduce using rule 18 (declaracion -> LET VARIABLE .)
    WHILE           reduce using rule 18 (declaracion -> LET VARIABLE .)
    MAPLOWER        reduce using rule 18 (declaracion -> LET VARIABLE .)
    FUNCTION        reduce using rule 18 (declaracion -> LET VARIABLE .)
    IZQPAREN        reduce using rule 18 (declaracion -> LET VARIABLE .)
    NUMBER          reduce using rule 18 (declaracion -> LET VARIABLE .)
    STRING          reduce using rule 18 (declaracion -> LET VARIABLE .)
    BOOLEAN         reduce using rule 18 (declaracion -> LET VARIABLE .)
    BIGINT          reduce using rule 18 (declaracion -> LET VARIABLE .)
    NULL            reduce using rule 18 (declaracion -> LET VARIABLE .)
    SYMBOL          reduce using rule 18 (declaracion -> LET VARIABLE .)
    $end            reduce using rule 18 (declaracion -> LET VARIABLE .)
    DERLLAVE        reduce using rule 18 (declaracion -> LET VARIABLE .)
    BREAK           reduce using rule 18 (declaracion -> LET VARIABLE .)
    IGUAL           shift and go to state 100


state 69

    (19) declaracion -> CONST VARIABLE .
    (22) declaracion -> CONST VARIABLE . IGUAL tipos_datos
    (25) declaracion -> CONST VARIABLE . IGUAL comparacion
    (28) declaracion -> CONST VARIABLE . IGUAL expresion
    (98) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    FINALDELINEA    reduce using rule 19 (declaracion -> CONST VARIABLE .)
    VAR             reduce using rule 19 (declaracion -> CONST VARIABLE .)
    LET             reduce using rule 19 (declaracion -> CONST VARIABLE .)
    CONST           reduce using rule 19 (declaracion -> CONST VARIABLE .)
    VARIABLE        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    RETURN          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    IZQCORCHETE     reduce using rule 19 (declaracion -> CONST VARIABLE .)
    NEW             reduce using rule 19 (declaracion -> CONST VARIABLE .)
    IF              reduce using rule 19 (declaracion -> CONST VARIABLE .)
    SWITCH          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    WHILE           reduce using rule 19 (declaracion -> CONST VARIABLE .)
    MAPLOWER        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    FUNCTION        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    IZQPAREN        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    NUMBER          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    STRING          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    BOOLEAN         reduce using rule 19 (declaracion -> CONST VARIABLE .)
    BIGINT          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    NULL            reduce using rule 19 (declaracion -> CONST VARIABLE .)
    SYMBOL          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    $end            reduce using rule 19 (declaracion -> CONST VARIABLE .)
    DERLLAVE        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    BREAK           reduce using rule 19 (declaracion -> CONST VARIABLE .)
    IGUAL           shift and go to state 101


state 70

    (74) funcion -> funcion_enc IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    funcion_enc                    shift and go to state 22
    js                             shift and go to state 102
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 71

    (39) term -> term MULT . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    factor                         shift and go to state 103
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 72

    (40) term -> term DIV . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    factor                         shift and go to state 104
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 73

    (38) expresion -> RETURN expresion .
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    FINALDELINEA    reduce using rule 38 (expresion -> RETURN expresion .)
    MAYORQUE        reduce using rule 38 (expresion -> RETURN expresion .)
    MENORQUE        reduce using rule 38 (expresion -> RETURN expresion .)
    MAYORIGUALQUE   reduce using rule 38 (expresion -> RETURN expresion .)
    MENORIGUALQUE   reduce using rule 38 (expresion -> RETURN expresion .)
    NOIGUALQUE      reduce using rule 38 (expresion -> RETURN expresion .)
    IGUALIGUAL      reduce using rule 38 (expresion -> RETURN expresion .)
    AND             reduce using rule 38 (expresion -> RETURN expresion .)
    OR              reduce using rule 38 (expresion -> RETURN expresion .)
    VAR             reduce using rule 38 (expresion -> RETURN expresion .)
    LET             reduce using rule 38 (expresion -> RETURN expresion .)
    CONST           reduce using rule 38 (expresion -> RETURN expresion .)
    VARIABLE        reduce using rule 38 (expresion -> RETURN expresion .)
    RETURN          reduce using rule 38 (expresion -> RETURN expresion .)
    IZQCORCHETE     reduce using rule 38 (expresion -> RETURN expresion .)
    NEW             reduce using rule 38 (expresion -> RETURN expresion .)
    IF              reduce using rule 38 (expresion -> RETURN expresion .)
    SWITCH          reduce using rule 38 (expresion -> RETURN expresion .)
    WHILE           reduce using rule 38 (expresion -> RETURN expresion .)
    MAPLOWER        reduce using rule 38 (expresion -> RETURN expresion .)
    FUNCTION        reduce using rule 38 (expresion -> RETURN expresion .)
    IZQPAREN        reduce using rule 38 (expresion -> RETURN expresion .)
    NUMBER          reduce using rule 38 (expresion -> RETURN expresion .)
    STRING          reduce using rule 38 (expresion -> RETURN expresion .)
    BOOLEAN         reduce using rule 38 (expresion -> RETURN expresion .)
    BIGINT          reduce using rule 38 (expresion -> RETURN expresion .)
    NULL            reduce using rule 38 (expresion -> RETURN expresion .)
    SYMBOL          reduce using rule 38 (expresion -> RETURN expresion .)
    $end            reduce using rule 38 (expresion -> RETURN expresion .)
    DERLLAVE        reduce using rule 38 (expresion -> RETURN expresion .)
    BREAK           reduce using rule 38 (expresion -> RETURN expresion .)
    DERPAREN        reduce using rule 38 (expresion -> RETURN expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49

  ! MAS             [ reduce using rule 38 (expresion -> RETURN expresion .) ]
  ! MENOS           [ reduce using rule 38 (expresion -> RETURN expresion .) ]


state 74

    (42) factor -> VARIABLE .

    MULT            reduce using rule 42 (factor -> VARIABLE .)
    DIV             reduce using rule 42 (factor -> VARIABLE .)
    MAS             reduce using rule 42 (factor -> VARIABLE .)
    MENOS           reduce using rule 42 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 42 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 42 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 42 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 42 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 42 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 42 (factor -> VARIABLE .)
    AND             reduce using rule 42 (factor -> VARIABLE .)
    OR              reduce using rule 42 (factor -> VARIABLE .)
    VAR             reduce using rule 42 (factor -> VARIABLE .)
    LET             reduce using rule 42 (factor -> VARIABLE .)
    CONST           reduce using rule 42 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 42 (factor -> VARIABLE .)
    RETURN          reduce using rule 42 (factor -> VARIABLE .)
    IZQCORCHETE     reduce using rule 42 (factor -> VARIABLE .)
    NEW             reduce using rule 42 (factor -> VARIABLE .)
    IF              reduce using rule 42 (factor -> VARIABLE .)
    SWITCH          reduce using rule 42 (factor -> VARIABLE .)
    WHILE           reduce using rule 42 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 42 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 42 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 42 (factor -> VARIABLE .)
    NUMBER          reduce using rule 42 (factor -> VARIABLE .)
    STRING          reduce using rule 42 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 42 (factor -> VARIABLE .)
    BIGINT          reduce using rule 42 (factor -> VARIABLE .)
    NULL            reduce using rule 42 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 42 (factor -> VARIABLE .)
    $end            reduce using rule 42 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 42 (factor -> VARIABLE .)
    BREAK           reduce using rule 42 (factor -> VARIABLE .)
    DERPAREN        reduce using rule 42 (factor -> VARIABLE .)


state 75

    (84) estructuras_datos -> arreglo .

    MULT            reduce using rule 84 (estructuras_datos -> arreglo .)
    DIV             reduce using rule 84 (estructuras_datos -> arreglo .)
    MAS             reduce using rule 84 (estructuras_datos -> arreglo .)
    MENOS           reduce using rule 84 (estructuras_datos -> arreglo .)
    FINALDELINEA    reduce using rule 84 (estructuras_datos -> arreglo .)
    MAYORQUE        reduce using rule 84 (estructuras_datos -> arreglo .)
    MENORQUE        reduce using rule 84 (estructuras_datos -> arreglo .)
    MAYORIGUALQUE   reduce using rule 84 (estructuras_datos -> arreglo .)
    MENORIGUALQUE   reduce using rule 84 (estructuras_datos -> arreglo .)
    NOIGUALQUE      reduce using rule 84 (estructuras_datos -> arreglo .)
    IGUALIGUAL      reduce using rule 84 (estructuras_datos -> arreglo .)
    AND             reduce using rule 84 (estructuras_datos -> arreglo .)
    OR              reduce using rule 84 (estructuras_datos -> arreglo .)
    VAR             reduce using rule 84 (estructuras_datos -> arreglo .)
    LET             reduce using rule 84 (estructuras_datos -> arreglo .)
    CONST           reduce using rule 84 (estructuras_datos -> arreglo .)
    VARIABLE        reduce using rule 84 (estructuras_datos -> arreglo .)
    RETURN          reduce using rule 84 (estructuras_datos -> arreglo .)
    IZQCORCHETE     reduce using rule 84 (estructuras_datos -> arreglo .)
    NEW             reduce using rule 84 (estructuras_datos -> arreglo .)
    IF              reduce using rule 84 (estructuras_datos -> arreglo .)
    SWITCH          reduce using rule 84 (estructuras_datos -> arreglo .)
    WHILE           reduce using rule 84 (estructuras_datos -> arreglo .)
    MAPLOWER        reduce using rule 84 (estructuras_datos -> arreglo .)
    FUNCTION        reduce using rule 84 (estructuras_datos -> arreglo .)
    IZQPAREN        reduce using rule 84 (estructuras_datos -> arreglo .)
    NUMBER          reduce using rule 84 (estructuras_datos -> arreglo .)
    STRING          reduce using rule 84 (estructuras_datos -> arreglo .)
    BOOLEAN         reduce using rule 84 (estructuras_datos -> arreglo .)
    BIGINT          reduce using rule 84 (estructuras_datos -> arreglo .)
    NULL            reduce using rule 84 (estructuras_datos -> arreglo .)
    SYMBOL          reduce using rule 84 (estructuras_datos -> arreglo .)
    $end            reduce using rule 84 (estructuras_datos -> arreglo .)
    DERLLAVE        reduce using rule 84 (estructuras_datos -> arreglo .)
    BREAK           reduce using rule 84 (estructuras_datos -> arreglo .)
    DERPAREN        reduce using rule 84 (estructuras_datos -> arreglo .)
    DERCORCHETE     reduce using rule 84 (estructuras_datos -> arreglo .)
    COMA            reduce using rule 84 (estructuras_datos -> arreglo .)
    DOSPUNTOS       reduce using rule 84 (estructuras_datos -> arreglo .)


state 76

    (85) estructuras_datos -> map .

    MULT            reduce using rule 85 (estructuras_datos -> map .)
    DIV             reduce using rule 85 (estructuras_datos -> map .)
    MAS             reduce using rule 85 (estructuras_datos -> map .)
    MENOS           reduce using rule 85 (estructuras_datos -> map .)
    FINALDELINEA    reduce using rule 85 (estructuras_datos -> map .)
    MAYORQUE        reduce using rule 85 (estructuras_datos -> map .)
    MENORQUE        reduce using rule 85 (estructuras_datos -> map .)
    MAYORIGUALQUE   reduce using rule 85 (estructuras_datos -> map .)
    MENORIGUALQUE   reduce using rule 85 (estructuras_datos -> map .)
    NOIGUALQUE      reduce using rule 85 (estructuras_datos -> map .)
    IGUALIGUAL      reduce using rule 85 (estructuras_datos -> map .)
    AND             reduce using rule 85 (estructuras_datos -> map .)
    OR              reduce using rule 85 (estructuras_datos -> map .)
    VAR             reduce using rule 85 (estructuras_datos -> map .)
    LET             reduce using rule 85 (estructuras_datos -> map .)
    CONST           reduce using rule 85 (estructuras_datos -> map .)
    VARIABLE        reduce using rule 85 (estructuras_datos -> map .)
    RETURN          reduce using rule 85 (estructuras_datos -> map .)
    IZQCORCHETE     reduce using rule 85 (estructuras_datos -> map .)
    NEW             reduce using rule 85 (estructuras_datos -> map .)
    IF              reduce using rule 85 (estructuras_datos -> map .)
    SWITCH          reduce using rule 85 (estructuras_datos -> map .)
    WHILE           reduce using rule 85 (estructuras_datos -> map .)
    MAPLOWER        reduce using rule 85 (estructuras_datos -> map .)
    FUNCTION        reduce using rule 85 (estructuras_datos -> map .)
    IZQPAREN        reduce using rule 85 (estructuras_datos -> map .)
    NUMBER          reduce using rule 85 (estructuras_datos -> map .)
    STRING          reduce using rule 85 (estructuras_datos -> map .)
    BOOLEAN         reduce using rule 85 (estructuras_datos -> map .)
    BIGINT          reduce using rule 85 (estructuras_datos -> map .)
    NULL            reduce using rule 85 (estructuras_datos -> map .)
    SYMBOL          reduce using rule 85 (estructuras_datos -> map .)
    $end            reduce using rule 85 (estructuras_datos -> map .)
    DERLLAVE        reduce using rule 85 (estructuras_datos -> map .)
    BREAK           reduce using rule 85 (estructuras_datos -> map .)
    DERPAREN        reduce using rule 85 (estructuras_datos -> map .)
    DERCORCHETE     reduce using rule 85 (estructuras_datos -> map .)
    COMA            reduce using rule 85 (estructuras_datos -> map .)
    DOSPUNTOS       reduce using rule 85 (estructuras_datos -> map .)


state 77

    (96) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 105


state 78

    (97) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 106


state 79

    (98) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 107


state 80

    (87) arreglo -> IZQCORCHETE lista . DERCORCHETE final_linea
    (92) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 108
    COMA            shift and go to state 109


state 81

    (91) arreglo -> IZQCORCHETE DERCORCHETE . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 110
    empty                          shift and go to state 45

state 82

    (93) lista -> tipos_datos .

    DERCORCHETE     reduce using rule 93 (lista -> tipos_datos .)
    COMA            reduce using rule 93 (lista -> tipos_datos .)
    DERPAREN        reduce using rule 93 (lista -> tipos_datos .)


state 83

    (88) arreglo -> NEW ARRAY . IZQPAREN DERPAREN final_linea
    (89) arreglo -> NEW ARRAY . IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> NEW ARRAY . IZQPAREN lista DERPAREN final_linea

    IZQPAREN        shift and go to state 111


state 84

    (100) set -> NEW SET . IZQPAREN DERPAREN
    (101) set -> NEW SET . IZQPAREN NULL DERPAREN
    (102) set -> NEW SET . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 112


state 85

    (44) factor -> IZQPAREN expresion . DERPAREN
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 113
    MAS             shift and go to state 48
    MENOS           shift and go to state 49


state 86

    (75) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (35) comparacion -> . expresion operadores_comp term
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    comparacion                    shift and go to state 114
    expresion                      shift and go to state 115
    term                           shift and go to state 23
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 87

    (78) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 116


state 88

    (83) while -> WHILE IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (35) comparacion -> . expresion operadores_comp term
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    comparacion                    shift and go to state 117
    expresion                      shift and go to state 115
    term                           shift and go to state 23
    factor                         shift and go to state 34
    tipos_datos                    shift and go to state 21
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 89

    (99) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    SET             shift and go to state 118


state 90

    (69) funcion_enc -> FUNCTION VARIABLE . funcion_param
    (70) funcion_param -> . IZQPAREN parametros DERPAREN

    IZQPAREN        shift and go to state 120

    funcion_param                  shift and go to state 119

state 91

    (33) expresion -> expresion MAS term .
    (39) term -> term . MULT factor
    (40) term -> term . DIV factor

    MAS             reduce using rule 33 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 33 (expresion -> expresion MAS term .)
    FINALDELINEA    reduce using rule 33 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 33 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 33 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 33 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 33 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 33 (expresion -> expresion MAS term .)
    IGUALIGUAL      reduce using rule 33 (expresion -> expresion MAS term .)
    AND             reduce using rule 33 (expresion -> expresion MAS term .)
    OR              reduce using rule 33 (expresion -> expresion MAS term .)
    VAR             reduce using rule 33 (expresion -> expresion MAS term .)
    LET             reduce using rule 33 (expresion -> expresion MAS term .)
    CONST           reduce using rule 33 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 33 (expresion -> expresion MAS term .)
    RETURN          reduce using rule 33 (expresion -> expresion MAS term .)
    IZQCORCHETE     reduce using rule 33 (expresion -> expresion MAS term .)
    NEW             reduce using rule 33 (expresion -> expresion MAS term .)
    IF              reduce using rule 33 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 33 (expresion -> expresion MAS term .)
    WHILE           reduce using rule 33 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 33 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 33 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 33 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 33 (expresion -> expresion MAS term .)
    STRING          reduce using rule 33 (expresion -> expresion MAS term .)
    BOOLEAN         reduce using rule 33 (expresion -> expresion MAS term .)
    BIGINT          reduce using rule 33 (expresion -> expresion MAS term .)
    NULL            reduce using rule 33 (expresion -> expresion MAS term .)
    SYMBOL          reduce using rule 33 (expresion -> expresion MAS term .)
    $end            reduce using rule 33 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 33 (expresion -> expresion MAS term .)
    BREAK           reduce using rule 33 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 33 (expresion -> expresion MAS term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 92

    (34) expresion -> expresion MENOS term .
    (39) term -> term . MULT factor
    (40) term -> term . DIV factor

    MAS             reduce using rule 34 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 34 (expresion -> expresion MENOS term .)
    FINALDELINEA    reduce using rule 34 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 34 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 34 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 34 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 34 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 34 (expresion -> expresion MENOS term .)
    IGUALIGUAL      reduce using rule 34 (expresion -> expresion MENOS term .)
    AND             reduce using rule 34 (expresion -> expresion MENOS term .)
    OR              reduce using rule 34 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 34 (expresion -> expresion MENOS term .)
    LET             reduce using rule 34 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 34 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 34 (expresion -> expresion MENOS term .)
    RETURN          reduce using rule 34 (expresion -> expresion MENOS term .)
    IZQCORCHETE     reduce using rule 34 (expresion -> expresion MENOS term .)
    NEW             reduce using rule 34 (expresion -> expresion MENOS term .)
    IF              reduce using rule 34 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 34 (expresion -> expresion MENOS term .)
    WHILE           reduce using rule 34 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 34 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 34 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 34 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 34 (expresion -> expresion MENOS term .)
    STRING          reduce using rule 34 (expresion -> expresion MENOS term .)
    BOOLEAN         reduce using rule 34 (expresion -> expresion MENOS term .)
    BIGINT          reduce using rule 34 (expresion -> expresion MENOS term .)
    NULL            reduce using rule 34 (expresion -> expresion MENOS term .)
    SYMBOL          reduce using rule 34 (expresion -> expresion MENOS term .)
    $end            reduce using rule 34 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 34 (expresion -> expresion MENOS term .)
    BREAK           reduce using rule 34 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 34 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 93

    (35) comparacion -> expresion operadores_comp term .
    (39) term -> term . MULT factor
    (40) term -> term . DIV factor

    VAR             reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    LET             reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    CONST           reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    VARIABLE        reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    RETURN          reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    IZQCORCHETE     reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    NEW             reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    IF              reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    SWITCH          reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    WHILE           reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    MAPLOWER        reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    FUNCTION        reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    IZQPAREN        reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    NUMBER          reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    STRING          reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    BOOLEAN         reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    BIGINT          reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    NULL            reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    SYMBOL          reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    $end            reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    DERLLAVE        reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    BREAK           reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    FINALDELINEA    reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    DERPAREN        reduce using rule 35 (comparacion -> expresion operadores_comp term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 94

    (36) logica -> expresion operadores_log term .
    (39) term -> term . MULT factor
    (40) term -> term . DIV factor

    VAR             reduce using rule 36 (logica -> expresion operadores_log term .)
    LET             reduce using rule 36 (logica -> expresion operadores_log term .)
    CONST           reduce using rule 36 (logica -> expresion operadores_log term .)
    VARIABLE        reduce using rule 36 (logica -> expresion operadores_log term .)
    RETURN          reduce using rule 36 (logica -> expresion operadores_log term .)
    IZQCORCHETE     reduce using rule 36 (logica -> expresion operadores_log term .)
    NEW             reduce using rule 36 (logica -> expresion operadores_log term .)
    IF              reduce using rule 36 (logica -> expresion operadores_log term .)
    SWITCH          reduce using rule 36 (logica -> expresion operadores_log term .)
    WHILE           reduce using rule 36 (logica -> expresion operadores_log term .)
    MAPLOWER        reduce using rule 36 (logica -> expresion operadores_log term .)
    FUNCTION        reduce using rule 36 (logica -> expresion operadores_log term .)
    IZQPAREN        reduce using rule 36 (logica -> expresion operadores_log term .)
    NUMBER          reduce using rule 36 (logica -> expresion operadores_log term .)
    STRING          reduce using rule 36 (logica -> expresion operadores_log term .)
    BOOLEAN         reduce using rule 36 (logica -> expresion operadores_log term .)
    BIGINT          reduce using rule 36 (logica -> expresion operadores_log term .)
    NULL            reduce using rule 36 (logica -> expresion operadores_log term .)
    SYMBOL          reduce using rule 36 (logica -> expresion operadores_log term .)
    $end            reduce using rule 36 (logica -> expresion operadores_log term .)
    DERLLAVE        reduce using rule 36 (logica -> expresion operadores_log term .)
    BREAK           reduce using rule 36 (logica -> expresion operadores_log term .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72


state 95

    (20) declaracion -> VAR VARIABLE IGUAL . tipos_datos
    (23) declaracion -> VAR VARIABLE IGUAL . comparacion
    (26) declaracion -> VAR VARIABLE IGUAL . expresion
    (97) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (94) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (35) comparacion -> . expresion operadores_comp term
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN

    NEW             shift and go to state 125
    VARIABLE        shift and go to state 121
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79
    IZQPAREN        shift and go to state 27

    tipos_datos                    shift and go to state 122
    comparacion                    shift and go to state 123
    expresion                      shift and go to state 124
    estructuras_datos              shift and go to state 40
    term                           shift and go to state 23
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41
    factor                         shift and go to state 34

state 96

    (30) asignacion -> VARIABLE operadores_asig VARIABLE .

    FINALDELINEA    reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    VAR             reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    LET             reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    CONST           reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    VARIABLE        reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    RETURN          reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    IZQCORCHETE     reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    NEW             reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    IF              reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    SWITCH          reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    WHILE           reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    MAPLOWER        reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    FUNCTION        reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    IZQPAREN        reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    NUMBER          reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    STRING          reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    BOOLEAN         reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    BIGINT          reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    NULL            reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    SYMBOL          reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    $end            reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    DERLLAVE        reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)
    BREAK           reduce using rule 30 (asignacion -> VARIABLE operadores_asig VARIABLE .)


state 97

    (29) asignacion -> VARIABLE operadores_asig tipos_datos .

    FINALDELINEA    reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    VAR             reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    LET             reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    CONST           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    VARIABLE        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    RETURN          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IZQCORCHETE     reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NEW             reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IF              reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    SWITCH          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    WHILE           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    MAPLOWER        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    FUNCTION        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IZQPAREN        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NUMBER          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    STRING          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BOOLEAN         reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BIGINT          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NULL            reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    SYMBOL          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    $end            reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    DERLLAVE        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BREAK           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)


state 98

    (31) asignacion -> VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    LET             reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    IF              reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    $end            reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 31 (asignacion -> VARIABLE IGUAL comparacion .)


state 99

    (32) asignacion -> VARIABLE IGUAL expresion .
    (35) comparacion -> expresion . operadores_comp term
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term
    (58) operadores_comp -> . MAYORQUE
    (59) operadores_comp -> . MENORQUE
    (60) operadores_comp -> . MAYORIGUALQUE
    (61) operadores_comp -> . MENORIGUALQUE
    (62) operadores_comp -> . NOIGUALQUE
    (63) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    VAR             reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    LET             reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    CONST           reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    NEW             reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    IF              reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    STRING          reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    NULL            reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    $end            reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 100

    (21) declaracion -> LET VARIABLE IGUAL . tipos_datos
    (24) declaracion -> LET VARIABLE IGUAL . comparacion
    (27) declaracion -> LET VARIABLE IGUAL . expresion
    (96) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (35) comparacion -> . expresion operadores_comp term
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN

    NEW             shift and go to state 129
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27

    tipos_datos                    shift and go to state 126
    comparacion                    shift and go to state 127
    expresion                      shift and go to state 128
    estructuras_datos              shift and go to state 40
    term                           shift and go to state 23
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41
    factor                         shift and go to state 34

state 101

    (22) declaracion -> CONST VARIABLE IGUAL . tipos_datos
    (25) declaracion -> CONST VARIABLE IGUAL . comparacion
    (28) declaracion -> CONST VARIABLE IGUAL . expresion
    (98) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (35) comparacion -> . expresion operadores_comp term
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN

    NEW             shift and go to state 133
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79
    VARIABLE        shift and go to state 74
    IZQPAREN        shift and go to state 27

    tipos_datos                    shift and go to state 130
    comparacion                    shift and go to state 131
    expresion                      shift and go to state 132
    estructuras_datos              shift and go to state 40
    term                           shift and go to state 23
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41
    factor                         shift and go to state 34

state 102

    (74) funcion -> funcion_enc IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 134


state 103

    (39) term -> term MULT factor .

    MULT            reduce using rule 39 (term -> term MULT factor .)
    DIV             reduce using rule 39 (term -> term MULT factor .)
    MAS             reduce using rule 39 (term -> term MULT factor .)
    MENOS           reduce using rule 39 (term -> term MULT factor .)
    FINALDELINEA    reduce using rule 39 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 39 (term -> term MULT factor .)
    MENORQUE        reduce using rule 39 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 39 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 39 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 39 (term -> term MULT factor .)
    IGUALIGUAL      reduce using rule 39 (term -> term MULT factor .)
    AND             reduce using rule 39 (term -> term MULT factor .)
    OR              reduce using rule 39 (term -> term MULT factor .)
    VAR             reduce using rule 39 (term -> term MULT factor .)
    LET             reduce using rule 39 (term -> term MULT factor .)
    CONST           reduce using rule 39 (term -> term MULT factor .)
    VARIABLE        reduce using rule 39 (term -> term MULT factor .)
    RETURN          reduce using rule 39 (term -> term MULT factor .)
    IZQCORCHETE     reduce using rule 39 (term -> term MULT factor .)
    NEW             reduce using rule 39 (term -> term MULT factor .)
    IF              reduce using rule 39 (term -> term MULT factor .)
    SWITCH          reduce using rule 39 (term -> term MULT factor .)
    WHILE           reduce using rule 39 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 39 (term -> term MULT factor .)
    FUNCTION        reduce using rule 39 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 39 (term -> term MULT factor .)
    NUMBER          reduce using rule 39 (term -> term MULT factor .)
    STRING          reduce using rule 39 (term -> term MULT factor .)
    BOOLEAN         reduce using rule 39 (term -> term MULT factor .)
    BIGINT          reduce using rule 39 (term -> term MULT factor .)
    NULL            reduce using rule 39 (term -> term MULT factor .)
    SYMBOL          reduce using rule 39 (term -> term MULT factor .)
    $end            reduce using rule 39 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 39 (term -> term MULT factor .)
    BREAK           reduce using rule 39 (term -> term MULT factor .)
    DERPAREN        reduce using rule 39 (term -> term MULT factor .)


state 104

    (40) term -> term DIV factor .

    MULT            reduce using rule 40 (term -> term DIV factor .)
    DIV             reduce using rule 40 (term -> term DIV factor .)
    MAS             reduce using rule 40 (term -> term DIV factor .)
    MENOS           reduce using rule 40 (term -> term DIV factor .)
    FINALDELINEA    reduce using rule 40 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 40 (term -> term DIV factor .)
    MENORQUE        reduce using rule 40 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 40 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 40 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 40 (term -> term DIV factor .)
    IGUALIGUAL      reduce using rule 40 (term -> term DIV factor .)
    AND             reduce using rule 40 (term -> term DIV factor .)
    OR              reduce using rule 40 (term -> term DIV factor .)
    VAR             reduce using rule 40 (term -> term DIV factor .)
    LET             reduce using rule 40 (term -> term DIV factor .)
    CONST           reduce using rule 40 (term -> term DIV factor .)
    VARIABLE        reduce using rule 40 (term -> term DIV factor .)
    RETURN          reduce using rule 40 (term -> term DIV factor .)
    IZQCORCHETE     reduce using rule 40 (term -> term DIV factor .)
    NEW             reduce using rule 40 (term -> term DIV factor .)
    IF              reduce using rule 40 (term -> term DIV factor .)
    SWITCH          reduce using rule 40 (term -> term DIV factor .)
    WHILE           reduce using rule 40 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 40 (term -> term DIV factor .)
    FUNCTION        reduce using rule 40 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 40 (term -> term DIV factor .)
    NUMBER          reduce using rule 40 (term -> term DIV factor .)
    STRING          reduce using rule 40 (term -> term DIV factor .)
    BOOLEAN         reduce using rule 40 (term -> term DIV factor .)
    BIGINT          reduce using rule 40 (term -> term DIV factor .)
    NULL            reduce using rule 40 (term -> term DIV factor .)
    SYMBOL          reduce using rule 40 (term -> term DIV factor .)
    $end            reduce using rule 40 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 40 (term -> term DIV factor .)
    BREAK           reduce using rule 40 (term -> term DIV factor .)
    DERPAREN        reduce using rule 40 (term -> term DIV factor .)


state 105

    (96) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    IGUAL           shift and go to state 135


state 106

    (97) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    IGUAL           shift and go to state 136


state 107

    (98) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    IGUAL           shift and go to state 137


state 108

    (87) arreglo -> IZQCORCHETE lista DERCORCHETE . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 138
    empty                          shift and go to state 45

state 109

    (92) lista -> lista COMA . lista
    (92) lista -> . lista COMA lista
    (93) lista -> . tipos_datos
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    lista                          shift and go to state 139
    tipos_datos                    shift and go to state 82
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 110

    (91) arreglo -> IZQCORCHETE DERCORCHETE final_linea .

    VAR             reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    LET             reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    CONST           reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    VARIABLE        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    RETURN          reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IZQCORCHETE     reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NEW             reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IF              reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    SWITCH          reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    WHILE           reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAPLOWER        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    FUNCTION        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IZQPAREN        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NUMBER          reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    STRING          reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    BOOLEAN         reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    BIGINT          reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NULL            reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    SYMBOL          reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    $end            reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MULT            reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DIV             reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAS             reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MENOS           reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    FINALDELINEA    reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAYORQUE        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MENORQUE        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MAYORIGUALQUE   reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    MENORIGUALQUE   reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    NOIGUALQUE      reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    IGUALIGUAL      reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    AND             reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    OR              reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DERLLAVE        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    BREAK           reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DERPAREN        reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DERCORCHETE     reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    COMA            reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)
    DOSPUNTOS       reduce using rule 91 (arreglo -> IZQCORCHETE DERCORCHETE final_linea .)


state 111

    (88) arreglo -> NEW ARRAY IZQPAREN . DERPAREN final_linea
    (89) arreglo -> NEW ARRAY IZQPAREN . NUMBER DERPAREN final_linea
    (90) arreglo -> NEW ARRAY IZQPAREN . lista DERPAREN final_linea
    (92) lista -> . lista COMA lista
    (93) lista -> . tipos_datos
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    DERPAREN        shift and go to state 140
    NUMBER          shift and go to state 141
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    lista                          shift and go to state 142
    tipos_datos                    shift and go to state 82
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 112

    (100) set -> NEW SET IZQPAREN . DERPAREN
    (101) set -> NEW SET IZQPAREN . NULL DERPAREN
    (102) set -> NEW SET IZQPAREN . lista DERPAREN
    (92) lista -> . lista COMA lista
    (93) lista -> . tipos_datos
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    DERPAREN        shift and go to state 143
    NULL            shift and go to state 144
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    lista                          shift and go to state 145
    tipos_datos                    shift and go to state 82
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 113

    (44) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    FINALDELINEA    reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    IGUALIGUAL      reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    AND             reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    OR              reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    RETURN          reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    IZQCORCHETE     reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    NEW             reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    WHILE           reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    STRING          reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    BOOLEAN         reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    BIGINT          reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    NULL            reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    SYMBOL          reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    BREAK           reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 44 (factor -> IZQPAREN expresion DERPAREN .)


state 114

    (75) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 146


state 115

    (35) comparacion -> expresion . operadores_comp term
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term
    (58) operadores_comp -> . MAYORQUE
    (59) operadores_comp -> . MENORQUE
    (60) operadores_comp -> . MAYORIGUALQUE
    (61) operadores_comp -> . MENORIGUALQUE
    (62) operadores_comp -> . NOIGUALQUE
    (63) operadores_comp -> . IGUALIGUAL

    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 116

    (78) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 147


state 117

    (83) while -> WHILE IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 148


state 118

    (99) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    IZQPAREN        shift and go to state 149


state 119

    (69) funcion_enc -> FUNCTION VARIABLE funcion_param .

    IZQLLAVE        reduce using rule 69 (funcion_enc -> FUNCTION VARIABLE funcion_param .)


state 120

    (70) funcion_param -> IZQPAREN . parametros DERPAREN
    (71) parametros -> . VARIABLE
    (72) parametros -> . VARIABLE COMA parametros
    (73) parametros -> . empty
    (68) empty -> .

    VARIABLE        shift and go to state 151
    DERPAREN        reduce using rule 68 (empty -> .)

    parametros                     shift and go to state 150
    empty                          shift and go to state 152

state 121

    (94) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (42) factor -> VARIABLE .

    PUNTO           shift and go to state 153
    MULT            reduce using rule 42 (factor -> VARIABLE .)
    DIV             reduce using rule 42 (factor -> VARIABLE .)
    MAS             reduce using rule 42 (factor -> VARIABLE .)
    MENOS           reduce using rule 42 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 42 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 42 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 42 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 42 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 42 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 42 (factor -> VARIABLE .)
    VAR             reduce using rule 42 (factor -> VARIABLE .)
    LET             reduce using rule 42 (factor -> VARIABLE .)
    CONST           reduce using rule 42 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 42 (factor -> VARIABLE .)
    RETURN          reduce using rule 42 (factor -> VARIABLE .)
    IZQCORCHETE     reduce using rule 42 (factor -> VARIABLE .)
    NEW             reduce using rule 42 (factor -> VARIABLE .)
    IF              reduce using rule 42 (factor -> VARIABLE .)
    SWITCH          reduce using rule 42 (factor -> VARIABLE .)
    WHILE           reduce using rule 42 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 42 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 42 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 42 (factor -> VARIABLE .)
    NUMBER          reduce using rule 42 (factor -> VARIABLE .)
    STRING          reduce using rule 42 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 42 (factor -> VARIABLE .)
    BIGINT          reduce using rule 42 (factor -> VARIABLE .)
    NULL            reduce using rule 42 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 42 (factor -> VARIABLE .)
    $end            reduce using rule 42 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 42 (factor -> VARIABLE .)
    BREAK           reduce using rule 42 (factor -> VARIABLE .)


state 122

    (20) declaracion -> VAR VARIABLE IGUAL tipos_datos .
    (43) factor -> tipos_datos .

  ! reduce/reduce conflict for FINALDELINEA resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VAR resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQCORCHETE resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NEW resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    FINALDELINEA    reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    VAR             reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    LET             reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    CONST           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    VARIABLE        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    RETURN          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    IZQCORCHETE     reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    NEW             reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    IF              reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    SWITCH          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    WHILE           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    MAPLOWER        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    FUNCTION        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    IZQPAREN        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    NUMBER          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    STRING          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    BOOLEAN         reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    BIGINT          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    NULL            reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    SYMBOL          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    $end            reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    DERLLAVE        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    BREAK           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    MULT            reduce using rule 43 (factor -> tipos_datos .)
    DIV             reduce using rule 43 (factor -> tipos_datos .)
    MAS             reduce using rule 43 (factor -> tipos_datos .)
    MENOS           reduce using rule 43 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 43 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 43 (factor -> tipos_datos .)

  ! FINALDELINEA    [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! LET             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! CONST           [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! VARIABLE        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! RETURN          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IZQCORCHETE     [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NEW             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IF              [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! SWITCH          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! WHILE           [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! MAPLOWER        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! FUNCTION        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IZQPAREN        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NUMBER          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! STRING          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BOOLEAN         [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BIGINT          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NULL            [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! SYMBOL          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! $end            [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! DERLLAVE        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BREAK           [ reduce using rule 43 (factor -> tipos_datos .) ]


state 123

    (23) declaracion -> VAR VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    LET             reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IF              reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    $end            reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)


state 124

    (26) declaracion -> VAR VARIABLE IGUAL expresion .
    (35) comparacion -> expresion . operadores_comp term
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term
    (58) operadores_comp -> . MAYORQUE
    (59) operadores_comp -> . MENORQUE
    (60) operadores_comp -> . MAYORIGUALQUE
    (61) operadores_comp -> . MENORIGUALQUE
    (62) operadores_comp -> . NOIGUALQUE
    (63) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    VAR             reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    LET             reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    CONST           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NEW             reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IF              reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    STRING          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NULL            reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    $end            reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 125

    (97) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea
    (88) arreglo -> NEW . ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> NEW . ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> NEW . ARRAY IZQPAREN lista DERPAREN final_linea
    (100) set -> NEW . SET IZQPAREN DERPAREN
    (101) set -> NEW . SET IZQPAREN NULL DERPAREN
    (102) set -> NEW . SET IZQPAREN lista DERPAREN

    MAP             shift and go to state 154
    ARRAY           shift and go to state 83
    SET             shift and go to state 84


state 126

    (21) declaracion -> LET VARIABLE IGUAL tipos_datos .
    (43) factor -> tipos_datos .

  ! reduce/reduce conflict for FINALDELINEA resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VAR resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for RETURN resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQCORCHETE resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NEW resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BREAK resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    FINALDELINEA    reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    VAR             reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    LET             reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    CONST           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    VARIABLE        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    RETURN          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    IZQCORCHETE     reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    NEW             reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    IF              reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    SWITCH          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    WHILE           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    MAPLOWER        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    FUNCTION        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    IZQPAREN        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    NUMBER          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    STRING          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    BOOLEAN         reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    BIGINT          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    NULL            reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    SYMBOL          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    $end            reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    DERLLAVE        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    BREAK           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    MULT            reduce using rule 43 (factor -> tipos_datos .)
    DIV             reduce using rule 43 (factor -> tipos_datos .)
    MAS             reduce using rule 43 (factor -> tipos_datos .)
    MENOS           reduce using rule 43 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 43 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 43 (factor -> tipos_datos .)

  ! FINALDELINEA    [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! LET             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! CONST           [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! VARIABLE        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! RETURN          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IZQCORCHETE     [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NEW             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IF              [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! SWITCH          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! WHILE           [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! MAPLOWER        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! FUNCTION        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IZQPAREN        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NUMBER          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! STRING          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BOOLEAN         [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BIGINT          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NULL            [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! SYMBOL          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! $end            [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! DERLLAVE        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BREAK           [ reduce using rule 43 (factor -> tipos_datos .) ]


state 127

    (24) declaracion -> LET VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    LET             reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IF              reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    $end            reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)


state 128

    (27) declaracion -> LET VARIABLE IGUAL expresion .
    (35) comparacion -> expresion . operadores_comp term
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term
    (58) operadores_comp -> . MAYORQUE
    (59) operadores_comp -> . MENORQUE
    (60) operadores_comp -> . MAYORIGUALQUE
    (61) operadores_comp -> . MENORIGUALQUE
    (62) operadores_comp -> . NOIGUALQUE
    (63) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    VAR             reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    LET             reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    CONST           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    NEW             reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    IF              reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    STRING          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    NULL            reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    $end            reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 129

    (96) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea
    (88) arreglo -> NEW . ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> NEW . ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> NEW . ARRAY IZQPAREN lista DERPAREN final_linea
    (100) set -> NEW . SET IZQPAREN DERPAREN
    (101) set -> NEW . SET IZQPAREN NULL DERPAREN
    (102) set -> NEW . SET IZQPAREN lista DERPAREN

    MAP             shift and go to state 155
    ARRAY           shift and go to state 83
    SET             shift and go to state 84


state 130

    (22) declaracion -> CONST VARIABLE IGUAL tipos_datos .
    (43) factor -> tipos_datos .

  ! reduce/reduce conflict for FINALDELINEA resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VAR resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQCORCHETE resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NEW resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BREAK resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    FINALDELINEA    reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    VAR             reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    LET             reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    CONST           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    VARIABLE        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    RETURN          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    IZQCORCHETE     reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    NEW             reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    IF              reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    SWITCH          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    WHILE           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    MAPLOWER        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    FUNCTION        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    IZQPAREN        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    NUMBER          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    STRING          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    BOOLEAN         reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    BIGINT          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    NULL            reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    SYMBOL          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    $end            reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    DERLLAVE        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    BREAK           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    MULT            reduce using rule 43 (factor -> tipos_datos .)
    DIV             reduce using rule 43 (factor -> tipos_datos .)
    MAS             reduce using rule 43 (factor -> tipos_datos .)
    MENOS           reduce using rule 43 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 43 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 43 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 43 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 43 (factor -> tipos_datos .)

  ! FINALDELINEA    [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! LET             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! CONST           [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! VARIABLE        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! RETURN          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IZQCORCHETE     [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NEW             [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IF              [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! SWITCH          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! WHILE           [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! MAPLOWER        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! FUNCTION        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! IZQPAREN        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NUMBER          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! STRING          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BOOLEAN         [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BIGINT          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! NULL            [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! SYMBOL          [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! $end            [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! DERLLAVE        [ reduce using rule 43 (factor -> tipos_datos .) ]
  ! BREAK           [ reduce using rule 43 (factor -> tipos_datos .) ]


state 131

    (25) declaracion -> CONST VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    LET             reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IZQCORCHETE     reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NEW             reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IF              reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    $end            reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)


state 132

    (28) declaracion -> CONST VARIABLE IGUAL expresion .
    (35) comparacion -> expresion . operadores_comp term
    (33) expresion -> expresion . MAS term
    (34) expresion -> expresion . MENOS term
    (58) operadores_comp -> . MAYORQUE
    (59) operadores_comp -> . MENORQUE
    (60) operadores_comp -> . MAYORIGUALQUE
    (61) operadores_comp -> . MENORIGUALQUE
    (62) operadores_comp -> . NOIGUALQUE
    (63) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    VAR             reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    LET             reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    CONST           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IZQCORCHETE     reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NEW             reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IF              reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    STRING          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NULL            reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    $end            reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    MAYORIGUALQUE   shift and go to state 54
    MENORIGUALQUE   shift and go to state 55
    NOIGUALQUE      shift and go to state 56
    IGUALIGUAL      shift and go to state 57

    operadores_comp                shift and go to state 50

state 133

    (98) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea
    (88) arreglo -> NEW . ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> NEW . ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> NEW . ARRAY IZQPAREN lista DERPAREN final_linea
    (100) set -> NEW . SET IZQPAREN DERPAREN
    (101) set -> NEW . SET IZQPAREN NULL DERPAREN
    (102) set -> NEW . SET IZQPAREN lista DERPAREN

    MAP             shift and go to state 156
    ARRAY           shift and go to state 83
    SET             shift and go to state 84


state 134

    (74) funcion -> funcion_enc IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 74 (funcion -> funcion_enc IZQLLAVE js DERLLAVE .)


state 135

    (96) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea

    NEW             shift and go to state 157


state 136

    (97) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea

    NEW             shift and go to state 158


state 137

    (98) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea

    NEW             shift and go to state 159


state 138

    (87) arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .

    VAR             reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    LET             reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    CONST           reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    VARIABLE        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    RETURN          reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IZQCORCHETE     reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NEW             reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IF              reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    SWITCH          reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    WHILE           reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAPLOWER        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    FUNCTION        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IZQPAREN        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NUMBER          reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    STRING          reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    BOOLEAN         reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    BIGINT          reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NULL            reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    SYMBOL          reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    $end            reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MULT            reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DIV             reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAS             reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MENOS           reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    FINALDELINEA    reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAYORQUE        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MENORQUE        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MAYORIGUALQUE   reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    MENORIGUALQUE   reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    NOIGUALQUE      reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    IGUALIGUAL      reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    AND             reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    OR              reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DERLLAVE        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    BREAK           reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DERPAREN        reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DERCORCHETE     reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    COMA            reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)
    DOSPUNTOS       reduce using rule 87 (arreglo -> IZQCORCHETE lista DERCORCHETE final_linea .)


state 139

    (92) lista -> lista COMA lista .
    (92) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 92 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 92 (lista -> lista COMA lista .)
    COMA            shift and go to state 109

  ! COMA            [ reduce using rule 92 (lista -> lista COMA lista .) ]


state 140

    (88) arreglo -> NEW ARRAY IZQPAREN DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 160
    empty                          shift and go to state 45

state 141

    (89) arreglo -> NEW ARRAY IZQPAREN NUMBER . DERPAREN final_linea
    (45) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 161
    COMA            reduce using rule 45 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 45 (tipos_datos -> NUMBER .) ]


state 142

    (90) arreglo -> NEW ARRAY IZQPAREN lista . DERPAREN final_linea
    (92) lista -> lista . COMA lista

    DERPAREN        shift and go to state 162
    COMA            shift and go to state 109


state 143

    (100) set -> NEW SET IZQPAREN DERPAREN .

    MULT            reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    DIV             reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    MAS             reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    MENOS           reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    FINALDELINEA    reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    MAYORQUE        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    MENORQUE        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    MAYORIGUALQUE   reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    MENORIGUALQUE   reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    NOIGUALQUE      reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    IGUALIGUAL      reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    AND             reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    OR              reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    VAR             reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    LET             reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    CONST           reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    RETURN          reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    IZQCORCHETE     reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    NEW             reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    IF              reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    WHILE           reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    STRING          reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    NULL            reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    $end            reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    BREAK           reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    DERPAREN        reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    DERCORCHETE     reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    COMA            reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)
    DOSPUNTOS       reduce using rule 100 (set -> NEW SET IZQPAREN DERPAREN .)


state 144

    (101) set -> NEW SET IZQPAREN NULL . DERPAREN
    (49) tipos_datos -> NULL .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 163
    COMA            reduce using rule 49 (tipos_datos -> NULL .)

  ! DERPAREN        [ reduce using rule 49 (tipos_datos -> NULL .) ]


state 145

    (102) set -> NEW SET IZQPAREN lista . DERPAREN
    (92) lista -> lista . COMA lista

    DERPAREN        shift and go to state 164
    COMA            shift and go to state 109


state 146

    (75) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (76) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (77) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 165


state 147

    (78) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 166


state 148

    (83) while -> WHILE IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 167


state 149

    (99) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipos_datos COMA tipos_datos DERPAREN final_linea
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    tipos_datos                    shift and go to state 168
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 150

    (70) funcion_param -> IZQPAREN parametros . DERPAREN

    DERPAREN        shift and go to state 169


state 151

    (71) parametros -> VARIABLE .
    (72) parametros -> VARIABLE . COMA parametros

    DERPAREN        reduce using rule 71 (parametros -> VARIABLE .)
    COMA            shift and go to state 170


state 152

    (73) parametros -> empty .

    DERPAREN        reduce using rule 73 (parametros -> empty .)


state 153

    (94) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN final_linea
    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN final_linea

    POP             shift and go to state 171
    PUSH            shift and go to state 172


state 154

    (97) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 173


state 155

    (96) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 174


state 156

    (98) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 175


state 157

    (96) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    MAP             shift and go to state 155


state 158

    (97) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    MAP             shift and go to state 154


state 159

    (98) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    MAP             shift and go to state 156


state 160

    (88) arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MULT            reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DIV             reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAS             reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MENOS           reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAYORQUE        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MENORQUE        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    AND             reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    OR              reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DERPAREN        reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    COMA            reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 88 (arreglo -> NEW ARRAY IZQPAREN DERPAREN final_linea .)


state 161

    (89) arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 176
    empty                          shift and go to state 45

state 162

    (90) arreglo -> NEW ARRAY IZQPAREN lista DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 177
    empty                          shift and go to state 45

state 163

    (101) set -> NEW SET IZQPAREN NULL DERPAREN .

    MULT            reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    DIV             reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    MAS             reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    MENOS           reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    FINALDELINEA    reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    MAYORQUE        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    MENORQUE        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    MAYORIGUALQUE   reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    MENORIGUALQUE   reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    NOIGUALQUE      reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    IGUALIGUAL      reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    AND             reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    OR              reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    VAR             reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    LET             reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    CONST           reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    VARIABLE        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    RETURN          reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    IZQCORCHETE     reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    NEW             reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    IF              reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    SWITCH          reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    WHILE           reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    MAPLOWER        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    FUNCTION        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    IZQPAREN        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    NUMBER          reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    STRING          reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    BOOLEAN         reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    BIGINT          reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    NULL            reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    SYMBOL          reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    $end            reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    DERLLAVE        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    BREAK           reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    DERPAREN        reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    DERCORCHETE     reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    COMA            reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)
    DOSPUNTOS       reduce using rule 101 (set -> NEW SET IZQPAREN NULL DERPAREN .)


state 164

    (102) set -> NEW SET IZQPAREN lista DERPAREN .

    MULT            reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    DIV             reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    MAS             reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    MENOS           reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    FINALDELINEA    reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    MAYORQUE        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    MENORQUE        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    MAYORIGUALQUE   reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    MENORIGUALQUE   reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    NOIGUALQUE      reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    IGUALIGUAL      reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    AND             reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    OR              reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    LET             reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    RETURN          reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    IZQCORCHETE     reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    NEW             reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    IF              reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    $end            reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    BREAK           reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    DERPAREN        reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    DERCORCHETE     reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    COMA            reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)
    DOSPUNTOS       reduce using rule 102 (set -> NEW SET IZQPAREN lista DERPAREN .)


state 165

    (75) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (76) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (77) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    comparacion                    shift and go to state 7
    js                             shift and go to state 178
    if                             shift and go to state 11
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 166

    (78) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) ncasos -> . casos
    (80) ncasos -> . casos ncasos
    (81) casos -> . CASE tipos_datos DOSPUNTOS js BREAK final_linea
    (82) casos -> . CASE tipos_datos DOSPUNTOS

    CASE            shift and go to state 181

    ncasos                         shift and go to state 179
    casos                          shift and go to state 180

state 167

    (83) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    comparacion                    shift and go to state 7
    js                             shift and go to state 182
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 168

    (99) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos . COMA tipos_datos DERPAREN final_linea

    COMA            shift and go to state 183


state 169

    (70) funcion_param -> IZQPAREN parametros DERPAREN .

    IZQLLAVE        reduce using rule 70 (funcion_param -> IZQPAREN parametros DERPAREN .)


state 170

    (72) parametros -> VARIABLE COMA . parametros
    (71) parametros -> . VARIABLE
    (72) parametros -> . VARIABLE COMA parametros
    (73) parametros -> . empty
    (68) empty -> .

    VARIABLE        shift and go to state 151
    DERPAREN        reduce using rule 68 (empty -> .)

    parametros                     shift and go to state 184
    empty                          shift and go to state 152

state 171

    (94) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 185


state 172

    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN final_linea

    IZQPAREN        shift and go to state 186


state 173

    (97) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 187


state 174

    (96) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 188


state 175

    (98) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 189


state 176

    (89) arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .

    VAR             reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    LET             reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    CONST           reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    VARIABLE        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    RETURN          reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NEW             reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IF              reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    SWITCH          reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    WHILE           reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAPLOWER        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    FUNCTION        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IZQPAREN        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NUMBER          reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    STRING          reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    BOOLEAN         reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    BIGINT          reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NULL            reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    SYMBOL          reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    $end            reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MULT            reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DIV             reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAS             reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MENOS           reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAYORQUE        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MENORQUE        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    AND             reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    OR              reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DERLLAVE        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    BREAK           reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DERPAREN        reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    COMA            reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 89 (arreglo -> NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea .)


state 177

    (90) arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .

    VAR             reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    LET             reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    CONST           reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    VARIABLE        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    RETURN          reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NEW             reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IF              reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    SWITCH          reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    WHILE           reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAPLOWER        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    FUNCTION        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IZQPAREN        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NUMBER          reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    STRING          reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    BOOLEAN         reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    BIGINT          reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NULL            reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    SYMBOL          reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    $end            reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MULT            reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DIV             reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAS             reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MENOS           reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAYORQUE        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MENORQUE        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    AND             reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    OR              reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DERLLAVE        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    BREAK           reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DERPAREN        reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    COMA            reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 90 (arreglo -> NEW ARRAY IZQPAREN lista DERPAREN final_linea .)


state 178

    (75) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (76) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (77) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 190


state 179

    (78) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 191


state 180

    (79) ncasos -> casos .
    (80) ncasos -> casos . ncasos
    (79) ncasos -> . casos
    (80) ncasos -> . casos ncasos
    (81) casos -> . CASE tipos_datos DOSPUNTOS js BREAK final_linea
    (82) casos -> . CASE tipos_datos DOSPUNTOS

    DEFAULT         reduce using rule 79 (ncasos -> casos .)
    CASE            shift and go to state 181

    casos                          shift and go to state 180
    ncasos                         shift and go to state 192

state 181

    (81) casos -> CASE . tipos_datos DOSPUNTOS js BREAK final_linea
    (82) casos -> CASE . tipos_datos DOSPUNTOS
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    tipos_datos                    shift and go to state 193
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 182

    (83) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 194


state 183

    (99) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA . tipos_datos DERPAREN final_linea
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    tipos_datos                    shift and go to state 195
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 184

    (72) parametros -> VARIABLE COMA parametros .

    DERPAREN        reduce using rule 72 (parametros -> VARIABLE COMA parametros .)


state 185

    (94) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 196


state 186

    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN final_linea
    (92) lista -> . lista COMA lista
    (93) lista -> . tipos_datos
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    LET             shift and go to state 77
    VAR             shift and go to state 78
    CONST           shift and go to state 79

    lista                          shift and go to state 197
    tipos_datos                    shift and go to state 82
    estructuras_datos              shift and go to state 40
    arreglo                        shift and go to state 75
    map                            shift and go to state 76
    set                            shift and go to state 41

state 187

    (97) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 198
    empty                          shift and go to state 45

state 188

    (96) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 199
    empty                          shift and go to state 45

state 189

    (98) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    MULT            reduce using rule 68 (empty -> .)
    DIV             reduce using rule 68 (empty -> .)
    MAS             reduce using rule 68 (empty -> .)
    MENOS           reduce using rule 68 (empty -> .)
    MAYORQUE        reduce using rule 68 (empty -> .)
    MENORQUE        reduce using rule 68 (empty -> .)
    MAYORIGUALQUE   reduce using rule 68 (empty -> .)
    MENORIGUALQUE   reduce using rule 68 (empty -> .)
    NOIGUALQUE      reduce using rule 68 (empty -> .)
    IGUALIGUAL      reduce using rule 68 (empty -> .)
    AND             reduce using rule 68 (empty -> .)
    OR              reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)
    DERPAREN        reduce using rule 68 (empty -> .)
    DERCORCHETE     reduce using rule 68 (empty -> .)
    COMA            reduce using rule 68 (empty -> .)
    DOSPUNTOS       reduce using rule 68 (empty -> .)

  ! FINALDELINEA    [ reduce using rule 68 (empty -> .) ]

    final_linea                    shift and go to state 200
    empty                          shift and go to state 45

state 190

    (75) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (76) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (77) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VAR             reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 202
    IF              shift and go to state 29

  ! IF              [ reduce using rule 75 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 201

state 191

    (78) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 203


state 192

    (80) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 80 (ncasos -> casos ncasos .)


state 193

    (81) casos -> CASE tipos_datos . DOSPUNTOS js BREAK final_linea
    (82) casos -> CASE tipos_datos . DOSPUNTOS

    DOSPUNTOS       shift and go to state 204


state 194

    (83) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 83 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)


state 195

    (99) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos . DERPAREN final_linea

    DERPAREN        shift and go to state 205


state 196

    (94) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    final_linea                    shift and go to state 206
    empty                          shift and go to state 45

state 197

    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN final_linea
    (92) lista -> lista . COMA lista

    DERPAREN        shift and go to state 207
    COMA            shift and go to state 109


state 198

    (97) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MULT            reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DIV             reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAS             reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENOS           reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORQUE        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORQUE        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    AND             reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    OR              reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERPAREN        reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    COMA            reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 97 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 199

    (96) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MULT            reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DIV             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAS             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENOS           reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORQUE        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORQUE        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    AND             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    OR              reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERPAREN        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    COMA            reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 200

    (98) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MULT            reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DIV             reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAS             reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENOS           reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FINALDELINEA    reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORQUE        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORQUE        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAYORIGUALQUE   reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MENORIGUALQUE   reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NOIGUALQUE      reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IGUALIGUAL      reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    AND             reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    OR              reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERPAREN        reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERCORCHETE     reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    COMA            reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DOSPUNTOS       reduce using rule 98 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 201

    (76) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VAR             reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VARIABLE        reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    RETURN          reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQCORCHETE     reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NEW             reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    WHILE           reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    STRING          reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BOOLEAN         reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BIGINT          reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NULL            reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SYMBOL          reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BREAK           reduce using rule 76 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 202

    (77) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 208


state 203

    (78) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    js                             shift and go to state 209
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 204

    (81) casos -> CASE tipos_datos DOSPUNTOS . js BREAK final_linea
    (82) casos -> CASE tipos_datos DOSPUNTOS .
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    CASE            reduce using rule 82 (casos -> CASE tipos_datos DOSPUNTOS .)
    DEFAULT         reduce using rule 82 (casos -> CASE tipos_datos DOSPUNTOS .)
    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    tipos_datos                    shift and go to state 21
    js                             shift and go to state 210
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 205

    (99) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    final_linea                    shift and go to state 211
    empty                          shift and go to state 45

state 206

    (94) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    NEW             reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 94 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea .)


state 207

    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

    FINALDELINEA    shift and go to state 44
    VAR             reduce using rule 68 (empty -> .)
    LET             reduce using rule 68 (empty -> .)
    CONST           reduce using rule 68 (empty -> .)
    VARIABLE        reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    IZQCORCHETE     reduce using rule 68 (empty -> .)
    NEW             reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    SWITCH          reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    MAPLOWER        reduce using rule 68 (empty -> .)
    FUNCTION        reduce using rule 68 (empty -> .)
    IZQPAREN        reduce using rule 68 (empty -> .)
    NUMBER          reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    BOOLEAN         reduce using rule 68 (empty -> .)
    BIGINT          reduce using rule 68 (empty -> .)
    NULL            reduce using rule 68 (empty -> .)
    SYMBOL          reduce using rule 68 (empty -> .)
    $end            reduce using rule 68 (empty -> .)
    DERLLAVE        reduce using rule 68 (empty -> .)
    BREAK           reduce using rule 68 (empty -> .)

    final_linea                    shift and go to state 212
    empty                          shift and go to state 45

state 208

    (77) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion final_linea
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE operadores_asig VARIABLE
    (31) asignacion -> . VARIABLE IGUAL comparacion
    (32) asignacion -> . VARIABLE IGUAL expresion
    (74) funcion -> . funcion_enc IZQLLAVE js DERLLAVE
    (33) expresion -> . expresion MAS term
    (34) expresion -> . expresion MENOS term
    (37) expresion -> . term
    (38) expresion -> . RETURN expresion
    (35) comparacion -> . expresion operadores_comp term
    (36) logica -> . expresion operadores_log term
    (87) arreglo -> . IZQCORCHETE lista DERCORCHETE final_linea
    (88) arreglo -> . NEW ARRAY IZQPAREN DERPAREN final_linea
    (89) arreglo -> . NEW ARRAY IZQPAREN NUMBER DERPAREN final_linea
    (90) arreglo -> . NEW ARRAY IZQPAREN lista DERPAREN final_linea
    (91) arreglo -> . IZQCORCHETE DERCORCHETE final_linea
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (97) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (98) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (75) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (76) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (77) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (78) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (83) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (94) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN final_linea
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea
    (99) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (69) funcion_enc -> . FUNCTION VARIABLE funcion_param
    (39) term -> . term MULT factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . VARIABLE
    (43) factor -> . tipos_datos
    (44) factor -> . IZQPAREN expresion DERPAREN
    (45) tipos_datos -> . NUMBER
    (46) tipos_datos -> . STRING
    (47) tipos_datos -> . BOOLEAN
    (48) tipos_datos -> . BIGINT
    (49) tipos_datos -> . NULL
    (50) tipos_datos -> . SYMBOL
    (51) tipos_datos -> . estructuras_datos
    (84) estructuras_datos -> . arreglo
    (85) estructuras_datos -> . map
    (86) estructuras_datos -> . set
    (100) set -> . NEW SET IZQPAREN DERPAREN
    (101) set -> . NEW SET IZQPAREN NULL DERPAREN
    (102) set -> . NEW SET IZQPAREN lista DERPAREN

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IZQCORCHETE     shift and go to state 25
    NEW             shift and go to state 26
    IF              shift and go to state 29
    SWITCH          shift and go to state 30
    WHILE           shift and go to state 31
    MAPLOWER        shift and go to state 32
    FUNCTION        shift and go to state 33
    IZQPAREN        shift and go to state 27
    NUMBER          shift and go to state 28
    STRING          shift and go to state 35
    BOOLEAN         shift and go to state 36
    BIGINT          shift and go to state 37
    NULL            shift and go to state 38
    SYMBOL          shift and go to state 39

    comparacion                    shift and go to state 7
    js                             shift and go to state 213
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 34
    estructuras_datos              shift and go to state 40
    set                            shift and go to state 41

state 209

    (78) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 214


state 210

    (81) casos -> CASE tipos_datos DOSPUNTOS js . BREAK final_linea

    BREAK           shift and go to state 215


state 211

    (99) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .

    VAR             reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    LET             reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    CONST           reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    VARIABLE        reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    RETURN          reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NEW             reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IF              reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SWITCH          reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    WHILE           reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    MAPLOWER        reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    FUNCTION        reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IZQPAREN        reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NUMBER          reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    STRING          reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BOOLEAN         reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BIGINT          reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NULL            reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SYMBOL          reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    $end            reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    DERLLAVE        reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BREAK           reduce using rule 99 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)


state 212

    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .

    VAR             reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    LET             reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    CONST           reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    VARIABLE        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    RETURN          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    IZQCORCHETE     reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    NEW             reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    IF              reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    SWITCH          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    WHILE           reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    MAPLOWER        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    FUNCTION        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    IZQPAREN        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    NUMBER          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    STRING          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    BOOLEAN         reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    BIGINT          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    NULL            reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    SYMBOL          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    $end            reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    DERLLAVE        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)
    BREAK           reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN final_linea .)


state 213

    (77) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 216


state 214

    (78) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VAR             reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VARIABLE        reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    RETURN          reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQCORCHETE     reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NEW             reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    WHILE           reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    STRING          reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BOOLEAN         reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BIGINT          reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NULL            reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SYMBOL          reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BREAK           reduce using rule 78 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 215

    (81) casos -> CASE tipos_datos DOSPUNTOS js BREAK . final_linea
    (66) final_linea -> . FINALDELINEA
    (67) final_linea -> . empty
    (68) empty -> .

    FINALDELINEA    shift and go to state 44
    CASE            reduce using rule 68 (empty -> .)
    DEFAULT         reduce using rule 68 (empty -> .)

    final_linea                    shift and go to state 217
    empty                          shift and go to state 45

state 216

    (77) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQCORCHETE     reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NEW             reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 77 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 217

    (81) casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .

    CASE            reduce using rule 81 (casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .)
    DEFAULT         reduce using rule 81 (casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 62 resolved as shift
WARNING: shift/reduce conflict for BIGINT in state 62 resolved as shift
WARNING: shift/reduce conflict for NULL in state 62 resolved as shift
WARNING: shift/reduce conflict for SYMBOL in state 62 resolved as shift
WARNING: shift/reduce conflict for IZQCORCHETE in state 62 resolved as shift
WARNING: shift/reduce conflict for NEW in state 62 resolved as shift
WARNING: shift/reduce conflict for LET in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for CONST in state 62 resolved as shift
WARNING: shift/reduce conflict for MAS in state 73 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 73 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 81 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 108 resolved as shift
WARNING: shift/reduce conflict for COMA in state 139 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 140 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 141 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 161 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 162 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 187 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 188 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 189 resolved as shift
WARNING: shift/reduce conflict for IF in state 190 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (instrucciones -> arreglo)
WARNING: rejected rule (estructuras_datos -> arreglo) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (instrucciones -> map)
WARNING: rejected rule (estructuras_datos -> map) in state 10
WARNING: reduce/reduce conflict in state 122 resolved using rule (declaracion -> VAR VARIABLE IGUAL tipos_datos)
WARNING: rejected rule (factor -> tipos_datos) in state 122
WARNING: reduce/reduce conflict in state 126 resolved using rule (declaracion -> LET VARIABLE IGUAL tipos_datos)
WARNING: rejected rule (factor -> tipos_datos) in state 126
WARNING: reduce/reduce conflict in state 130 resolved using rule (declaracion -> CONST VARIABLE IGUAL tipos_datos)
WARNING: rejected rule (factor -> tipos_datos) in state 130
