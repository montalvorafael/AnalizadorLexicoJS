Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BOOL
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FLOTANTE
    FOR
    GET
    IGUALIGUAL
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    MULTIGUAL
    NULL
    NUMERO
    OR
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SUPER
    UNDEFINED
    VOID
    WHILE

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracionVarSinAsig
Rule 4     instrucciones -> declaracionVar
Rule 5     instrucciones -> asignacion
Rule 6     instrucciones -> funcion
Rule 7     instrucciones -> expresion
Rule 8     instrucciones -> comparacion
Rule 9     instrucciones -> arreglo
Rule 10    instrucciones -> map
Rule 11    instrucciones -> if
Rule 12    instrucciones -> switch
Rule 13    instrucciones -> pop
Rule 14    instrucciones -> push
Rule 15    instrucciones -> mapSet
Rule 16    declaracionVarSinAsig -> declarador VARIABLE
Rule 17    declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA
Rule 18    declarador -> VAR
Rule 19    declarador -> LET
Rule 20    declarador -> CONST
Rule 21    declaracionVar -> declarador VARIABLE IGUAL tipoDato
Rule 22    declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA
Rule 23    asignacion -> VARIABLE operadoresAsig tipoDato
Rule 24    asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA
Rule 25    operadoresAsig -> IGUAL
Rule 26    operadoresAsig -> MASIGUAL
Rule 27    operadoresAsig -> MENOSIGUAL
Rule 28    operadoresAsig -> DIVIGUAL
Rule 29    operadoresAsig -> MODIGUAL
Rule 30    tipoDato -> NUMBER
Rule 31    tipoDato -> STRING
Rule 32    tipoDato -> BOOLEAN
Rule 33    tipoDato -> BIGINT
Rule 34    tipoDato -> SYMBOL
Rule 35    empty -> <empty>
Rule 36    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 37    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 38    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 39    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 40    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 41    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 42    casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 43    casos -> CASE tipoDato DOSPUNTOS
Rule 44    ncasos -> casos
Rule 45    ncasos -> casos ncasos
Rule 46    comparacion -> VARIABLE comparador VARIABLE
Rule 47    comparacion -> expresion comparador expresion
Rule 48    comparador -> MAYORQUE
Rule 49    comparador -> MENORQUE
Rule 50    comparador -> MAYORIGUALQUE
Rule 51    comparador -> MENORIGUALQUE
Rule 52    comparador -> NOIGUALQUE
Rule 53    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 54    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 55    lista -> lista COMA lista
Rule 56    lista -> STRING
Rule 57    lista -> SYMBOL
Rule 58    lista -> NUMBER
Rule 59    lista -> BIGINT
Rule 60    lista -> BOOLEAN
Rule 61    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 62    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 63    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 64    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 65    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 66    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 67    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 68    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 69    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
Rule 70    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
Rule 71    expresion -> expresion MAS term
Rule 72    expresion -> expresion MENOS term
Rule 73    expresion -> term
Rule 74    term -> term MULT factor
Rule 75    term -> term DIV factor
Rule 76    term -> factor
Rule 77    factor -> NUMBER
Rule 78    factor -> IZQPAREN expresion DERPAREN

Terminals, with rules where they appear

AND                  : 
AWAIT                : 
BIGINT               : 33 59
BOOL                 : 
BOOLEAN              : 32 60
BREAK                : 42
CASE                 : 42 43
CATCH                : 
CLASS                : 
COMA                 : 55 69 70
CONST                : 20 67 68
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 41
DELETE               : 
DERCORCHETE          : 53 54
DERLLAVE             : 36 37 38 39 40 40 41
DERPAREN             : 36 37 38 39 40 41 61 62 63 64 65 66 67 68 69 70 78
DIV                  : 75
DIVIGUAL             : 28
DO                   : 
DOSPUNTOS            : 41 42 43
ELSE                 : 40
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 17 22 24 42 61 62 64 66 68 70
FLOTANTE             : 
FOR                  : 
FUNCTION             : 36 37
GET                  : 
IF                   : 38 39 40
IGUAL                : 21 22 25 53 54 61 62 63 64 65 66 67 68
IGUALIGUAL           : 
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 53 54
IZQLLAVE             : 36 37 38 39 40 40 41
IZQPAREN             : 36 37 38 39 40 41 61 62 63 64 65 66 67 68 69 70 78
LET                  : 19 54 63 64
MAP                  : 63 64 65 66 67 68
MAPLOWER             : 69 70
MAS                  : 71
MASIGUAL             : 26
MAYORIGUALQUE        : 50
MAYORQUE             : 48
MENORIGUALQUE        : 51
MENORQUE             : 49
MENOS                : 72
MENOSIGUAL           : 27
MODIGUAL             : 29
MULT                 : 74
MULTIGUAL            : 
NEW                  : 63 64 65 66 67 68
NOIGUALQUE           : 52
NULL                 : 
NUMBER               : 30 58 77
NUMERO               : 
OR                   : 
PACKAGE              : 
POP                  : 61
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 61 62 69 70
PUSH                 : 62
RETURN               : 
SET                  : 69 70
STRING               : 31 56
SUPER                : 
SWITCH               : 41
SYMBOL               : 34 57
UNDEFINED            : 
VAR                  : 18 53 61 62 65 66
VARIABLE             : 16 17 21 22 23 24 36 36 37 41 46 46 53 54 61 61 62 62 63 64 65 66 67 68
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arreglo              : 9
asignacion           : 5 42
casos                : 44 45
comparacion          : 8 38 39 40
comparador           : 46 47
declaracionVar       : 4
declaracionVarSinAsig : 3
declarador           : 16 17 21 22
empty                : 
expresion            : 7 47 47 71 72 78
factor               : 74 75 76
funcion              : 6
if                   : 11 39
instrucciones        : 1 2
js                   : 2 36 37 38 39 40 40 41 0
lista                : 53 54 55 55 62
map                  : 10
mapSet               : 15
ncasos               : 41 45
operadoresAsig       : 23 24
pop                  : 13
push                 : 14
switch               : 12
term                 : 71 72 73 74 75
tipoDato             : 21 22 23 24 42 43 69 69 70 70

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . declarador VARIABLE
    (17) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (21) declaracionVar -> . declarador VARIABLE IGUAL tipoDato
    (22) declaracionVar -> . declarador VARIABLE IGUAL tipoDato FINALDELINEA
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (53) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (54) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (67) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (41) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (61) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (69) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (18) declarador -> . VAR
    (19) declarador -> . LET
    (20) declarador -> . CONST
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . declarador VARIABLE
    (17) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (21) declaracionVar -> . declarador VARIABLE IGUAL tipoDato
    (22) declaracionVar -> . declarador VARIABLE IGUAL tipoDato FINALDELINEA
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (53) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (54) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (67) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (41) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (61) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (69) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (18) declarador -> . VAR
    (19) declarador -> . LET
    (20) declarador -> . CONST
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    instrucciones                  shift and go to state 2
    js                             shift and go to state 29
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 3

    (3) instrucciones -> declaracionVarSinAsig .

    VARIABLE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    VAR             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    LET             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    CONST           reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IF              reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    $end            reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)


state 4

    (4) instrucciones -> declaracionVar .

    VARIABLE        reduce using rule 4 (instrucciones -> declaracionVar .)
    FUNCTION        reduce using rule 4 (instrucciones -> declaracionVar .)
    VAR             reduce using rule 4 (instrucciones -> declaracionVar .)
    LET             reduce using rule 4 (instrucciones -> declaracionVar .)
    CONST           reduce using rule 4 (instrucciones -> declaracionVar .)
    IF              reduce using rule 4 (instrucciones -> declaracionVar .)
    SWITCH          reduce using rule 4 (instrucciones -> declaracionVar .)
    MAPLOWER        reduce using rule 4 (instrucciones -> declaracionVar .)
    NUMBER          reduce using rule 4 (instrucciones -> declaracionVar .)
    IZQPAREN        reduce using rule 4 (instrucciones -> declaracionVar .)
    $end            reduce using rule 4 (instrucciones -> declaracionVar .)
    DERLLAVE        reduce using rule 4 (instrucciones -> declaracionVar .)


state 5

    (5) instrucciones -> asignacion .

    VARIABLE        reduce using rule 5 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 5 (instrucciones -> asignacion .)
    VAR             reduce using rule 5 (instrucciones -> asignacion .)
    LET             reduce using rule 5 (instrucciones -> asignacion .)
    CONST           reduce using rule 5 (instrucciones -> asignacion .)
    IF              reduce using rule 5 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 5 (instrucciones -> asignacion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 5 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> asignacion .)
    $end            reduce using rule 5 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> asignacion .)


state 6

    (6) instrucciones -> funcion .

    VARIABLE        reduce using rule 6 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 6 (instrucciones -> funcion .)
    VAR             reduce using rule 6 (instrucciones -> funcion .)
    LET             reduce using rule 6 (instrucciones -> funcion .)
    CONST           reduce using rule 6 (instrucciones -> funcion .)
    IF              reduce using rule 6 (instrucciones -> funcion .)
    SWITCH          reduce using rule 6 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> funcion .)
    NUMBER          reduce using rule 6 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> funcion .)
    $end            reduce using rule 6 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> funcion .)


state 7

    (7) instrucciones -> expresion .
    (71) expresion -> expresion . MAS term
    (72) expresion -> expresion . MENOS term
    (47) comparacion -> expresion . comparador expresion
    (48) comparador -> . MAYORQUE
    (49) comparador -> . MENORQUE
    (50) comparador -> . MAYORIGUALQUE
    (51) comparador -> . MENORIGUALQUE
    (52) comparador -> . NOIGUALQUE

    VARIABLE        reduce using rule 7 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 7 (instrucciones -> expresion .)
    VAR             reduce using rule 7 (instrucciones -> expresion .)
    LET             reduce using rule 7 (instrucciones -> expresion .)
    CONST           reduce using rule 7 (instrucciones -> expresion .)
    IF              reduce using rule 7 (instrucciones -> expresion .)
    SWITCH          reduce using rule 7 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> expresion .)
    NUMBER          reduce using rule 7 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> expresion .)
    $end            reduce using rule 7 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    MAYORQUE        shift and go to state 33
    MENORQUE        shift and go to state 34
    MAYORIGUALQUE   shift and go to state 35
    MENORIGUALQUE   shift and go to state 36
    NOIGUALQUE      shift and go to state 37

    comparador                     shift and go to state 32

state 8

    (8) instrucciones -> comparacion .

    VARIABLE        reduce using rule 8 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 8 (instrucciones -> comparacion .)
    VAR             reduce using rule 8 (instrucciones -> comparacion .)
    LET             reduce using rule 8 (instrucciones -> comparacion .)
    CONST           reduce using rule 8 (instrucciones -> comparacion .)
    IF              reduce using rule 8 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 8 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 8 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 8 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 8 (instrucciones -> comparacion .)
    $end            reduce using rule 8 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 8 (instrucciones -> comparacion .)


state 9

    (9) instrucciones -> arreglo .

    VARIABLE        reduce using rule 9 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 9 (instrucciones -> arreglo .)
    VAR             reduce using rule 9 (instrucciones -> arreglo .)
    LET             reduce using rule 9 (instrucciones -> arreglo .)
    CONST           reduce using rule 9 (instrucciones -> arreglo .)
    IF              reduce using rule 9 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 9 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 9 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 9 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 9 (instrucciones -> arreglo .)
    $end            reduce using rule 9 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 9 (instrucciones -> arreglo .)


state 10

    (10) instrucciones -> map .

    VARIABLE        reduce using rule 10 (instrucciones -> map .)
    FUNCTION        reduce using rule 10 (instrucciones -> map .)
    VAR             reduce using rule 10 (instrucciones -> map .)
    LET             reduce using rule 10 (instrucciones -> map .)
    CONST           reduce using rule 10 (instrucciones -> map .)
    IF              reduce using rule 10 (instrucciones -> map .)
    SWITCH          reduce using rule 10 (instrucciones -> map .)
    MAPLOWER        reduce using rule 10 (instrucciones -> map .)
    NUMBER          reduce using rule 10 (instrucciones -> map .)
    IZQPAREN        reduce using rule 10 (instrucciones -> map .)
    $end            reduce using rule 10 (instrucciones -> map .)
    DERLLAVE        reduce using rule 10 (instrucciones -> map .)


state 11

    (11) instrucciones -> if .

    VARIABLE        reduce using rule 11 (instrucciones -> if .)
    FUNCTION        reduce using rule 11 (instrucciones -> if .)
    VAR             reduce using rule 11 (instrucciones -> if .)
    LET             reduce using rule 11 (instrucciones -> if .)
    CONST           reduce using rule 11 (instrucciones -> if .)
    IF              reduce using rule 11 (instrucciones -> if .)
    SWITCH          reduce using rule 11 (instrucciones -> if .)
    MAPLOWER        reduce using rule 11 (instrucciones -> if .)
    NUMBER          reduce using rule 11 (instrucciones -> if .)
    IZQPAREN        reduce using rule 11 (instrucciones -> if .)
    $end            reduce using rule 11 (instrucciones -> if .)
    DERLLAVE        reduce using rule 11 (instrucciones -> if .)


state 12

    (12) instrucciones -> switch .

    VARIABLE        reduce using rule 12 (instrucciones -> switch .)
    FUNCTION        reduce using rule 12 (instrucciones -> switch .)
    VAR             reduce using rule 12 (instrucciones -> switch .)
    LET             reduce using rule 12 (instrucciones -> switch .)
    CONST           reduce using rule 12 (instrucciones -> switch .)
    IF              reduce using rule 12 (instrucciones -> switch .)
    SWITCH          reduce using rule 12 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 12 (instrucciones -> switch .)
    NUMBER          reduce using rule 12 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 12 (instrucciones -> switch .)
    $end            reduce using rule 12 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 12 (instrucciones -> switch .)


state 13

    (13) instrucciones -> pop .

    VARIABLE        reduce using rule 13 (instrucciones -> pop .)
    FUNCTION        reduce using rule 13 (instrucciones -> pop .)
    VAR             reduce using rule 13 (instrucciones -> pop .)
    LET             reduce using rule 13 (instrucciones -> pop .)
    CONST           reduce using rule 13 (instrucciones -> pop .)
    IF              reduce using rule 13 (instrucciones -> pop .)
    SWITCH          reduce using rule 13 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 13 (instrucciones -> pop .)
    NUMBER          reduce using rule 13 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 13 (instrucciones -> pop .)
    $end            reduce using rule 13 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 13 (instrucciones -> pop .)


state 14

    (14) instrucciones -> push .

    VARIABLE        reduce using rule 14 (instrucciones -> push .)
    FUNCTION        reduce using rule 14 (instrucciones -> push .)
    VAR             reduce using rule 14 (instrucciones -> push .)
    LET             reduce using rule 14 (instrucciones -> push .)
    CONST           reduce using rule 14 (instrucciones -> push .)
    IF              reduce using rule 14 (instrucciones -> push .)
    SWITCH          reduce using rule 14 (instrucciones -> push .)
    MAPLOWER        reduce using rule 14 (instrucciones -> push .)
    NUMBER          reduce using rule 14 (instrucciones -> push .)
    IZQPAREN        reduce using rule 14 (instrucciones -> push .)
    $end            reduce using rule 14 (instrucciones -> push .)
    DERLLAVE        reduce using rule 14 (instrucciones -> push .)


state 15

    (15) instrucciones -> mapSet .

    VARIABLE        reduce using rule 15 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 15 (instrucciones -> mapSet .)
    VAR             reduce using rule 15 (instrucciones -> mapSet .)
    LET             reduce using rule 15 (instrucciones -> mapSet .)
    CONST           reduce using rule 15 (instrucciones -> mapSet .)
    IF              reduce using rule 15 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 15 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 15 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 15 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 15 (instrucciones -> mapSet .)
    $end            reduce using rule 15 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 15 (instrucciones -> mapSet .)


state 16

    (16) declaracionVarSinAsig -> declarador . VARIABLE
    (17) declaracionVarSinAsig -> declarador . VARIABLE FINALDELINEA
    (21) declaracionVar -> declarador . VARIABLE IGUAL tipoDato
    (22) declaracionVar -> declarador . VARIABLE IGUAL tipoDato FINALDELINEA

    VARIABLE        shift and go to state 38


state 17

    (23) asignacion -> VARIABLE . operadoresAsig tipoDato
    (24) asignacion -> VARIABLE . operadoresAsig tipoDato FINALDELINEA
    (46) comparacion -> VARIABLE . comparador VARIABLE
    (25) operadoresAsig -> . IGUAL
    (26) operadoresAsig -> . MASIGUAL
    (27) operadoresAsig -> . MENOSIGUAL
    (28) operadoresAsig -> . DIVIGUAL
    (29) operadoresAsig -> . MODIGUAL
    (48) comparador -> . MAYORQUE
    (49) comparador -> . MENORQUE
    (50) comparador -> . MAYORIGUALQUE
    (51) comparador -> . MENORIGUALQUE
    (52) comparador -> . NOIGUALQUE

    IGUAL           shift and go to state 41
    MASIGUAL        shift and go to state 42
    MENOSIGUAL      shift and go to state 43
    DIVIGUAL        shift and go to state 44
    MODIGUAL        shift and go to state 45
    MAYORQUE        shift and go to state 33
    MENORQUE        shift and go to state 34
    MAYORIGUALQUE   shift and go to state 35
    MENORIGUALQUE   shift and go to state 36
    NOIGUALQUE      shift and go to state 37

    operadoresAsig                 shift and go to state 39
    comparador                     shift and go to state 40

state 18

    (36) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 46


state 19

    (78) factor -> IZQPAREN . expresion DERPAREN
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 47
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 20

    (73) expresion -> term .
    (74) term -> term . MULT factor
    (75) term -> term . DIV factor

    MAS             reduce using rule 73 (expresion -> term .)
    MENOS           reduce using rule 73 (expresion -> term .)
    MAYORQUE        reduce using rule 73 (expresion -> term .)
    MENORQUE        reduce using rule 73 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 73 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 73 (expresion -> term .)
    NOIGUALQUE      reduce using rule 73 (expresion -> term .)
    VARIABLE        reduce using rule 73 (expresion -> term .)
    FUNCTION        reduce using rule 73 (expresion -> term .)
    VAR             reduce using rule 73 (expresion -> term .)
    LET             reduce using rule 73 (expresion -> term .)
    CONST           reduce using rule 73 (expresion -> term .)
    IF              reduce using rule 73 (expresion -> term .)
    SWITCH          reduce using rule 73 (expresion -> term .)
    MAPLOWER        reduce using rule 73 (expresion -> term .)
    NUMBER          reduce using rule 73 (expresion -> term .)
    IZQPAREN        reduce using rule 73 (expresion -> term .)
    $end            reduce using rule 73 (expresion -> term .)
    DERLLAVE        reduce using rule 73 (expresion -> term .)
    DERPAREN        reduce using rule 73 (expresion -> term .)
    MULT            shift and go to state 48
    DIV             shift and go to state 49


state 21

    (53) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (18) declarador -> VAR .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 50

  ! VARIABLE        [ reduce using rule 18 (declarador -> VAR .) ]


state 22

    (54) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (19) declarador -> LET .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 51

  ! VARIABLE        [ reduce using rule 19 (declarador -> LET .) ]


state 23

    (67) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (20) declarador -> CONST .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 52

  ! VARIABLE        [ reduce using rule 20 (declarador -> CONST .) ]


state 24

    (38) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 53


state 25

    (41) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 54


state 26

    (69) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    PUNTO           shift and go to state 55


state 27

    (76) term -> factor .

    MULT            reduce using rule 76 (term -> factor .)
    DIV             reduce using rule 76 (term -> factor .)
    MAS             reduce using rule 76 (term -> factor .)
    MENOS           reduce using rule 76 (term -> factor .)
    MAYORQUE        reduce using rule 76 (term -> factor .)
    MENORQUE        reduce using rule 76 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 76 (term -> factor .)
    MENORIGUALQUE   reduce using rule 76 (term -> factor .)
    NOIGUALQUE      reduce using rule 76 (term -> factor .)
    VARIABLE        reduce using rule 76 (term -> factor .)
    FUNCTION        reduce using rule 76 (term -> factor .)
    VAR             reduce using rule 76 (term -> factor .)
    LET             reduce using rule 76 (term -> factor .)
    CONST           reduce using rule 76 (term -> factor .)
    IF              reduce using rule 76 (term -> factor .)
    SWITCH          reduce using rule 76 (term -> factor .)
    MAPLOWER        reduce using rule 76 (term -> factor .)
    NUMBER          reduce using rule 76 (term -> factor .)
    IZQPAREN        reduce using rule 76 (term -> factor .)
    $end            reduce using rule 76 (term -> factor .)
    DERLLAVE        reduce using rule 76 (term -> factor .)
    DERPAREN        reduce using rule 76 (term -> factor .)


state 28

    (77) factor -> NUMBER .

    MULT            reduce using rule 77 (factor -> NUMBER .)
    DIV             reduce using rule 77 (factor -> NUMBER .)
    MAS             reduce using rule 77 (factor -> NUMBER .)
    MENOS           reduce using rule 77 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 77 (factor -> NUMBER .)
    MENORQUE        reduce using rule 77 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 77 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 77 (factor -> NUMBER .)
    NOIGUALQUE      reduce using rule 77 (factor -> NUMBER .)
    VARIABLE        reduce using rule 77 (factor -> NUMBER .)
    FUNCTION        reduce using rule 77 (factor -> NUMBER .)
    VAR             reduce using rule 77 (factor -> NUMBER .)
    LET             reduce using rule 77 (factor -> NUMBER .)
    CONST           reduce using rule 77 (factor -> NUMBER .)
    IF              reduce using rule 77 (factor -> NUMBER .)
    SWITCH          reduce using rule 77 (factor -> NUMBER .)
    MAPLOWER        reduce using rule 77 (factor -> NUMBER .)
    NUMBER          reduce using rule 77 (factor -> NUMBER .)
    IZQPAREN        reduce using rule 77 (factor -> NUMBER .)
    $end            reduce using rule 77 (factor -> NUMBER .)
    DERLLAVE        reduce using rule 77 (factor -> NUMBER .)
    DERPAREN        reduce using rule 77 (factor -> NUMBER .)


state 29

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 30

    (71) expresion -> expresion MAS . term
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    term                           shift and go to state 56
    factor                         shift and go to state 27

state 31

    (72) expresion -> expresion MENOS . term
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    term                           shift and go to state 57
    factor                         shift and go to state 27

state 32

    (47) comparacion -> expresion comparador . expresion
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 58
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 33

    (48) comparador -> MAYORQUE .

    NUMBER          reduce using rule 48 (comparador -> MAYORQUE .)
    IZQPAREN        reduce using rule 48 (comparador -> MAYORQUE .)
    VARIABLE        reduce using rule 48 (comparador -> MAYORQUE .)


state 34

    (49) comparador -> MENORQUE .

    NUMBER          reduce using rule 49 (comparador -> MENORQUE .)
    IZQPAREN        reduce using rule 49 (comparador -> MENORQUE .)
    VARIABLE        reduce using rule 49 (comparador -> MENORQUE .)


state 35

    (50) comparador -> MAYORIGUALQUE .

    NUMBER          reduce using rule 50 (comparador -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 50 (comparador -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 50 (comparador -> MAYORIGUALQUE .)


state 36

    (51) comparador -> MENORIGUALQUE .

    NUMBER          reduce using rule 51 (comparador -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 51 (comparador -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 51 (comparador -> MENORIGUALQUE .)


state 37

    (52) comparador -> NOIGUALQUE .

    NUMBER          reduce using rule 52 (comparador -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 52 (comparador -> NOIGUALQUE .)
    VARIABLE        reduce using rule 52 (comparador -> NOIGUALQUE .)


state 38

    (16) declaracionVarSinAsig -> declarador VARIABLE .
    (17) declaracionVarSinAsig -> declarador VARIABLE . FINALDELINEA
    (21) declaracionVar -> declarador VARIABLE . IGUAL tipoDato
    (22) declaracionVar -> declarador VARIABLE . IGUAL tipoDato FINALDELINEA

    VARIABLE        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    FUNCTION        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    VAR             reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    LET             reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    CONST           reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    IF              reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    SWITCH          reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    MAPLOWER        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    NUMBER          reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    IZQPAREN        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    $end            reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    DERLLAVE        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE .)
    FINALDELINEA    shift and go to state 59
    IGUAL           shift and go to state 60


state 39

    (23) asignacion -> VARIABLE operadoresAsig . tipoDato
    (24) asignacion -> VARIABLE operadoresAsig . tipoDato FINALDELINEA
    (30) tipoDato -> . NUMBER
    (31) tipoDato -> . STRING
    (32) tipoDato -> . BOOLEAN
    (33) tipoDato -> . BIGINT
    (34) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    BOOLEAN         shift and go to state 64
    BIGINT          shift and go to state 65
    SYMBOL          shift and go to state 66

    tipoDato                       shift and go to state 61

state 40

    (46) comparacion -> VARIABLE comparador . VARIABLE

    VARIABLE        shift and go to state 67


state 41

    (25) operadoresAsig -> IGUAL .

    NUMBER          reduce using rule 25 (operadoresAsig -> IGUAL .)
    STRING          reduce using rule 25 (operadoresAsig -> IGUAL .)
    BOOLEAN         reduce using rule 25 (operadoresAsig -> IGUAL .)
    BIGINT          reduce using rule 25 (operadoresAsig -> IGUAL .)
    SYMBOL          reduce using rule 25 (operadoresAsig -> IGUAL .)


state 42

    (26) operadoresAsig -> MASIGUAL .

    NUMBER          reduce using rule 26 (operadoresAsig -> MASIGUAL .)
    STRING          reduce using rule 26 (operadoresAsig -> MASIGUAL .)
    BOOLEAN         reduce using rule 26 (operadoresAsig -> MASIGUAL .)
    BIGINT          reduce using rule 26 (operadoresAsig -> MASIGUAL .)
    SYMBOL          reduce using rule 26 (operadoresAsig -> MASIGUAL .)


state 43

    (27) operadoresAsig -> MENOSIGUAL .

    NUMBER          reduce using rule 27 (operadoresAsig -> MENOSIGUAL .)
    STRING          reduce using rule 27 (operadoresAsig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 27 (operadoresAsig -> MENOSIGUAL .)
    BIGINT          reduce using rule 27 (operadoresAsig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 27 (operadoresAsig -> MENOSIGUAL .)


state 44

    (28) operadoresAsig -> DIVIGUAL .

    NUMBER          reduce using rule 28 (operadoresAsig -> DIVIGUAL .)
    STRING          reduce using rule 28 (operadoresAsig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 28 (operadoresAsig -> DIVIGUAL .)
    BIGINT          reduce using rule 28 (operadoresAsig -> DIVIGUAL .)
    SYMBOL          reduce using rule 28 (operadoresAsig -> DIVIGUAL .)


state 45

    (29) operadoresAsig -> MODIGUAL .

    NUMBER          reduce using rule 29 (operadoresAsig -> MODIGUAL .)
    STRING          reduce using rule 29 (operadoresAsig -> MODIGUAL .)
    BOOLEAN         reduce using rule 29 (operadoresAsig -> MODIGUAL .)
    BIGINT          reduce using rule 29 (operadoresAsig -> MODIGUAL .)
    SYMBOL          reduce using rule 29 (operadoresAsig -> MODIGUAL .)


state 46

    (36) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 68


state 47

    (78) factor -> IZQPAREN expresion . DERPAREN
    (71) expresion -> expresion . MAS term
    (72) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 69
    MAS             shift and go to state 30
    MENOS           shift and go to state 31


state 48

    (74) term -> term MULT . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    factor                         shift and go to state 70

state 49

    (75) term -> term DIV . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    factor                         shift and go to state 71

state 50

    (53) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (65) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    IGUAL           shift and go to state 72


state 51

    (54) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 73


state 52

    (67) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 74


state 53

    (38) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 76
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 75
    expresion                      shift and go to state 77
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 54

    (41) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 78


state 55

    (69) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    SET             shift and go to state 79


state 56

    (71) expresion -> expresion MAS term .
    (74) term -> term . MULT factor
    (75) term -> term . DIV factor

    MAS             reduce using rule 71 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 71 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 71 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 71 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 71 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 71 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 71 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 71 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 71 (expresion -> expresion MAS term .)
    VAR             reduce using rule 71 (expresion -> expresion MAS term .)
    LET             reduce using rule 71 (expresion -> expresion MAS term .)
    CONST           reduce using rule 71 (expresion -> expresion MAS term .)
    IF              reduce using rule 71 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 71 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 71 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 71 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 71 (expresion -> expresion MAS term .)
    $end            reduce using rule 71 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 71 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 71 (expresion -> expresion MAS term .)
    MULT            shift and go to state 48
    DIV             shift and go to state 49


state 57

    (72) expresion -> expresion MENOS term .
    (74) term -> term . MULT factor
    (75) term -> term . DIV factor

    MAS             reduce using rule 72 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 72 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 72 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 72 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 72 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 72 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 72 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 72 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 72 (expresion -> expresion MENOS term .)
    LET             reduce using rule 72 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 72 (expresion -> expresion MENOS term .)
    IF              reduce using rule 72 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 72 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 72 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 72 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 72 (expresion -> expresion MENOS term .)
    $end            reduce using rule 72 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 72 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 72 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 48
    DIV             shift and go to state 49


state 58

    (47) comparacion -> expresion comparador expresion .
    (71) expresion -> expresion . MAS term
    (72) expresion -> expresion . MENOS term

    VARIABLE        reduce using rule 47 (comparacion -> expresion comparador expresion .)
    FUNCTION        reduce using rule 47 (comparacion -> expresion comparador expresion .)
    VAR             reduce using rule 47 (comparacion -> expresion comparador expresion .)
    LET             reduce using rule 47 (comparacion -> expresion comparador expresion .)
    CONST           reduce using rule 47 (comparacion -> expresion comparador expresion .)
    IF              reduce using rule 47 (comparacion -> expresion comparador expresion .)
    SWITCH          reduce using rule 47 (comparacion -> expresion comparador expresion .)
    MAPLOWER        reduce using rule 47 (comparacion -> expresion comparador expresion .)
    NUMBER          reduce using rule 47 (comparacion -> expresion comparador expresion .)
    IZQPAREN        reduce using rule 47 (comparacion -> expresion comparador expresion .)
    $end            reduce using rule 47 (comparacion -> expresion comparador expresion .)
    DERLLAVE        reduce using rule 47 (comparacion -> expresion comparador expresion .)
    DERPAREN        reduce using rule 47 (comparacion -> expresion comparador expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31


state 59

    (17) declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .

    VARIABLE        reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    VAR             reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    LET             reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    CONST           reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    IF              reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    MAPLOWER        reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    $end            reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 17 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)


state 60

    (21) declaracionVar -> declarador VARIABLE IGUAL . tipoDato
    (22) declaracionVar -> declarador VARIABLE IGUAL . tipoDato FINALDELINEA
    (30) tipoDato -> . NUMBER
    (31) tipoDato -> . STRING
    (32) tipoDato -> . BOOLEAN
    (33) tipoDato -> . BIGINT
    (34) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    BOOLEAN         shift and go to state 64
    BIGINT          shift and go to state 65
    SYMBOL          shift and go to state 66

    tipoDato                       shift and go to state 80

state 61

    (23) asignacion -> VARIABLE operadoresAsig tipoDato .
    (24) asignacion -> VARIABLE operadoresAsig tipoDato . FINALDELINEA

    VARIABLE        reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    FUNCTION        reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    VAR             reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    LET             reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    CONST           reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    IF              reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    SWITCH          reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    MAPLOWER        reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    NUMBER          reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    IZQPAREN        reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    $end            reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    DERLLAVE        reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    BREAK           reduce using rule 23 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    FINALDELINEA    shift and go to state 81


state 62

    (30) tipoDato -> NUMBER .

    FINALDELINEA    reduce using rule 30 (tipoDato -> NUMBER .)
    VARIABLE        reduce using rule 30 (tipoDato -> NUMBER .)
    FUNCTION        reduce using rule 30 (tipoDato -> NUMBER .)
    VAR             reduce using rule 30 (tipoDato -> NUMBER .)
    LET             reduce using rule 30 (tipoDato -> NUMBER .)
    CONST           reduce using rule 30 (tipoDato -> NUMBER .)
    IF              reduce using rule 30 (tipoDato -> NUMBER .)
    SWITCH          reduce using rule 30 (tipoDato -> NUMBER .)
    MAPLOWER        reduce using rule 30 (tipoDato -> NUMBER .)
    NUMBER          reduce using rule 30 (tipoDato -> NUMBER .)
    IZQPAREN        reduce using rule 30 (tipoDato -> NUMBER .)
    $end            reduce using rule 30 (tipoDato -> NUMBER .)
    DERLLAVE        reduce using rule 30 (tipoDato -> NUMBER .)
    BREAK           reduce using rule 30 (tipoDato -> NUMBER .)
    COMA            reduce using rule 30 (tipoDato -> NUMBER .)
    DOSPUNTOS       reduce using rule 30 (tipoDato -> NUMBER .)
    DERPAREN        reduce using rule 30 (tipoDato -> NUMBER .)


state 63

    (31) tipoDato -> STRING .

    FINALDELINEA    reduce using rule 31 (tipoDato -> STRING .)
    VARIABLE        reduce using rule 31 (tipoDato -> STRING .)
    FUNCTION        reduce using rule 31 (tipoDato -> STRING .)
    VAR             reduce using rule 31 (tipoDato -> STRING .)
    LET             reduce using rule 31 (tipoDato -> STRING .)
    CONST           reduce using rule 31 (tipoDato -> STRING .)
    IF              reduce using rule 31 (tipoDato -> STRING .)
    SWITCH          reduce using rule 31 (tipoDato -> STRING .)
    MAPLOWER        reduce using rule 31 (tipoDato -> STRING .)
    NUMBER          reduce using rule 31 (tipoDato -> STRING .)
    IZQPAREN        reduce using rule 31 (tipoDato -> STRING .)
    $end            reduce using rule 31 (tipoDato -> STRING .)
    DERLLAVE        reduce using rule 31 (tipoDato -> STRING .)
    BREAK           reduce using rule 31 (tipoDato -> STRING .)
    COMA            reduce using rule 31 (tipoDato -> STRING .)
    DOSPUNTOS       reduce using rule 31 (tipoDato -> STRING .)
    DERPAREN        reduce using rule 31 (tipoDato -> STRING .)


state 64

    (32) tipoDato -> BOOLEAN .

    FINALDELINEA    reduce using rule 32 (tipoDato -> BOOLEAN .)
    VARIABLE        reduce using rule 32 (tipoDato -> BOOLEAN .)
    FUNCTION        reduce using rule 32 (tipoDato -> BOOLEAN .)
    VAR             reduce using rule 32 (tipoDato -> BOOLEAN .)
    LET             reduce using rule 32 (tipoDato -> BOOLEAN .)
    CONST           reduce using rule 32 (tipoDato -> BOOLEAN .)
    IF              reduce using rule 32 (tipoDato -> BOOLEAN .)
    SWITCH          reduce using rule 32 (tipoDato -> BOOLEAN .)
    MAPLOWER        reduce using rule 32 (tipoDato -> BOOLEAN .)
    NUMBER          reduce using rule 32 (tipoDato -> BOOLEAN .)
    IZQPAREN        reduce using rule 32 (tipoDato -> BOOLEAN .)
    $end            reduce using rule 32 (tipoDato -> BOOLEAN .)
    DERLLAVE        reduce using rule 32 (tipoDato -> BOOLEAN .)
    BREAK           reduce using rule 32 (tipoDato -> BOOLEAN .)
    COMA            reduce using rule 32 (tipoDato -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 32 (tipoDato -> BOOLEAN .)
    DERPAREN        reduce using rule 32 (tipoDato -> BOOLEAN .)


state 65

    (33) tipoDato -> BIGINT .

    FINALDELINEA    reduce using rule 33 (tipoDato -> BIGINT .)
    VARIABLE        reduce using rule 33 (tipoDato -> BIGINT .)
    FUNCTION        reduce using rule 33 (tipoDato -> BIGINT .)
    VAR             reduce using rule 33 (tipoDato -> BIGINT .)
    LET             reduce using rule 33 (tipoDato -> BIGINT .)
    CONST           reduce using rule 33 (tipoDato -> BIGINT .)
    IF              reduce using rule 33 (tipoDato -> BIGINT .)
    SWITCH          reduce using rule 33 (tipoDato -> BIGINT .)
    MAPLOWER        reduce using rule 33 (tipoDato -> BIGINT .)
    NUMBER          reduce using rule 33 (tipoDato -> BIGINT .)
    IZQPAREN        reduce using rule 33 (tipoDato -> BIGINT .)
    $end            reduce using rule 33 (tipoDato -> BIGINT .)
    DERLLAVE        reduce using rule 33 (tipoDato -> BIGINT .)
    BREAK           reduce using rule 33 (tipoDato -> BIGINT .)
    COMA            reduce using rule 33 (tipoDato -> BIGINT .)
    DOSPUNTOS       reduce using rule 33 (tipoDato -> BIGINT .)
    DERPAREN        reduce using rule 33 (tipoDato -> BIGINT .)


state 66

    (34) tipoDato -> SYMBOL .

    FINALDELINEA    reduce using rule 34 (tipoDato -> SYMBOL .)
    VARIABLE        reduce using rule 34 (tipoDato -> SYMBOL .)
    FUNCTION        reduce using rule 34 (tipoDato -> SYMBOL .)
    VAR             reduce using rule 34 (tipoDato -> SYMBOL .)
    LET             reduce using rule 34 (tipoDato -> SYMBOL .)
    CONST           reduce using rule 34 (tipoDato -> SYMBOL .)
    IF              reduce using rule 34 (tipoDato -> SYMBOL .)
    SWITCH          reduce using rule 34 (tipoDato -> SYMBOL .)
    MAPLOWER        reduce using rule 34 (tipoDato -> SYMBOL .)
    NUMBER          reduce using rule 34 (tipoDato -> SYMBOL .)
    IZQPAREN        reduce using rule 34 (tipoDato -> SYMBOL .)
    $end            reduce using rule 34 (tipoDato -> SYMBOL .)
    DERLLAVE        reduce using rule 34 (tipoDato -> SYMBOL .)
    BREAK           reduce using rule 34 (tipoDato -> SYMBOL .)
    COMA            reduce using rule 34 (tipoDato -> SYMBOL .)
    DOSPUNTOS       reduce using rule 34 (tipoDato -> SYMBOL .)
    DERPAREN        reduce using rule 34 (tipoDato -> SYMBOL .)


state 67

    (46) comparacion -> VARIABLE comparador VARIABLE .

    VARIABLE        reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    FUNCTION        reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    VAR             reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    LET             reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    CONST           reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    IF              reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    SWITCH          reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    MAPLOWER        reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    NUMBER          reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    IZQPAREN        reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    $end            reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    DERLLAVE        reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)
    DERPAREN        reduce using rule 46 (comparacion -> VARIABLE comparador VARIABLE .)


state 68

    (36) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 82
    DERPAREN        shift and go to state 83


state 69

    (78) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 78 (factor -> IZQPAREN expresion DERPAREN .)


state 70

    (74) term -> term MULT factor .

    MULT            reduce using rule 74 (term -> term MULT factor .)
    DIV             reduce using rule 74 (term -> term MULT factor .)
    MAS             reduce using rule 74 (term -> term MULT factor .)
    MENOS           reduce using rule 74 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 74 (term -> term MULT factor .)
    MENORQUE        reduce using rule 74 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 74 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 74 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 74 (term -> term MULT factor .)
    VARIABLE        reduce using rule 74 (term -> term MULT factor .)
    FUNCTION        reduce using rule 74 (term -> term MULT factor .)
    VAR             reduce using rule 74 (term -> term MULT factor .)
    LET             reduce using rule 74 (term -> term MULT factor .)
    CONST           reduce using rule 74 (term -> term MULT factor .)
    IF              reduce using rule 74 (term -> term MULT factor .)
    SWITCH          reduce using rule 74 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 74 (term -> term MULT factor .)
    NUMBER          reduce using rule 74 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 74 (term -> term MULT factor .)
    $end            reduce using rule 74 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 74 (term -> term MULT factor .)
    DERPAREN        reduce using rule 74 (term -> term MULT factor .)


state 71

    (75) term -> term DIV factor .

    MULT            reduce using rule 75 (term -> term DIV factor .)
    DIV             reduce using rule 75 (term -> term DIV factor .)
    MAS             reduce using rule 75 (term -> term DIV factor .)
    MENOS           reduce using rule 75 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 75 (term -> term DIV factor .)
    MENORQUE        reduce using rule 75 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 75 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 75 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 75 (term -> term DIV factor .)
    VARIABLE        reduce using rule 75 (term -> term DIV factor .)
    FUNCTION        reduce using rule 75 (term -> term DIV factor .)
    VAR             reduce using rule 75 (term -> term DIV factor .)
    LET             reduce using rule 75 (term -> term DIV factor .)
    CONST           reduce using rule 75 (term -> term DIV factor .)
    IF              reduce using rule 75 (term -> term DIV factor .)
    SWITCH          reduce using rule 75 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 75 (term -> term DIV factor .)
    NUMBER          reduce using rule 75 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 75 (term -> term DIV factor .)
    $end            reduce using rule 75 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 75 (term -> term DIV factor .)
    DERPAREN        reduce using rule 75 (term -> term DIV factor .)


state 72

    (53) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (65) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (66) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    IZQCORCHETE     shift and go to state 85
    NEW             shift and go to state 86
    VARIABLE        shift and go to state 84


state 73

    (54) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (63) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (64) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IZQCORCHETE     shift and go to state 87
    NEW             shift and go to state 88


state 74

    (67) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (68) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    NEW             shift and go to state 89


state 75

    (38) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 90


state 76

    (46) comparacion -> VARIABLE . comparador VARIABLE
    (48) comparador -> . MAYORQUE
    (49) comparador -> . MENORQUE
    (50) comparador -> . MAYORIGUALQUE
    (51) comparador -> . MENORIGUALQUE
    (52) comparador -> . NOIGUALQUE

    MAYORQUE        shift and go to state 33
    MENORQUE        shift and go to state 34
    MAYORIGUALQUE   shift and go to state 35
    MENORIGUALQUE   shift and go to state 36
    NOIGUALQUE      shift and go to state 37

    comparador                     shift and go to state 40

state 77

    (47) comparacion -> expresion . comparador expresion
    (71) expresion -> expresion . MAS term
    (72) expresion -> expresion . MENOS term
    (48) comparador -> . MAYORQUE
    (49) comparador -> . MENORQUE
    (50) comparador -> . MAYORIGUALQUE
    (51) comparador -> . MENORIGUALQUE
    (52) comparador -> . NOIGUALQUE

    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    MAYORQUE        shift and go to state 33
    MENORQUE        shift and go to state 34
    MAYORIGUALQUE   shift and go to state 35
    MENORIGUALQUE   shift and go to state 36
    NOIGUALQUE      shift and go to state 37

    comparador                     shift and go to state 32

state 78

    (41) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 91


state 79

    (69) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 92


state 80

    (21) declaracionVar -> declarador VARIABLE IGUAL tipoDato .
    (22) declaracionVar -> declarador VARIABLE IGUAL tipoDato . FINALDELINEA

    VARIABLE        reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    FUNCTION        reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    VAR             reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    LET             reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    CONST           reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    IF              reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    SWITCH          reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    MAPLOWER        reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    NUMBER          reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    IZQPAREN        reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    $end            reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    DERLLAVE        reduce using rule 21 (declaracionVar -> declarador VARIABLE IGUAL tipoDato .)
    FINALDELINEA    shift and go to state 93


state 81

    (24) asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .

    VARIABLE        reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    FUNCTION        reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    VAR             reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    LET             reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    CONST           reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    IF              reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    SWITCH          reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    MAPLOWER        reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    NUMBER          reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    IZQPAREN        reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    $end            reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    DERLLAVE        reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    BREAK           reduce using rule 24 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)


state 82

    (36) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 94


state 83

    (37) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 95


state 84

    (61) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    PUNTO           shift and go to state 96


state 85

    (53) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (55) lista -> . lista COMA lista
    (56) lista -> . STRING
    (57) lista -> . SYMBOL
    (58) lista -> . NUMBER
    (59) lista -> . BIGINT
    (60) lista -> . BOOLEAN

    STRING          shift and go to state 98
    SYMBOL          shift and go to state 99
    NUMBER          shift and go to state 100
    BIGINT          shift and go to state 101
    BOOLEAN         shift and go to state 102

    lista                          shift and go to state 97

state 86

    (65) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (66) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 103


state 87

    (54) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (55) lista -> . lista COMA lista
    (56) lista -> . STRING
    (57) lista -> . SYMBOL
    (58) lista -> . NUMBER
    (59) lista -> . BIGINT
    (60) lista -> . BOOLEAN

    STRING          shift and go to state 98
    SYMBOL          shift and go to state 99
    NUMBER          shift and go to state 100
    BIGINT          shift and go to state 101
    BOOLEAN         shift and go to state 102

    lista                          shift and go to state 104

state 88

    (63) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (64) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 105


state 89

    (67) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (68) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 106


state 90

    (38) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (39) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (40) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 107


state 91

    (41) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 108


state 92

    (69) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (30) tipoDato -> . NUMBER
    (31) tipoDato -> . STRING
    (32) tipoDato -> . BOOLEAN
    (33) tipoDato -> . BIGINT
    (34) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    BOOLEAN         shift and go to state 64
    BIGINT          shift and go to state 65
    SYMBOL          shift and go to state 66

    tipoDato                       shift and go to state 109

state 93

    (22) declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .

    VARIABLE        reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    FUNCTION        reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    VAR             reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    LET             reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    CONST           reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    IF              reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    SWITCH          reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    MAPLOWER        reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    NUMBER          reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    IZQPAREN        reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    $end            reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)
    DERLLAVE        reduce using rule 22 (declaracionVar -> declarador VARIABLE IGUAL tipoDato FINALDELINEA .)


state 94

    (36) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 110


state 95

    (37) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . declarador VARIABLE
    (17) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (21) declaracionVar -> . declarador VARIABLE IGUAL tipoDato
    (22) declaracionVar -> . declarador VARIABLE IGUAL tipoDato FINALDELINEA
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (53) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (54) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (67) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (41) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (61) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (69) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (18) declarador -> . VAR
    (19) declarador -> . LET
    (20) declarador -> . CONST
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 111
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 96

    (61) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA

    POP             shift and go to state 112
    PUSH            shift and go to state 113


state 97

    (53) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (55) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 114
    COMA            shift and go to state 115


state 98

    (56) lista -> STRING .

    DERCORCHETE     reduce using rule 56 (lista -> STRING .)
    COMA            reduce using rule 56 (lista -> STRING .)
    DERPAREN        reduce using rule 56 (lista -> STRING .)


state 99

    (57) lista -> SYMBOL .

    DERCORCHETE     reduce using rule 57 (lista -> SYMBOL .)
    COMA            reduce using rule 57 (lista -> SYMBOL .)
    DERPAREN        reduce using rule 57 (lista -> SYMBOL .)


state 100

    (58) lista -> NUMBER .

    DERCORCHETE     reduce using rule 58 (lista -> NUMBER .)
    COMA            reduce using rule 58 (lista -> NUMBER .)
    DERPAREN        reduce using rule 58 (lista -> NUMBER .)


state 101

    (59) lista -> BIGINT .

    DERCORCHETE     reduce using rule 59 (lista -> BIGINT .)
    COMA            reduce using rule 59 (lista -> BIGINT .)
    DERPAREN        reduce using rule 59 (lista -> BIGINT .)


state 102

    (60) lista -> BOOLEAN .

    DERCORCHETE     reduce using rule 60 (lista -> BOOLEAN .)
    COMA            reduce using rule 60 (lista -> BOOLEAN .)
    DERPAREN        reduce using rule 60 (lista -> BOOLEAN .)


state 103

    (65) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (66) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 116


state 104

    (54) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (55) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 117
    COMA            shift and go to state 115


state 105

    (63) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (64) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 118


state 106

    (67) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (68) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 119


state 107

    (38) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (39) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . declarador VARIABLE
    (17) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (21) declaracionVar -> . declarador VARIABLE IGUAL tipoDato
    (22) declaracionVar -> . declarador VARIABLE IGUAL tipoDato FINALDELINEA
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (53) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (54) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (67) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (41) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (61) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (69) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (18) declarador -> . VAR
    (19) declarador -> . LET
    (20) declarador -> . CONST
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 8
    js                             shift and go to state 120
    if                             shift and go to state 11
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 108

    (41) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (44) ncasos -> . casos
    (45) ncasos -> . casos ncasos
    (42) casos -> . CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (43) casos -> . CASE tipoDato DOSPUNTOS

    CASE            shift and go to state 123

    ncasos                         shift and go to state 121
    casos                          shift and go to state 122

state 109

    (69) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato . COMA tipoDato DERPAREN
    (70) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato . COMA tipoDato DERPAREN FINALDELINEA

    COMA            shift and go to state 124


state 110

    (36) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . declarador VARIABLE
    (17) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (21) declaracionVar -> . declarador VARIABLE IGUAL tipoDato
    (22) declaracionVar -> . declarador VARIABLE IGUAL tipoDato FINALDELINEA
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (53) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (54) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (67) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (41) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (61) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (69) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (18) declarador -> . VAR
    (19) declarador -> . LET
    (20) declarador -> . CONST
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 125
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 111

    (37) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 126


state 112

    (61) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 127


state 113

    (62) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 128


state 114

    (53) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VARIABLE        reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 53 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 115

    (55) lista -> lista COMA . lista
    (55) lista -> . lista COMA lista
    (56) lista -> . STRING
    (57) lista -> . SYMBOL
    (58) lista -> . NUMBER
    (59) lista -> . BIGINT
    (60) lista -> . BOOLEAN

    STRING          shift and go to state 98
    SYMBOL          shift and go to state 99
    NUMBER          shift and go to state 100
    BIGINT          shift and go to state 101
    BOOLEAN         shift and go to state 102

    lista                          shift and go to state 129

state 116

    (65) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (66) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 130


state 117

    (54) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VARIABLE        reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 54 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 118

    (63) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (64) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 131


state 119

    (67) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (68) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 132


state 120

    (38) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (39) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 133


state 121

    (41) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 134


state 122

    (44) ncasos -> casos .
    (45) ncasos -> casos . ncasos
    (44) ncasos -> . casos
    (45) ncasos -> . casos ncasos
    (42) casos -> . CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (43) casos -> . CASE tipoDato DOSPUNTOS

    DEFAULT         reduce using rule 44 (ncasos -> casos .)
    CASE            shift and go to state 123

    casos                          shift and go to state 122
    ncasos                         shift and go to state 135

state 123

    (42) casos -> CASE . tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (43) casos -> CASE . tipoDato DOSPUNTOS
    (30) tipoDato -> . NUMBER
    (31) tipoDato -> . STRING
    (32) tipoDato -> . BOOLEAN
    (33) tipoDato -> . BIGINT
    (34) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    BOOLEAN         shift and go to state 64
    BIGINT          shift and go to state 65
    SYMBOL          shift and go to state 66

    tipoDato                       shift and go to state 136

state 124

    (69) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA . tipoDato DERPAREN
    (70) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA . tipoDato DERPAREN FINALDELINEA
    (30) tipoDato -> . NUMBER
    (31) tipoDato -> . STRING
    (32) tipoDato -> . BOOLEAN
    (33) tipoDato -> . BIGINT
    (34) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    BOOLEAN         shift and go to state 64
    BIGINT          shift and go to state 65
    SYMBOL          shift and go to state 66

    tipoDato                       shift and go to state 137

state 125

    (36) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 138


state 126

    (37) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 127

    (61) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 139


state 128

    (62) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (55) lista -> . lista COMA lista
    (56) lista -> . STRING
    (57) lista -> . SYMBOL
    (58) lista -> . NUMBER
    (59) lista -> . BIGINT
    (60) lista -> . BOOLEAN

    STRING          shift and go to state 98
    SYMBOL          shift and go to state 99
    NUMBER          shift and go to state 100
    BIGINT          shift and go to state 101
    BOOLEAN         shift and go to state 102

    lista                          shift and go to state 140

state 129

    (55) lista -> lista COMA lista .
    (55) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 55 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 55 (lista -> lista COMA lista .)
    COMA            shift and go to state 115

  ! COMA            [ reduce using rule 55 (lista -> lista COMA lista .) ]


state 130

    (65) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (66) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 65 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 141


state 131

    (63) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (64) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 63 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 142


state 132

    (67) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (68) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 67 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 143


state 133

    (38) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (39) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VARIABLE        reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 145
    IF              shift and go to state 24

  ! IF              [ reduce using rule 38 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 144

state 134

    (41) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 146


state 135

    (45) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 45 (ncasos -> casos ncasos .)


state 136

    (42) casos -> CASE tipoDato . DOSPUNTOS asignacion BREAK FINALDELINEA
    (43) casos -> CASE tipoDato . DOSPUNTOS

    DOSPUNTOS       shift and go to state 147


state 137

    (69) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato . DERPAREN
    (70) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 148


state 138

    (36) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 36 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 139

    (61) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 149


state 140

    (62) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (55) lista -> lista . COMA lista

    DERPAREN        shift and go to state 150
    COMA            shift and go to state 115


state 141

    (66) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 66 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 142

    (64) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 64 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 143

    (68) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 68 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 144

    (39) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VARIABLE        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VAR             reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 145

    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 151


state 146

    (41) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . declarador VARIABLE
    (17) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (21) declaracionVar -> . declarador VARIABLE IGUAL tipoDato
    (22) declaracionVar -> . declarador VARIABLE IGUAL tipoDato FINALDELINEA
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (53) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (54) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (67) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (41) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (61) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (69) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (18) declarador -> . VAR
    (19) declarador -> . LET
    (20) declarador -> . CONST
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 152
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 147

    (42) casos -> CASE tipoDato DOSPUNTOS . asignacion BREAK FINALDELINEA
    (43) casos -> CASE tipoDato DOSPUNTOS .
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA

    CASE            reduce using rule 43 (casos -> CASE tipoDato DOSPUNTOS .)
    DEFAULT         reduce using rule 43 (casos -> CASE tipoDato DOSPUNTOS .)
    VARIABLE        shift and go to state 154

    asignacion                     shift and go to state 153

state 148

    (69) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .
    (70) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    FUNCTION        reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    VAR             reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    LET             reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    CONST           reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    IF              reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    SWITCH          reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    MAPLOWER        reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    NUMBER          reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    IZQPAREN        reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    $end            reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    DERLLAVE        reduce using rule 69 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    FINALDELINEA    shift and go to state 155


state 149

    (61) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 61 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 150

    (62) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 156


state 151

    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracionVarSinAsig -> . declarador VARIABLE
    (17) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (21) declaracionVar -> . declarador VARIABLE IGUAL tipoDato
    (22) declaracionVar -> . declarador VARIABLE IGUAL tipoDato FINALDELINEA
    (23) asignacion -> . VARIABLE operadoresAsig tipoDato
    (24) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (36) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (71) expresion -> . expresion MAS term
    (72) expresion -> . expresion MENOS term
    (73) expresion -> . term
    (46) comparacion -> . VARIABLE comparador VARIABLE
    (47) comparacion -> . expresion comparador expresion
    (53) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (54) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (63) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (64) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (65) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (66) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (67) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (68) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (38) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (41) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (61) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (62) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (69) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (70) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (18) declarador -> . VAR
    (19) declarador -> . LET
    (20) declarador -> . CONST
    (74) term -> . term MULT factor
    (75) term -> . term DIV factor
    (76) term -> . factor
    (77) factor -> . NUMBER
    (78) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 28
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 8
    js                             shift and go to state 157
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 27

state 152

    (41) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 158


state 153

    (42) casos -> CASE tipoDato DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 159


state 154

    (23) asignacion -> VARIABLE . operadoresAsig tipoDato
    (24) asignacion -> VARIABLE . operadoresAsig tipoDato FINALDELINEA
    (25) operadoresAsig -> . IGUAL
    (26) operadoresAsig -> . MASIGUAL
    (27) operadoresAsig -> . MENOSIGUAL
    (28) operadoresAsig -> . DIVIGUAL
    (29) operadoresAsig -> . MODIGUAL

    IGUAL           shift and go to state 41
    MASIGUAL        shift and go to state 42
    MENOSIGUAL      shift and go to state 43
    DIVIGUAL        shift and go to state 44
    MODIGUAL        shift and go to state 45

    operadoresAsig                 shift and go to state 39

state 155

    (70) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    VAR             reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    LET             reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    CONST           reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    IF              reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    $end            reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 70 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)


state 156

    (62) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 62 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 157

    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 160


state 158

    (41) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VARIABLE        reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VAR             reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 41 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 159

    (42) casos -> CASE tipoDato DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 161


state 160

    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 161

    (42) casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 42 (casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 42 (casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 21 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 22 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 23 resolved as shift
WARNING: shift/reduce conflict for COMA in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
