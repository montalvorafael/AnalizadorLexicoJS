Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BOOL
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FLOTANTE
    FOR
    GET
    IGUALIGUAL
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    MULTIGUAL
    NULL
    NUMERO
    OR
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SUPER
    UNDEFINED
    VOID

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracion
Rule 4     instrucciones -> asignacion
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> arreglo
Rule 9     instrucciones -> map
Rule 10    instrucciones -> if
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> while
Rule 13    instrucciones -> pop
Rule 14    instrucciones -> push
Rule 15    instrucciones -> mapSet
Rule 16    declaracion -> declarador VARIABLE final_linea
Rule 17    declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea
Rule 18    asignacion -> VARIABLE operadoresAsig tipos_datos final_linea
Rule 19    asignacion -> VARIABLE IGUAL comparacion final_linea
Rule 20    asignacion -> VARIABLE IGUAL expresion final_linea
Rule 21    declarador -> LET
Rule 22    declarador -> VAR
Rule 23    declarador -> CONST
Rule 24    comparacion -> VARIABLE comparador VARIABLE
Rule 25    comparacion -> expresion comparador expresion
Rule 26    comparador -> MAYORQUE
Rule 27    comparador -> MENORQUE
Rule 28    comparador -> MAYORIGUALQUE
Rule 29    comparador -> MENORIGUALQUE
Rule 30    comparador -> NOIGUALQUE
Rule 31    operadoresAsig -> IGUAL
Rule 32    operadoresAsig -> MASIGUAL
Rule 33    operadoresAsig -> MENOSIGUAL
Rule 34    operadoresAsig -> DIVIGUAL
Rule 35    operadoresAsig -> MODIGUAL
Rule 36    tipos_datos -> NUMBER
Rule 37    tipos_datos -> STRING
Rule 38    tipos_datos -> BOOLEAN
Rule 39    tipos_datos -> BIGINT
Rule 40    tipos_datos -> SYMBOL
Rule 41    expresion -> expresion MAS term
Rule 42    expresion -> expresion MENOS term
Rule 43    expresion -> term
Rule 44    term -> term MULT factor
Rule 45    term -> term MULT VARIABLE
Rule 46    term -> term DIV factor
Rule 47    term -> factor
Rule 48    factor -> VARIABLE
Rule 49    factor -> NUMBER
Rule 50    factor -> IZQPAREN expresion DERPAREN
Rule 51    final_linea -> FINALDELINEA
Rule 52    final_linea -> empty
Rule 53    empty -> <empty>
Rule 54    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 55    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 56    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 57    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 58    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 59    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 60    casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 61    casos -> CASE tipos_datos DOSPUNTOS
Rule 62    ncasos -> casos
Rule 63    ncasos -> casos ncasos
Rule 64    while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
Rule 65    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 66    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 67    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 68    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 69    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 70    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 71    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 72    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 73    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 74    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 75    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 76    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 77    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 78    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 79    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 80    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 81    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 82    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 83    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 84    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 85    lista -> lista COMA lista
Rule 86    lista -> tipos_datos
Rule 87    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 88    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
Rule 89    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 90    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
Rule 91    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 92    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 93    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 94    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 95    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 96    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 97    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
Rule 98    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

Terminals, with rules where they appear

AND                  : 
ARRAY                : 66 67 68 71 72 73 76 77 78 81 82 83
AWAIT                : 
BIGINT               : 39
BOOL                 : 
BOOLEAN              : 38
BREAK                : 60
CASE                 : 60 61
CATCH                : 
CLASS                : 
COMA                 : 85 97 98
CONST                : 23 95 96
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 59
DELETE               : 
DERCORCHETE          : 65 69 70 74 75 79 80 84
DERLLAVE             : 54 55 56 57 58 58 59 64
DERPAREN             : 50 54 55 56 57 58 59 64 66 67 68 71 72 73 76 77 78 81 82 83 87 88 89 90 91 92 93 94 95 96 97 98
DIV                  : 46
DIVIGUAL             : 34
DO                   : 
DOSPUNTOS            : 59 60 61
ELSE                 : 58
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 51 60 65 66 67 68 69 70 71 72 73 74 87 89 92 94 96 98
FLOTANTE             : 
FOR                  : 
FUNCTION             : 54 55
GET                  : 
IF                   : 56 57 58
IGUAL                : 19 20 31 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 87 88 89 90 91 92 93 94 95 96
IGUALIGUAL           : 
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 65 69 70 74 75 79 80 84
IZQLLAVE             : 54 55 56 57 58 58 59 64
IZQPAREN             : 50 54 55 56 57 58 59 64 66 67 68 71 72 73 76 77 78 81 82 83 87 88 89 90 91 92 93 94 95 96 97 98
LET                  : 21 70 71 72 73 74 80 81 82 83 84 91 92
MAP                  : 91 92 93 94 95 96
MAPLOWER             : 97 98
MAS                  : 41
MASIGUAL             : 32
MAYORIGUALQUE        : 28
MAYORQUE             : 26
MENORIGUALQUE        : 29
MENORQUE             : 27
MENOS                : 42
MENOSIGUAL           : 33
MODIGUAL             : 35
MULT                 : 44 45
MULTIGUAL            : 
NEW                  : 66 67 68 71 72 73 76 77 78 81 82 83 91 92 93 94 95 96
NOIGUALQUE           : 30
NULL                 : 
NUMBER               : 36 49 67 72 77 82
NUMERO               : 
OR                   : 
PACKAGE              : 
POP                  : 87 88
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 87 88 89 90 97 98
PUSH                 : 89 90
RETURN               : 
SET                  : 97 98
STRING               : 37
SUPER                : 
SWITCH               : 59
SYMBOL               : 40
UNDEFINED            : 
VAR                  : 22 65 66 67 68 69 75 76 77 78 79 87 88 89 90 93 94
VARIABLE             : 16 17 18 19 20 24 24 45 48 54 54 55 59 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 87 87 88 88 89 89 90 90 91 92 93 94 95 96
VOID                 : 
WHILE                : 64
error                : 

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 4 60
casos                : 62 63
comparacion          : 7 19 56 57 58 64
comparador           : 24 25
declaracion          : 3
declarador           : 16 17
empty                : 52
expresion            : 6 20 25 25 41 42 50 64
factor               : 44 46 47
final_linea          : 16 17 18 19 20
funcion              : 5
if                   : 10 57
instrucciones        : 1 2
js                   : 2 54 55 56 57 58 58 59 0
lista                : 65 68 70 73 75 78 80 83 85 85 89 90
map                  : 9
mapSet               : 15
ncasos               : 59 63
operadoresAsig       : 17 18
pop                  : 13
push                 : 14
switch               : 11
term                 : 41 42 43 44 45 46
tipos_datos          : 17 18 60 61 86 97 97 98 98
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadoresAsig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (54) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (65) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (70) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (80) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (93) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (95) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (59) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (87) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (97) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadoresAsig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (54) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (65) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (70) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (80) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (93) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (95) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (59) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (87) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (97) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    instrucciones                  shift and go to state 2
    js                             shift and go to state 30
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 3

    (3) instrucciones -> declaracion .

    VARIABLE        reduce using rule 3 (instrucciones -> declaracion .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracion .)
    VAR             reduce using rule 3 (instrucciones -> declaracion .)
    LET             reduce using rule 3 (instrucciones -> declaracion .)
    CONST           reduce using rule 3 (instrucciones -> declaracion .)
    IF              reduce using rule 3 (instrucciones -> declaracion .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracion .)
    WHILE           reduce using rule 3 (instrucciones -> declaracion .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracion .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracion .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracion .)
    $end            reduce using rule 3 (instrucciones -> declaracion .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracion .)


state 4

    (4) instrucciones -> asignacion .

    VARIABLE        reduce using rule 4 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion .)
    VAR             reduce using rule 4 (instrucciones -> asignacion .)
    LET             reduce using rule 4 (instrucciones -> asignacion .)
    CONST           reduce using rule 4 (instrucciones -> asignacion .)
    IF              reduce using rule 4 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion .)
    $end            reduce using rule 4 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion .)


state 5

    (5) instrucciones -> funcion .

    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    WHILE           reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion .
    (41) expresion -> expresion . MAS term
    (42) expresion -> expresion . MENOS term
    (25) comparacion -> expresion . comparador expresion
    (26) comparador -> . MAYORQUE
    (27) comparador -> . MENORQUE
    (28) comparador -> . MAYORIGUALQUE
    (29) comparador -> . MENORIGUALQUE
    (30) comparador -> . NOIGUALQUE

    VARIABLE        reduce using rule 6 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion .)
    VAR             reduce using rule 6 (instrucciones -> expresion .)
    LET             reduce using rule 6 (instrucciones -> expresion .)
    CONST           reduce using rule 6 (instrucciones -> expresion .)
    IF              reduce using rule 6 (instrucciones -> expresion .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion .)
    WHILE           reduce using rule 6 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion .)
    $end            reduce using rule 6 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38

    comparador                     shift and go to state 33

state 7

    (7) instrucciones -> comparacion .

    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    WHILE           reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> arreglo .

    VARIABLE        reduce using rule 8 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 8 (instrucciones -> arreglo .)
    VAR             reduce using rule 8 (instrucciones -> arreglo .)
    LET             reduce using rule 8 (instrucciones -> arreglo .)
    CONST           reduce using rule 8 (instrucciones -> arreglo .)
    IF              reduce using rule 8 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 8 (instrucciones -> arreglo .)
    WHILE           reduce using rule 8 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 8 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 8 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 8 (instrucciones -> arreglo .)
    $end            reduce using rule 8 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 8 (instrucciones -> arreglo .)


state 9

    (9) instrucciones -> map .

    VARIABLE        reduce using rule 9 (instrucciones -> map .)
    FUNCTION        reduce using rule 9 (instrucciones -> map .)
    VAR             reduce using rule 9 (instrucciones -> map .)
    LET             reduce using rule 9 (instrucciones -> map .)
    CONST           reduce using rule 9 (instrucciones -> map .)
    IF              reduce using rule 9 (instrucciones -> map .)
    SWITCH          reduce using rule 9 (instrucciones -> map .)
    WHILE           reduce using rule 9 (instrucciones -> map .)
    MAPLOWER        reduce using rule 9 (instrucciones -> map .)
    NUMBER          reduce using rule 9 (instrucciones -> map .)
    IZQPAREN        reduce using rule 9 (instrucciones -> map .)
    $end            reduce using rule 9 (instrucciones -> map .)
    DERLLAVE        reduce using rule 9 (instrucciones -> map .)


state 10

    (10) instrucciones -> if .

    VARIABLE        reduce using rule 10 (instrucciones -> if .)
    FUNCTION        reduce using rule 10 (instrucciones -> if .)
    VAR             reduce using rule 10 (instrucciones -> if .)
    LET             reduce using rule 10 (instrucciones -> if .)
    CONST           reduce using rule 10 (instrucciones -> if .)
    IF              reduce using rule 10 (instrucciones -> if .)
    SWITCH          reduce using rule 10 (instrucciones -> if .)
    WHILE           reduce using rule 10 (instrucciones -> if .)
    MAPLOWER        reduce using rule 10 (instrucciones -> if .)
    NUMBER          reduce using rule 10 (instrucciones -> if .)
    IZQPAREN        reduce using rule 10 (instrucciones -> if .)
    $end            reduce using rule 10 (instrucciones -> if .)
    DERLLAVE        reduce using rule 10 (instrucciones -> if .)


state 11

    (11) instrucciones -> switch .

    VARIABLE        reduce using rule 11 (instrucciones -> switch .)
    FUNCTION        reduce using rule 11 (instrucciones -> switch .)
    VAR             reduce using rule 11 (instrucciones -> switch .)
    LET             reduce using rule 11 (instrucciones -> switch .)
    CONST           reduce using rule 11 (instrucciones -> switch .)
    IF              reduce using rule 11 (instrucciones -> switch .)
    SWITCH          reduce using rule 11 (instrucciones -> switch .)
    WHILE           reduce using rule 11 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 11 (instrucciones -> switch .)
    NUMBER          reduce using rule 11 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 11 (instrucciones -> switch .)
    $end            reduce using rule 11 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 11 (instrucciones -> switch .)


state 12

    (12) instrucciones -> while .

    VARIABLE        reduce using rule 12 (instrucciones -> while .)
    FUNCTION        reduce using rule 12 (instrucciones -> while .)
    VAR             reduce using rule 12 (instrucciones -> while .)
    LET             reduce using rule 12 (instrucciones -> while .)
    CONST           reduce using rule 12 (instrucciones -> while .)
    IF              reduce using rule 12 (instrucciones -> while .)
    SWITCH          reduce using rule 12 (instrucciones -> while .)
    WHILE           reduce using rule 12 (instrucciones -> while .)
    MAPLOWER        reduce using rule 12 (instrucciones -> while .)
    NUMBER          reduce using rule 12 (instrucciones -> while .)
    IZQPAREN        reduce using rule 12 (instrucciones -> while .)
    $end            reduce using rule 12 (instrucciones -> while .)
    DERLLAVE        reduce using rule 12 (instrucciones -> while .)


state 13

    (13) instrucciones -> pop .

    VARIABLE        reduce using rule 13 (instrucciones -> pop .)
    FUNCTION        reduce using rule 13 (instrucciones -> pop .)
    VAR             reduce using rule 13 (instrucciones -> pop .)
    LET             reduce using rule 13 (instrucciones -> pop .)
    CONST           reduce using rule 13 (instrucciones -> pop .)
    IF              reduce using rule 13 (instrucciones -> pop .)
    SWITCH          reduce using rule 13 (instrucciones -> pop .)
    WHILE           reduce using rule 13 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 13 (instrucciones -> pop .)
    NUMBER          reduce using rule 13 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 13 (instrucciones -> pop .)
    $end            reduce using rule 13 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 13 (instrucciones -> pop .)


state 14

    (14) instrucciones -> push .

    VARIABLE        reduce using rule 14 (instrucciones -> push .)
    FUNCTION        reduce using rule 14 (instrucciones -> push .)
    VAR             reduce using rule 14 (instrucciones -> push .)
    LET             reduce using rule 14 (instrucciones -> push .)
    CONST           reduce using rule 14 (instrucciones -> push .)
    IF              reduce using rule 14 (instrucciones -> push .)
    SWITCH          reduce using rule 14 (instrucciones -> push .)
    WHILE           reduce using rule 14 (instrucciones -> push .)
    MAPLOWER        reduce using rule 14 (instrucciones -> push .)
    NUMBER          reduce using rule 14 (instrucciones -> push .)
    IZQPAREN        reduce using rule 14 (instrucciones -> push .)
    $end            reduce using rule 14 (instrucciones -> push .)
    DERLLAVE        reduce using rule 14 (instrucciones -> push .)


state 15

    (15) instrucciones -> mapSet .

    VARIABLE        reduce using rule 15 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 15 (instrucciones -> mapSet .)
    VAR             reduce using rule 15 (instrucciones -> mapSet .)
    LET             reduce using rule 15 (instrucciones -> mapSet .)
    CONST           reduce using rule 15 (instrucciones -> mapSet .)
    IF              reduce using rule 15 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 15 (instrucciones -> mapSet .)
    WHILE           reduce using rule 15 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 15 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 15 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 15 (instrucciones -> mapSet .)
    $end            reduce using rule 15 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 15 (instrucciones -> mapSet .)


state 16

    (16) declaracion -> declarador . VARIABLE final_linea
    (17) declaracion -> declarador . VARIABLE operadoresAsig tipos_datos final_linea

    VARIABLE        shift and go to state 39


state 17

    (18) asignacion -> VARIABLE . operadoresAsig tipos_datos final_linea
    (19) asignacion -> VARIABLE . IGUAL comparacion final_linea
    (20) asignacion -> VARIABLE . IGUAL expresion final_linea
    (24) comparacion -> VARIABLE . comparador VARIABLE
    (48) factor -> VARIABLE .
    (31) operadoresAsig -> . IGUAL
    (32) operadoresAsig -> . MASIGUAL
    (33) operadoresAsig -> . MENOSIGUAL
    (34) operadoresAsig -> . DIVIGUAL
    (35) operadoresAsig -> . MODIGUAL
    (26) comparador -> . MAYORQUE
    (27) comparador -> . MENORQUE
    (28) comparador -> . MAYORIGUALQUE
    (29) comparador -> . MENORIGUALQUE
    (30) comparador -> . NOIGUALQUE

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUALQUE resolved as shift
  ! shift/reduce conflict for NOIGUALQUE resolved as shift
    IGUAL           shift and go to state 41
    MULT            reduce using rule 48 (factor -> VARIABLE .)
    DIV             reduce using rule 48 (factor -> VARIABLE .)
    MAS             reduce using rule 48 (factor -> VARIABLE .)
    MENOS           reduce using rule 48 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 48 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 48 (factor -> VARIABLE .)
    VAR             reduce using rule 48 (factor -> VARIABLE .)
    LET             reduce using rule 48 (factor -> VARIABLE .)
    CONST           reduce using rule 48 (factor -> VARIABLE .)
    IF              reduce using rule 48 (factor -> VARIABLE .)
    SWITCH          reduce using rule 48 (factor -> VARIABLE .)
    WHILE           reduce using rule 48 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 48 (factor -> VARIABLE .)
    NUMBER          reduce using rule 48 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 48 (factor -> VARIABLE .)
    $end            reduce using rule 48 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 48 (factor -> VARIABLE .)
    MASIGUAL        shift and go to state 43
    MENOSIGUAL      shift and go to state 44
    DIVIGUAL        shift and go to state 45
    MODIGUAL        shift and go to state 46
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38

  ! MAYORQUE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 48 (factor -> VARIABLE .) ]

    operadoresAsig                 shift and go to state 40
    comparador                     shift and go to state 42

state 18

    (54) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 47


state 19

    (50) factor -> IZQPAREN . expresion DERPAREN
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 49
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 48
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 20

    (43) expresion -> term .
    (44) term -> term . MULT factor
    (45) term -> term . MULT VARIABLE
    (46) term -> term . DIV factor

    MAS             reduce using rule 43 (expresion -> term .)
    MENOS           reduce using rule 43 (expresion -> term .)
    MAYORQUE        reduce using rule 43 (expresion -> term .)
    MENORQUE        reduce using rule 43 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 43 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 43 (expresion -> term .)
    NOIGUALQUE      reduce using rule 43 (expresion -> term .)
    VARIABLE        reduce using rule 43 (expresion -> term .)
    FUNCTION        reduce using rule 43 (expresion -> term .)
    VAR             reduce using rule 43 (expresion -> term .)
    LET             reduce using rule 43 (expresion -> term .)
    CONST           reduce using rule 43 (expresion -> term .)
    IF              reduce using rule 43 (expresion -> term .)
    SWITCH          reduce using rule 43 (expresion -> term .)
    WHILE           reduce using rule 43 (expresion -> term .)
    MAPLOWER        reduce using rule 43 (expresion -> term .)
    NUMBER          reduce using rule 43 (expresion -> term .)
    IZQPAREN        reduce using rule 43 (expresion -> term .)
    $end            reduce using rule 43 (expresion -> term .)
    DERLLAVE        reduce using rule 43 (expresion -> term .)
    DERPAREN        reduce using rule 43 (expresion -> term .)
    FINALDELINEA    reduce using rule 43 (expresion -> term .)
    BREAK           reduce using rule 43 (expresion -> term .)
    MULT            shift and go to state 50
    DIV             shift and go to state 51


state 21

    (65) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (93) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (87) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (22) declarador -> VAR .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 52

  ! VARIABLE        [ reduce using rule 22 (declarador -> VAR .) ]


state 22

    (49) factor -> NUMBER .

    MULT            reduce using rule 49 (factor -> NUMBER .)
    DIV             reduce using rule 49 (factor -> NUMBER .)
    MAS             reduce using rule 49 (factor -> NUMBER .)
    MENOS           reduce using rule 49 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 49 (factor -> NUMBER .)
    MENORQUE        reduce using rule 49 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 49 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 49 (factor -> NUMBER .)
    NOIGUALQUE      reduce using rule 49 (factor -> NUMBER .)
    VARIABLE        reduce using rule 49 (factor -> NUMBER .)
    FUNCTION        reduce using rule 49 (factor -> NUMBER .)
    VAR             reduce using rule 49 (factor -> NUMBER .)
    LET             reduce using rule 49 (factor -> NUMBER .)
    CONST           reduce using rule 49 (factor -> NUMBER .)
    IF              reduce using rule 49 (factor -> NUMBER .)
    SWITCH          reduce using rule 49 (factor -> NUMBER .)
    WHILE           reduce using rule 49 (factor -> NUMBER .)
    MAPLOWER        reduce using rule 49 (factor -> NUMBER .)
    NUMBER          reduce using rule 49 (factor -> NUMBER .)
    IZQPAREN        reduce using rule 49 (factor -> NUMBER .)
    $end            reduce using rule 49 (factor -> NUMBER .)
    DERLLAVE        reduce using rule 49 (factor -> NUMBER .)
    DERPAREN        reduce using rule 49 (factor -> NUMBER .)
    FINALDELINEA    reduce using rule 49 (factor -> NUMBER .)
    BREAK           reduce using rule 49 (factor -> NUMBER .)


state 23

    (70) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (21) declarador -> LET .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 53

  ! VARIABLE        [ reduce using rule 21 (declarador -> LET .) ]


state 24

    (95) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (23) declarador -> CONST .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 54

  ! VARIABLE        [ reduce using rule 23 (declarador -> CONST .) ]


state 25

    (56) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 55


state 26

    (59) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 56


state 27

    (64) while -> WHILE . IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE

    IZQPAREN        shift and go to state 57


state 28

    (97) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

    PUNTO           shift and go to state 58


state 29

    (47) term -> factor .

    MULT            reduce using rule 47 (term -> factor .)
    DIV             reduce using rule 47 (term -> factor .)
    MAS             reduce using rule 47 (term -> factor .)
    MENOS           reduce using rule 47 (term -> factor .)
    MAYORQUE        reduce using rule 47 (term -> factor .)
    MENORQUE        reduce using rule 47 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 47 (term -> factor .)
    MENORIGUALQUE   reduce using rule 47 (term -> factor .)
    NOIGUALQUE      reduce using rule 47 (term -> factor .)
    VARIABLE        reduce using rule 47 (term -> factor .)
    FUNCTION        reduce using rule 47 (term -> factor .)
    VAR             reduce using rule 47 (term -> factor .)
    LET             reduce using rule 47 (term -> factor .)
    CONST           reduce using rule 47 (term -> factor .)
    IF              reduce using rule 47 (term -> factor .)
    SWITCH          reduce using rule 47 (term -> factor .)
    WHILE           reduce using rule 47 (term -> factor .)
    MAPLOWER        reduce using rule 47 (term -> factor .)
    NUMBER          reduce using rule 47 (term -> factor .)
    IZQPAREN        reduce using rule 47 (term -> factor .)
    $end            reduce using rule 47 (term -> factor .)
    DERLLAVE        reduce using rule 47 (term -> factor .)
    DERPAREN        reduce using rule 47 (term -> factor .)
    FINALDELINEA    reduce using rule 47 (term -> factor .)
    BREAK           reduce using rule 47 (term -> factor .)


state 30

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 31

    (41) expresion -> expresion MAS . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 49
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    term                           shift and go to state 59
    factor                         shift and go to state 29

state 32

    (42) expresion -> expresion MENOS . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 49
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    term                           shift and go to state 60
    factor                         shift and go to state 29

state 33

    (25) comparacion -> expresion comparador . expresion
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 49
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 61
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 34

    (26) comparador -> MAYORQUE .

    VARIABLE        reduce using rule 26 (comparador -> MAYORQUE .)
    NUMBER          reduce using rule 26 (comparador -> MAYORQUE .)
    IZQPAREN        reduce using rule 26 (comparador -> MAYORQUE .)


state 35

    (27) comparador -> MENORQUE .

    VARIABLE        reduce using rule 27 (comparador -> MENORQUE .)
    NUMBER          reduce using rule 27 (comparador -> MENORQUE .)
    IZQPAREN        reduce using rule 27 (comparador -> MENORQUE .)


state 36

    (28) comparador -> MAYORIGUALQUE .

    VARIABLE        reduce using rule 28 (comparador -> MAYORIGUALQUE .)
    NUMBER          reduce using rule 28 (comparador -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 28 (comparador -> MAYORIGUALQUE .)


state 37

    (29) comparador -> MENORIGUALQUE .

    VARIABLE        reduce using rule 29 (comparador -> MENORIGUALQUE .)
    NUMBER          reduce using rule 29 (comparador -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 29 (comparador -> MENORIGUALQUE .)


state 38

    (30) comparador -> NOIGUALQUE .

    VARIABLE        reduce using rule 30 (comparador -> NOIGUALQUE .)
    NUMBER          reduce using rule 30 (comparador -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 30 (comparador -> NOIGUALQUE .)


state 39

    (16) declaracion -> declarador VARIABLE . final_linea
    (17) declaracion -> declarador VARIABLE . operadoresAsig tipos_datos final_linea
    (51) final_linea -> . FINALDELINEA
    (52) final_linea -> . empty
    (31) operadoresAsig -> . IGUAL
    (32) operadoresAsig -> . MASIGUAL
    (33) operadoresAsig -> . MENOSIGUAL
    (34) operadoresAsig -> . DIVIGUAL
    (35) operadoresAsig -> . MODIGUAL
    (53) empty -> .

    FINALDELINEA    shift and go to state 64
    IGUAL           shift and go to state 66
    MASIGUAL        shift and go to state 43
    MENOSIGUAL      shift and go to state 44
    DIVIGUAL        shift and go to state 45
    MODIGUAL        shift and go to state 46
    VARIABLE        reduce using rule 53 (empty -> .)
    FUNCTION        reduce using rule 53 (empty -> .)
    VAR             reduce using rule 53 (empty -> .)
    LET             reduce using rule 53 (empty -> .)
    CONST           reduce using rule 53 (empty -> .)
    IF              reduce using rule 53 (empty -> .)
    SWITCH          reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    MAPLOWER        reduce using rule 53 (empty -> .)
    NUMBER          reduce using rule 53 (empty -> .)
    IZQPAREN        reduce using rule 53 (empty -> .)
    $end            reduce using rule 53 (empty -> .)
    DERLLAVE        reduce using rule 53 (empty -> .)

    final_linea                    shift and go to state 62
    operadoresAsig                 shift and go to state 63
    empty                          shift and go to state 65

state 40

    (18) asignacion -> VARIABLE operadoresAsig . tipos_datos final_linea
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    tipos_datos                    shift and go to state 67

state 41

    (19) asignacion -> VARIABLE IGUAL . comparacion final_linea
    (20) asignacion -> VARIABLE IGUAL . expresion final_linea
    (31) operadoresAsig -> IGUAL .
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
    STRING          reduce using rule 31 (operadoresAsig -> IGUAL .)
    BOOLEAN         reduce using rule 31 (operadoresAsig -> IGUAL .)
    BIGINT          reduce using rule 31 (operadoresAsig -> IGUAL .)
    SYMBOL          reduce using rule 31 (operadoresAsig -> IGUAL .)
    VARIABLE        shift and go to state 73
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

  ! NUMBER          [ reduce using rule 31 (operadoresAsig -> IGUAL .) ]

    comparacion                    shift and go to state 74
    expresion                      shift and go to state 75
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 42

    (24) comparacion -> VARIABLE comparador . VARIABLE

    VARIABLE        shift and go to state 76


state 43

    (32) operadoresAsig -> MASIGUAL .

    NUMBER          reduce using rule 32 (operadoresAsig -> MASIGUAL .)
    STRING          reduce using rule 32 (operadoresAsig -> MASIGUAL .)
    BOOLEAN         reduce using rule 32 (operadoresAsig -> MASIGUAL .)
    BIGINT          reduce using rule 32 (operadoresAsig -> MASIGUAL .)
    SYMBOL          reduce using rule 32 (operadoresAsig -> MASIGUAL .)


state 44

    (33) operadoresAsig -> MENOSIGUAL .

    NUMBER          reduce using rule 33 (operadoresAsig -> MENOSIGUAL .)
    STRING          reduce using rule 33 (operadoresAsig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 33 (operadoresAsig -> MENOSIGUAL .)
    BIGINT          reduce using rule 33 (operadoresAsig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 33 (operadoresAsig -> MENOSIGUAL .)


state 45

    (34) operadoresAsig -> DIVIGUAL .

    NUMBER          reduce using rule 34 (operadoresAsig -> DIVIGUAL .)
    STRING          reduce using rule 34 (operadoresAsig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 34 (operadoresAsig -> DIVIGUAL .)
    BIGINT          reduce using rule 34 (operadoresAsig -> DIVIGUAL .)
    SYMBOL          reduce using rule 34 (operadoresAsig -> DIVIGUAL .)


state 46

    (35) operadoresAsig -> MODIGUAL .

    NUMBER          reduce using rule 35 (operadoresAsig -> MODIGUAL .)
    STRING          reduce using rule 35 (operadoresAsig -> MODIGUAL .)
    BOOLEAN         reduce using rule 35 (operadoresAsig -> MODIGUAL .)
    BIGINT          reduce using rule 35 (operadoresAsig -> MODIGUAL .)
    SYMBOL          reduce using rule 35 (operadoresAsig -> MODIGUAL .)


state 47

    (54) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 77


state 48

    (50) factor -> IZQPAREN expresion . DERPAREN
    (41) expresion -> expresion . MAS term
    (42) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 78
    MAS             shift and go to state 31
    MENOS           shift and go to state 32


state 49

    (48) factor -> VARIABLE .

    MULT            reduce using rule 48 (factor -> VARIABLE .)
    DIV             reduce using rule 48 (factor -> VARIABLE .)
    DERPAREN        reduce using rule 48 (factor -> VARIABLE .)
    MAS             reduce using rule 48 (factor -> VARIABLE .)
    MENOS           reduce using rule 48 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 48 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 48 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 48 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 48 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 48 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 48 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 48 (factor -> VARIABLE .)
    VAR             reduce using rule 48 (factor -> VARIABLE .)
    LET             reduce using rule 48 (factor -> VARIABLE .)
    CONST           reduce using rule 48 (factor -> VARIABLE .)
    IF              reduce using rule 48 (factor -> VARIABLE .)
    SWITCH          reduce using rule 48 (factor -> VARIABLE .)
    WHILE           reduce using rule 48 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 48 (factor -> VARIABLE .)
    NUMBER          reduce using rule 48 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 48 (factor -> VARIABLE .)
    $end            reduce using rule 48 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 48 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 48 (factor -> VARIABLE .)
    BREAK           reduce using rule 48 (factor -> VARIABLE .)


state 50

    (44) term -> term MULT . factor
    (45) term -> term MULT . VARIABLE
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 80
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    factor                         shift and go to state 79

state 51

    (46) term -> term DIV . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 49
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    factor                         shift and go to state 81

state 52

    (65) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (93) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (87) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    IGUAL           shift and go to state 82


state 53

    (70) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 83


state 54

    (95) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 84


state 55

    (56) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 73
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 85
    expresion                      shift and go to state 86
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 56

    (59) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 87


state 57

    (64) while -> WHILE IZQPAREN . comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 73
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 88
    expresion                      shift and go to state 86
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 58

    (97) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

    SET             shift and go to state 89


state 59

    (41) expresion -> expresion MAS term .
    (44) term -> term . MULT factor
    (45) term -> term . MULT VARIABLE
    (46) term -> term . DIV factor

    MAS             reduce using rule 41 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 41 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 41 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 41 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 41 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 41 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 41 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 41 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 41 (expresion -> expresion MAS term .)
    VAR             reduce using rule 41 (expresion -> expresion MAS term .)
    LET             reduce using rule 41 (expresion -> expresion MAS term .)
    CONST           reduce using rule 41 (expresion -> expresion MAS term .)
    IF              reduce using rule 41 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 41 (expresion -> expresion MAS term .)
    WHILE           reduce using rule 41 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 41 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 41 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 41 (expresion -> expresion MAS term .)
    $end            reduce using rule 41 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 41 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 41 (expresion -> expresion MAS term .)
    FINALDELINEA    reduce using rule 41 (expresion -> expresion MAS term .)
    BREAK           reduce using rule 41 (expresion -> expresion MAS term .)
    MULT            shift and go to state 50
    DIV             shift and go to state 51


state 60

    (42) expresion -> expresion MENOS term .
    (44) term -> term . MULT factor
    (45) term -> term . MULT VARIABLE
    (46) term -> term . DIV factor

    MAS             reduce using rule 42 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 42 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 42 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 42 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 42 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 42 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 42 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 42 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 42 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 42 (expresion -> expresion MENOS term .)
    LET             reduce using rule 42 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 42 (expresion -> expresion MENOS term .)
    IF              reduce using rule 42 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 42 (expresion -> expresion MENOS term .)
    WHILE           reduce using rule 42 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 42 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 42 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 42 (expresion -> expresion MENOS term .)
    $end            reduce using rule 42 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 42 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 42 (expresion -> expresion MENOS term .)
    FINALDELINEA    reduce using rule 42 (expresion -> expresion MENOS term .)
    BREAK           reduce using rule 42 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 50
    DIV             shift and go to state 51


state 61

    (25) comparacion -> expresion comparador expresion .
    (41) expresion -> expresion . MAS term
    (42) expresion -> expresion . MENOS term

    VARIABLE        reduce using rule 25 (comparacion -> expresion comparador expresion .)
    FUNCTION        reduce using rule 25 (comparacion -> expresion comparador expresion .)
    VAR             reduce using rule 25 (comparacion -> expresion comparador expresion .)
    LET             reduce using rule 25 (comparacion -> expresion comparador expresion .)
    CONST           reduce using rule 25 (comparacion -> expresion comparador expresion .)
    IF              reduce using rule 25 (comparacion -> expresion comparador expresion .)
    SWITCH          reduce using rule 25 (comparacion -> expresion comparador expresion .)
    WHILE           reduce using rule 25 (comparacion -> expresion comparador expresion .)
    MAPLOWER        reduce using rule 25 (comparacion -> expresion comparador expresion .)
    NUMBER          reduce using rule 25 (comparacion -> expresion comparador expresion .)
    IZQPAREN        reduce using rule 25 (comparacion -> expresion comparador expresion .)
    $end            reduce using rule 25 (comparacion -> expresion comparador expresion .)
    DERLLAVE        reduce using rule 25 (comparacion -> expresion comparador expresion .)
    FINALDELINEA    reduce using rule 25 (comparacion -> expresion comparador expresion .)
    BREAK           reduce using rule 25 (comparacion -> expresion comparador expresion .)
    DERPAREN        reduce using rule 25 (comparacion -> expresion comparador expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32


state 62

    (16) declaracion -> declarador VARIABLE final_linea .

    VARIABLE        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    FUNCTION        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    VAR             reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    LET             reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    CONST           reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    IF              reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    SWITCH          reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    WHILE           reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    MAPLOWER        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    NUMBER          reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    IZQPAREN        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    $end            reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    DERLLAVE        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)


state 63

    (17) declaracion -> declarador VARIABLE operadoresAsig . tipos_datos final_linea
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    tipos_datos                    shift and go to state 90

state 64

    (51) final_linea -> FINALDELINEA .

    VARIABLE        reduce using rule 51 (final_linea -> FINALDELINEA .)
    FUNCTION        reduce using rule 51 (final_linea -> FINALDELINEA .)
    VAR             reduce using rule 51 (final_linea -> FINALDELINEA .)
    LET             reduce using rule 51 (final_linea -> FINALDELINEA .)
    CONST           reduce using rule 51 (final_linea -> FINALDELINEA .)
    IF              reduce using rule 51 (final_linea -> FINALDELINEA .)
    SWITCH          reduce using rule 51 (final_linea -> FINALDELINEA .)
    WHILE           reduce using rule 51 (final_linea -> FINALDELINEA .)
    MAPLOWER        reduce using rule 51 (final_linea -> FINALDELINEA .)
    NUMBER          reduce using rule 51 (final_linea -> FINALDELINEA .)
    IZQPAREN        reduce using rule 51 (final_linea -> FINALDELINEA .)
    $end            reduce using rule 51 (final_linea -> FINALDELINEA .)
    DERLLAVE        reduce using rule 51 (final_linea -> FINALDELINEA .)
    BREAK           reduce using rule 51 (final_linea -> FINALDELINEA .)


state 65

    (52) final_linea -> empty .

    VARIABLE        reduce using rule 52 (final_linea -> empty .)
    FUNCTION        reduce using rule 52 (final_linea -> empty .)
    VAR             reduce using rule 52 (final_linea -> empty .)
    LET             reduce using rule 52 (final_linea -> empty .)
    CONST           reduce using rule 52 (final_linea -> empty .)
    IF              reduce using rule 52 (final_linea -> empty .)
    SWITCH          reduce using rule 52 (final_linea -> empty .)
    WHILE           reduce using rule 52 (final_linea -> empty .)
    MAPLOWER        reduce using rule 52 (final_linea -> empty .)
    NUMBER          reduce using rule 52 (final_linea -> empty .)
    IZQPAREN        reduce using rule 52 (final_linea -> empty .)
    $end            reduce using rule 52 (final_linea -> empty .)
    DERLLAVE        reduce using rule 52 (final_linea -> empty .)
    BREAK           reduce using rule 52 (final_linea -> empty .)


state 66

    (31) operadoresAsig -> IGUAL .

    NUMBER          reduce using rule 31 (operadoresAsig -> IGUAL .)
    STRING          reduce using rule 31 (operadoresAsig -> IGUAL .)
    BOOLEAN         reduce using rule 31 (operadoresAsig -> IGUAL .)
    BIGINT          reduce using rule 31 (operadoresAsig -> IGUAL .)
    SYMBOL          reduce using rule 31 (operadoresAsig -> IGUAL .)


state 67

    (18) asignacion -> VARIABLE operadoresAsig tipos_datos . final_linea
    (51) final_linea -> . FINALDELINEA
    (52) final_linea -> . empty
    (53) empty -> .

    FINALDELINEA    shift and go to state 64
    VARIABLE        reduce using rule 53 (empty -> .)
    FUNCTION        reduce using rule 53 (empty -> .)
    VAR             reduce using rule 53 (empty -> .)
    LET             reduce using rule 53 (empty -> .)
    CONST           reduce using rule 53 (empty -> .)
    IF              reduce using rule 53 (empty -> .)
    SWITCH          reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    MAPLOWER        reduce using rule 53 (empty -> .)
    NUMBER          reduce using rule 53 (empty -> .)
    IZQPAREN        reduce using rule 53 (empty -> .)
    $end            reduce using rule 53 (empty -> .)
    DERLLAVE        reduce using rule 53 (empty -> .)
    BREAK           reduce using rule 53 (empty -> .)

    final_linea                    shift and go to state 91
    empty                          shift and go to state 65

state 68

    (36) tipos_datos -> NUMBER .

    FINALDELINEA    reduce using rule 36 (tipos_datos -> NUMBER .)
    VARIABLE        reduce using rule 36 (tipos_datos -> NUMBER .)
    FUNCTION        reduce using rule 36 (tipos_datos -> NUMBER .)
    VAR             reduce using rule 36 (tipos_datos -> NUMBER .)
    LET             reduce using rule 36 (tipos_datos -> NUMBER .)
    CONST           reduce using rule 36 (tipos_datos -> NUMBER .)
    IF              reduce using rule 36 (tipos_datos -> NUMBER .)
    SWITCH          reduce using rule 36 (tipos_datos -> NUMBER .)
    WHILE           reduce using rule 36 (tipos_datos -> NUMBER .)
    MAPLOWER        reduce using rule 36 (tipos_datos -> NUMBER .)
    NUMBER          reduce using rule 36 (tipos_datos -> NUMBER .)
    IZQPAREN        reduce using rule 36 (tipos_datos -> NUMBER .)
    $end            reduce using rule 36 (tipos_datos -> NUMBER .)
    DERLLAVE        reduce using rule 36 (tipos_datos -> NUMBER .)
    BREAK           reduce using rule 36 (tipos_datos -> NUMBER .)
    DERCORCHETE     reduce using rule 36 (tipos_datos -> NUMBER .)
    COMA            reduce using rule 36 (tipos_datos -> NUMBER .)
    DERPAREN        reduce using rule 36 (tipos_datos -> NUMBER .)
    DOSPUNTOS       reduce using rule 36 (tipos_datos -> NUMBER .)


state 69

    (37) tipos_datos -> STRING .

    FINALDELINEA    reduce using rule 37 (tipos_datos -> STRING .)
    VARIABLE        reduce using rule 37 (tipos_datos -> STRING .)
    FUNCTION        reduce using rule 37 (tipos_datos -> STRING .)
    VAR             reduce using rule 37 (tipos_datos -> STRING .)
    LET             reduce using rule 37 (tipos_datos -> STRING .)
    CONST           reduce using rule 37 (tipos_datos -> STRING .)
    IF              reduce using rule 37 (tipos_datos -> STRING .)
    SWITCH          reduce using rule 37 (tipos_datos -> STRING .)
    WHILE           reduce using rule 37 (tipos_datos -> STRING .)
    MAPLOWER        reduce using rule 37 (tipos_datos -> STRING .)
    NUMBER          reduce using rule 37 (tipos_datos -> STRING .)
    IZQPAREN        reduce using rule 37 (tipos_datos -> STRING .)
    $end            reduce using rule 37 (tipos_datos -> STRING .)
    DERLLAVE        reduce using rule 37 (tipos_datos -> STRING .)
    BREAK           reduce using rule 37 (tipos_datos -> STRING .)
    DERCORCHETE     reduce using rule 37 (tipos_datos -> STRING .)
    COMA            reduce using rule 37 (tipos_datos -> STRING .)
    DERPAREN        reduce using rule 37 (tipos_datos -> STRING .)
    DOSPUNTOS       reduce using rule 37 (tipos_datos -> STRING .)


state 70

    (38) tipos_datos -> BOOLEAN .

    FINALDELINEA    reduce using rule 38 (tipos_datos -> BOOLEAN .)
    VARIABLE        reduce using rule 38 (tipos_datos -> BOOLEAN .)
    FUNCTION        reduce using rule 38 (tipos_datos -> BOOLEAN .)
    VAR             reduce using rule 38 (tipos_datos -> BOOLEAN .)
    LET             reduce using rule 38 (tipos_datos -> BOOLEAN .)
    CONST           reduce using rule 38 (tipos_datos -> BOOLEAN .)
    IF              reduce using rule 38 (tipos_datos -> BOOLEAN .)
    SWITCH          reduce using rule 38 (tipos_datos -> BOOLEAN .)
    WHILE           reduce using rule 38 (tipos_datos -> BOOLEAN .)
    MAPLOWER        reduce using rule 38 (tipos_datos -> BOOLEAN .)
    NUMBER          reduce using rule 38 (tipos_datos -> BOOLEAN .)
    IZQPAREN        reduce using rule 38 (tipos_datos -> BOOLEAN .)
    $end            reduce using rule 38 (tipos_datos -> BOOLEAN .)
    DERLLAVE        reduce using rule 38 (tipos_datos -> BOOLEAN .)
    BREAK           reduce using rule 38 (tipos_datos -> BOOLEAN .)
    DERCORCHETE     reduce using rule 38 (tipos_datos -> BOOLEAN .)
    COMA            reduce using rule 38 (tipos_datos -> BOOLEAN .)
    DERPAREN        reduce using rule 38 (tipos_datos -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 38 (tipos_datos -> BOOLEAN .)


state 71

    (39) tipos_datos -> BIGINT .

    FINALDELINEA    reduce using rule 39 (tipos_datos -> BIGINT .)
    VARIABLE        reduce using rule 39 (tipos_datos -> BIGINT .)
    FUNCTION        reduce using rule 39 (tipos_datos -> BIGINT .)
    VAR             reduce using rule 39 (tipos_datos -> BIGINT .)
    LET             reduce using rule 39 (tipos_datos -> BIGINT .)
    CONST           reduce using rule 39 (tipos_datos -> BIGINT .)
    IF              reduce using rule 39 (tipos_datos -> BIGINT .)
    SWITCH          reduce using rule 39 (tipos_datos -> BIGINT .)
    WHILE           reduce using rule 39 (tipos_datos -> BIGINT .)
    MAPLOWER        reduce using rule 39 (tipos_datos -> BIGINT .)
    NUMBER          reduce using rule 39 (tipos_datos -> BIGINT .)
    IZQPAREN        reduce using rule 39 (tipos_datos -> BIGINT .)
    $end            reduce using rule 39 (tipos_datos -> BIGINT .)
    DERLLAVE        reduce using rule 39 (tipos_datos -> BIGINT .)
    BREAK           reduce using rule 39 (tipos_datos -> BIGINT .)
    DERCORCHETE     reduce using rule 39 (tipos_datos -> BIGINT .)
    COMA            reduce using rule 39 (tipos_datos -> BIGINT .)
    DERPAREN        reduce using rule 39 (tipos_datos -> BIGINT .)
    DOSPUNTOS       reduce using rule 39 (tipos_datos -> BIGINT .)


state 72

    (40) tipos_datos -> SYMBOL .

    FINALDELINEA    reduce using rule 40 (tipos_datos -> SYMBOL .)
    VARIABLE        reduce using rule 40 (tipos_datos -> SYMBOL .)
    FUNCTION        reduce using rule 40 (tipos_datos -> SYMBOL .)
    VAR             reduce using rule 40 (tipos_datos -> SYMBOL .)
    LET             reduce using rule 40 (tipos_datos -> SYMBOL .)
    CONST           reduce using rule 40 (tipos_datos -> SYMBOL .)
    IF              reduce using rule 40 (tipos_datos -> SYMBOL .)
    SWITCH          reduce using rule 40 (tipos_datos -> SYMBOL .)
    WHILE           reduce using rule 40 (tipos_datos -> SYMBOL .)
    MAPLOWER        reduce using rule 40 (tipos_datos -> SYMBOL .)
    NUMBER          reduce using rule 40 (tipos_datos -> SYMBOL .)
    IZQPAREN        reduce using rule 40 (tipos_datos -> SYMBOL .)
    $end            reduce using rule 40 (tipos_datos -> SYMBOL .)
    DERLLAVE        reduce using rule 40 (tipos_datos -> SYMBOL .)
    BREAK           reduce using rule 40 (tipos_datos -> SYMBOL .)
    DERCORCHETE     reduce using rule 40 (tipos_datos -> SYMBOL .)
    COMA            reduce using rule 40 (tipos_datos -> SYMBOL .)
    DERPAREN        reduce using rule 40 (tipos_datos -> SYMBOL .)
    DOSPUNTOS       reduce using rule 40 (tipos_datos -> SYMBOL .)


state 73

    (24) comparacion -> VARIABLE . comparador VARIABLE
    (48) factor -> VARIABLE .
    (26) comparador -> . MAYORQUE
    (27) comparador -> . MENORQUE
    (28) comparador -> . MAYORIGUALQUE
    (29) comparador -> . MENORIGUALQUE
    (30) comparador -> . NOIGUALQUE

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUALQUE resolved as shift
  ! shift/reduce conflict for NOIGUALQUE resolved as shift
    MULT            reduce using rule 48 (factor -> VARIABLE .)
    DIV             reduce using rule 48 (factor -> VARIABLE .)
    MAS             reduce using rule 48 (factor -> VARIABLE .)
    MENOS           reduce using rule 48 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 48 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 48 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 48 (factor -> VARIABLE .)
    VAR             reduce using rule 48 (factor -> VARIABLE .)
    LET             reduce using rule 48 (factor -> VARIABLE .)
    CONST           reduce using rule 48 (factor -> VARIABLE .)
    IF              reduce using rule 48 (factor -> VARIABLE .)
    SWITCH          reduce using rule 48 (factor -> VARIABLE .)
    WHILE           reduce using rule 48 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 48 (factor -> VARIABLE .)
    NUMBER          reduce using rule 48 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 48 (factor -> VARIABLE .)
    $end            reduce using rule 48 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 48 (factor -> VARIABLE .)
    BREAK           reduce using rule 48 (factor -> VARIABLE .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38

  ! MAYORQUE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 48 (factor -> VARIABLE .) ]

    comparador                     shift and go to state 42

state 74

    (19) asignacion -> VARIABLE IGUAL comparacion . final_linea
    (51) final_linea -> . FINALDELINEA
    (52) final_linea -> . empty
    (53) empty -> .

    FINALDELINEA    shift and go to state 64
    VARIABLE        reduce using rule 53 (empty -> .)
    FUNCTION        reduce using rule 53 (empty -> .)
    VAR             reduce using rule 53 (empty -> .)
    LET             reduce using rule 53 (empty -> .)
    CONST           reduce using rule 53 (empty -> .)
    IF              reduce using rule 53 (empty -> .)
    SWITCH          reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    MAPLOWER        reduce using rule 53 (empty -> .)
    NUMBER          reduce using rule 53 (empty -> .)
    IZQPAREN        reduce using rule 53 (empty -> .)
    $end            reduce using rule 53 (empty -> .)
    DERLLAVE        reduce using rule 53 (empty -> .)
    BREAK           reduce using rule 53 (empty -> .)

    final_linea                    shift and go to state 92
    empty                          shift and go to state 65

state 75

    (20) asignacion -> VARIABLE IGUAL expresion . final_linea
    (25) comparacion -> expresion . comparador expresion
    (41) expresion -> expresion . MAS term
    (42) expresion -> expresion . MENOS term
    (51) final_linea -> . FINALDELINEA
    (52) final_linea -> . empty
    (26) comparador -> . MAYORQUE
    (27) comparador -> . MENORQUE
    (28) comparador -> . MAYORIGUALQUE
    (29) comparador -> . MENORIGUALQUE
    (30) comparador -> . NOIGUALQUE
    (53) empty -> .

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    FINALDELINEA    shift and go to state 64
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38
    VARIABLE        reduce using rule 53 (empty -> .)
    FUNCTION        reduce using rule 53 (empty -> .)
    VAR             reduce using rule 53 (empty -> .)
    LET             reduce using rule 53 (empty -> .)
    CONST           reduce using rule 53 (empty -> .)
    IF              reduce using rule 53 (empty -> .)
    SWITCH          reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    MAPLOWER        reduce using rule 53 (empty -> .)
    NUMBER          reduce using rule 53 (empty -> .)
    IZQPAREN        reduce using rule 53 (empty -> .)
    $end            reduce using rule 53 (empty -> .)
    DERLLAVE        reduce using rule 53 (empty -> .)
    BREAK           reduce using rule 53 (empty -> .)

    final_linea                    shift and go to state 93
    comparador                     shift and go to state 33
    empty                          shift and go to state 65

state 76

    (24) comparacion -> VARIABLE comparador VARIABLE .

    VARIABLE        reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    FUNCTION        reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    VAR             reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    LET             reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    CONST           reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    IF              reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    SWITCH          reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    WHILE           reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    MAPLOWER        reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    NUMBER          reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    IZQPAREN        reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    $end            reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    DERLLAVE        reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    FINALDELINEA    reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    BREAK           reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)
    DERPAREN        reduce using rule 24 (comparacion -> VARIABLE comparador VARIABLE .)


state 77

    (54) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 94
    DERPAREN        shift and go to state 95


state 78

    (50) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    WHILE           reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    FINALDELINEA    reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)
    BREAK           reduce using rule 50 (factor -> IZQPAREN expresion DERPAREN .)


state 79

    (44) term -> term MULT factor .

    MULT            reduce using rule 44 (term -> term MULT factor .)
    DIV             reduce using rule 44 (term -> term MULT factor .)
    MAS             reduce using rule 44 (term -> term MULT factor .)
    MENOS           reduce using rule 44 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 44 (term -> term MULT factor .)
    MENORQUE        reduce using rule 44 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 44 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 44 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 44 (term -> term MULT factor .)
    VARIABLE        reduce using rule 44 (term -> term MULT factor .)
    FUNCTION        reduce using rule 44 (term -> term MULT factor .)
    VAR             reduce using rule 44 (term -> term MULT factor .)
    LET             reduce using rule 44 (term -> term MULT factor .)
    CONST           reduce using rule 44 (term -> term MULT factor .)
    IF              reduce using rule 44 (term -> term MULT factor .)
    SWITCH          reduce using rule 44 (term -> term MULT factor .)
    WHILE           reduce using rule 44 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 44 (term -> term MULT factor .)
    NUMBER          reduce using rule 44 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 44 (term -> term MULT factor .)
    $end            reduce using rule 44 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 44 (term -> term MULT factor .)
    DERPAREN        reduce using rule 44 (term -> term MULT factor .)
    FINALDELINEA    reduce using rule 44 (term -> term MULT factor .)
    BREAK           reduce using rule 44 (term -> term MULT factor .)


state 80

    (45) term -> term MULT VARIABLE .
    (48) factor -> VARIABLE .

  ! reduce/reduce conflict for MULT resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAS resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAYORQUE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAYORIGUALQUE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENORIGUALQUE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for NOIGUALQUE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for LET resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for SWITCH resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DERPAREN resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for FINALDELINEA resolved using rule 45 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for BREAK resolved using rule 45 (term -> term MULT VARIABLE .)
    MULT            reduce using rule 45 (term -> term MULT VARIABLE .)
    DIV             reduce using rule 45 (term -> term MULT VARIABLE .)
    MAS             reduce using rule 45 (term -> term MULT VARIABLE .)
    MENOS           reduce using rule 45 (term -> term MULT VARIABLE .)
    MAYORQUE        reduce using rule 45 (term -> term MULT VARIABLE .)
    MENORQUE        reduce using rule 45 (term -> term MULT VARIABLE .)
    MAYORIGUALQUE   reduce using rule 45 (term -> term MULT VARIABLE .)
    MENORIGUALQUE   reduce using rule 45 (term -> term MULT VARIABLE .)
    NOIGUALQUE      reduce using rule 45 (term -> term MULT VARIABLE .)
    VARIABLE        reduce using rule 45 (term -> term MULT VARIABLE .)
    FUNCTION        reduce using rule 45 (term -> term MULT VARIABLE .)
    VAR             reduce using rule 45 (term -> term MULT VARIABLE .)
    LET             reduce using rule 45 (term -> term MULT VARIABLE .)
    CONST           reduce using rule 45 (term -> term MULT VARIABLE .)
    IF              reduce using rule 45 (term -> term MULT VARIABLE .)
    SWITCH          reduce using rule 45 (term -> term MULT VARIABLE .)
    WHILE           reduce using rule 45 (term -> term MULT VARIABLE .)
    MAPLOWER        reduce using rule 45 (term -> term MULT VARIABLE .)
    NUMBER          reduce using rule 45 (term -> term MULT VARIABLE .)
    IZQPAREN        reduce using rule 45 (term -> term MULT VARIABLE .)
    $end            reduce using rule 45 (term -> term MULT VARIABLE .)
    DERLLAVE        reduce using rule 45 (term -> term MULT VARIABLE .)
    DERPAREN        reduce using rule 45 (term -> term MULT VARIABLE .)
    FINALDELINEA    reduce using rule 45 (term -> term MULT VARIABLE .)
    BREAK           reduce using rule 45 (term -> term MULT VARIABLE .)

  ! MULT            [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! DIV             [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MAS             [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MENOS           [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MAYORQUE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! FUNCTION        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! VAR             [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! LET             [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! CONST           [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! IF              [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! SWITCH          [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! MAPLOWER        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! IZQPAREN        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! $end            [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! DERLLAVE        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! DERPAREN        [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! FINALDELINEA    [ reduce using rule 48 (factor -> VARIABLE .) ]
  ! BREAK           [ reduce using rule 48 (factor -> VARIABLE .) ]


state 81

    (46) term -> term DIV factor .

    MULT            reduce using rule 46 (term -> term DIV factor .)
    DIV             reduce using rule 46 (term -> term DIV factor .)
    MAS             reduce using rule 46 (term -> term DIV factor .)
    MENOS           reduce using rule 46 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 46 (term -> term DIV factor .)
    MENORQUE        reduce using rule 46 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 46 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 46 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 46 (term -> term DIV factor .)
    VARIABLE        reduce using rule 46 (term -> term DIV factor .)
    FUNCTION        reduce using rule 46 (term -> term DIV factor .)
    VAR             reduce using rule 46 (term -> term DIV factor .)
    LET             reduce using rule 46 (term -> term DIV factor .)
    CONST           reduce using rule 46 (term -> term DIV factor .)
    IF              reduce using rule 46 (term -> term DIV factor .)
    SWITCH          reduce using rule 46 (term -> term DIV factor .)
    WHILE           reduce using rule 46 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 46 (term -> term DIV factor .)
    NUMBER          reduce using rule 46 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 46 (term -> term DIV factor .)
    $end            reduce using rule 46 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 46 (term -> term DIV factor .)
    DERPAREN        reduce using rule 46 (term -> term DIV factor .)
    FINALDELINEA    reduce using rule 46 (term -> term DIV factor .)
    BREAK           reduce using rule 46 (term -> term DIV factor .)


state 82

    (65) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (93) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (94) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (87) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    IZQCORCHETE     shift and go to state 97
    NEW             shift and go to state 98
    VARIABLE        shift and go to state 96


state 83

    (70) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (91) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (92) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IZQCORCHETE     shift and go to state 99
    NEW             shift and go to state 100


state 84

    (95) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (96) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    NEW             shift and go to state 101


state 85

    (56) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 102


state 86

    (25) comparacion -> expresion . comparador expresion
    (41) expresion -> expresion . MAS term
    (42) expresion -> expresion . MENOS term
    (26) comparador -> . MAYORQUE
    (27) comparador -> . MENORQUE
    (28) comparador -> . MAYORIGUALQUE
    (29) comparador -> . MENORIGUALQUE
    (30) comparador -> . NOIGUALQUE

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38

    comparador                     shift and go to state 33

state 87

    (59) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 103


state 88

    (64) while -> WHILE IZQPAREN comparacion . DERPAREN IZQLLAVE expresion DERLLAVE

    DERPAREN        shift and go to state 104


state 89

    (97) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 105


state 90

    (17) declaracion -> declarador VARIABLE operadoresAsig tipos_datos . final_linea
    (51) final_linea -> . FINALDELINEA
    (52) final_linea -> . empty
    (53) empty -> .

    FINALDELINEA    shift and go to state 64
    VARIABLE        reduce using rule 53 (empty -> .)
    FUNCTION        reduce using rule 53 (empty -> .)
    VAR             reduce using rule 53 (empty -> .)
    LET             reduce using rule 53 (empty -> .)
    CONST           reduce using rule 53 (empty -> .)
    IF              reduce using rule 53 (empty -> .)
    SWITCH          reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    MAPLOWER        reduce using rule 53 (empty -> .)
    NUMBER          reduce using rule 53 (empty -> .)
    IZQPAREN        reduce using rule 53 (empty -> .)
    $end            reduce using rule 53 (empty -> .)
    DERLLAVE        reduce using rule 53 (empty -> .)

    final_linea                    shift and go to state 106
    empty                          shift and go to state 65

state 91

    (18) asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .

    VARIABLE        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    FUNCTION        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    VAR             reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    LET             reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    CONST           reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    IF              reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    SWITCH          reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    WHILE           reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    MAPLOWER        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    NUMBER          reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    IZQPAREN        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    $end            reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    DERLLAVE        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)
    BREAK           reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipos_datos final_linea .)


state 92

    (19) asignacion -> VARIABLE IGUAL comparacion final_linea .

    VARIABLE        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    FUNCTION        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    VAR             reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    LET             reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    CONST           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    IF              reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    SWITCH          reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    WHILE           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    MAPLOWER        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    NUMBER          reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    IZQPAREN        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    $end            reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    DERLLAVE        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    BREAK           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)


state 93

    (20) asignacion -> VARIABLE IGUAL expresion final_linea .

    VARIABLE        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    FUNCTION        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    VAR             reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    LET             reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    CONST           reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    IF              reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    SWITCH          reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    WHILE           reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    MAPLOWER        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    NUMBER          reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    IZQPAREN        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    $end            reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    DERLLAVE        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    BREAK           reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)


state 94

    (54) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 107


state 95

    (55) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 108


state 96

    (87) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN
    (89) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN

    PUNTO           shift and go to state 109


state 97

    (65) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (69) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (75) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (79) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (85) lista -> . lista COMA lista
    (86) lista -> . tipos_datos
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 111
    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    lista                          shift and go to state 110
    tipos_datos                    shift and go to state 112

state 98

    (66) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (76) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (77) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (93) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (94) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    ARRAY           shift and go to state 113
    MAP             shift and go to state 114


state 99

    (70) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (74) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (80) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (84) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (85) lista -> . lista COMA lista
    (86) lista -> . tipos_datos
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 116
    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    lista                          shift and go to state 115
    tipos_datos                    shift and go to state 112

state 100

    (71) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (82) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (91) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (92) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    ARRAY           shift and go to state 117
    MAP             shift and go to state 118


state 101

    (95) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (96) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 119


state 102

    (56) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (57) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (58) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 120


state 103

    (59) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 121


state 104

    (64) while -> WHILE IZQPAREN comparacion DERPAREN . IZQLLAVE expresion DERLLAVE

    IZQLLAVE        shift and go to state 122


state 105

    (97) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    tipos_datos                    shift and go to state 123

state 106

    (17) declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .

    VARIABLE        reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    FUNCTION        reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    VAR             reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    LET             reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    CONST           reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    IF              reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    SWITCH          reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    WHILE           reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    MAPLOWER        reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    NUMBER          reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    IZQPAREN        reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    $end            reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)
    DERLLAVE        reduce using rule 17 (declaracion -> declarador VARIABLE operadoresAsig tipos_datos final_linea .)


state 107

    (54) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 124


state 108

    (55) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadoresAsig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (54) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (65) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (70) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (80) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (93) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (95) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (59) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (87) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (97) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 125
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 109

    (87) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN
    (89) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN

    POP             shift and go to state 126
    PUSH            shift and go to state 127


state 110

    (65) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (75) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (85) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 128
    COMA            shift and go to state 129


state 111

    (69) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (79) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 130
    VARIABLE        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VAR             reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 112

    (86) lista -> tipos_datos .

    DERCORCHETE     reduce using rule 86 (lista -> tipos_datos .)
    COMA            reduce using rule 86 (lista -> tipos_datos .)
    DERPAREN        reduce using rule 86 (lista -> tipos_datos .)


state 113

    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (76) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (77) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 131


state 114

    (93) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (94) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 132


state 115

    (70) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (80) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (85) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 133
    COMA            shift and go to state 129


state 116

    (74) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (84) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 134
    VARIABLE        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VAR             reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 117

    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (82) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 135


state 118

    (91) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (92) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 136


state 119

    (95) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (96) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 137


state 120

    (56) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (57) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (58) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadoresAsig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (54) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (65) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (70) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (80) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (93) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (95) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (59) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (87) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (97) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 7
    js                             shift and go to state 138
    if                             shift and go to state 10
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 121

    (59) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (62) ncasos -> . casos
    (63) ncasos -> . casos ncasos
    (60) casos -> . CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (61) casos -> . CASE tipos_datos DOSPUNTOS

    CASE            shift and go to state 141

    ncasos                         shift and go to state 139
    casos                          shift and go to state 140

state 122

    (64) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE . expresion DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 49
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 142
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 123

    (97) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos . COMA tipos_datos DERPAREN
    (98) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos . COMA tipos_datos DERPAREN FINALDELINEA

    COMA            shift and go to state 143


state 124

    (54) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadoresAsig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (54) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (65) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (70) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (80) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (93) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (95) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (59) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (87) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (97) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 144
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 125

    (55) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 145


state 126

    (87) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN

    IZQPAREN        shift and go to state 146


state 127

    (89) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 147


state 128

    (65) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (75) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 148
    VARIABLE        reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 75 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 129

    (85) lista -> lista COMA . lista
    (85) lista -> . lista COMA lista
    (86) lista -> . tipos_datos
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    lista                          shift and go to state 149
    tipos_datos                    shift and go to state 112

state 130

    (69) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 69 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 131

    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (76) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (77) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (85) lista -> . lista COMA lista
    (86) lista -> . tipos_datos
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 150
    NUMBER          shift and go to state 151
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    lista                          shift and go to state 152
    tipos_datos                    shift and go to state 112

state 132

    (93) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (94) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 153


state 133

    (70) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (80) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 154
    VARIABLE        reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 80 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 134

    (74) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 74 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 135

    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (81) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (82) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (85) lista -> . lista COMA lista
    (86) lista -> . tipos_datos
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 155
    NUMBER          shift and go to state 156
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    lista                          shift and go to state 157
    tipos_datos                    shift and go to state 112

state 136

    (91) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (92) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 158


state 137

    (95) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (96) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 159


state 138

    (56) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (57) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (58) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 160


state 139

    (59) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 161


state 140

    (62) ncasos -> casos .
    (63) ncasos -> casos . ncasos
    (62) ncasos -> . casos
    (63) ncasos -> . casos ncasos
    (60) casos -> . CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (61) casos -> . CASE tipos_datos DOSPUNTOS

    DEFAULT         reduce using rule 62 (ncasos -> casos .)
    CASE            shift and go to state 141

    casos                          shift and go to state 140
    ncasos                         shift and go to state 162

state 141

    (60) casos -> CASE . tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (61) casos -> CASE . tipos_datos DOSPUNTOS
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    tipos_datos                    shift and go to state 163

state 142

    (64) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion . DERLLAVE
    (41) expresion -> expresion . MAS term
    (42) expresion -> expresion . MENOS term

    DERLLAVE        shift and go to state 164
    MAS             shift and go to state 31
    MENOS           shift and go to state 32


state 143

    (97) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA . tipos_datos DERPAREN
    (98) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA . tipos_datos DERPAREN FINALDELINEA
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    tipos_datos                    shift and go to state 165

state 144

    (54) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 166


state 145

    (55) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 55 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 146

    (87) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA
    (88) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN

    DERPAREN        shift and go to state 167


state 147

    (89) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN
    (85) lista -> . lista COMA lista
    (86) lista -> . tipos_datos
    (36) tipos_datos -> . NUMBER
    (37) tipos_datos -> . STRING
    (38) tipos_datos -> . BOOLEAN
    (39) tipos_datos -> . BIGINT
    (40) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 68
    STRING          shift and go to state 69
    BOOLEAN         shift and go to state 70
    BIGINT          shift and go to state 71
    SYMBOL          shift and go to state 72

    lista                          shift and go to state 168
    tipos_datos                    shift and go to state 112

state 148

    (65) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 149

    (85) lista -> lista COMA lista .
    (85) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 85 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 85 (lista -> lista COMA lista .)
    COMA            shift and go to state 129

  ! COMA            [ reduce using rule 85 (lista -> lista COMA lista .) ]


state 150

    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (76) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 169
    VARIABLE        reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VAR             reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 76 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 151

    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (77) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (36) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 170
    COMA            reduce using rule 36 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 36 (tipos_datos -> NUMBER .) ]


state 152

    (68) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (85) lista -> lista . COMA lista

    DERPAREN        shift and go to state 171
    COMA            shift and go to state 129


state 153

    (93) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (94) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 93 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 172


state 154

    (70) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 155

    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (81) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 173
    VARIABLE        reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VAR             reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 81 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 156

    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (82) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (36) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 174
    COMA            reduce using rule 36 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 36 (tipos_datos -> NUMBER .) ]


state 157

    (73) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (85) lista -> lista . COMA lista

    DERPAREN        shift and go to state 175
    COMA            shift and go to state 129


state 158

    (91) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (92) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 91 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 176


state 159

    (95) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (96) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 95 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 177


state 160

    (56) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (57) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (58) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VARIABLE        reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 179
    IF              shift and go to state 25

  ! IF              [ reduce using rule 56 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 178

state 161

    (59) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 180


state 162

    (63) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 63 (ncasos -> casos ncasos .)


state 163

    (60) casos -> CASE tipos_datos . DOSPUNTOS asignacion BREAK FINALDELINEA
    (61) casos -> CASE tipos_datos . DOSPUNTOS

    DOSPUNTOS       shift and go to state 181


state 164

    (64) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .

    VARIABLE        reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    FUNCTION        reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    VAR             reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    LET             reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    CONST           reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    IF              reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    SWITCH          reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    WHILE           reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    MAPLOWER        reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    NUMBER          reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    IZQPAREN        reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    $end            reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    DERLLAVE        reduce using rule 64 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)


state 165

    (97) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos . DERPAREN
    (98) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 182


state 166

    (54) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 54 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 167

    (87) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA
    (88) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 183
    VARIABLE        reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    VAR             reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    LET             reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    CONST           reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IF              reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    $end            reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 88 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)


state 168

    (89) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN
    (85) lista -> lista . COMA lista

    DERPAREN        shift and go to state 184
    COMA            shift and go to state 129


state 169

    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 170

    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (77) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 185
    VARIABLE        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VAR             reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 171

    (68) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 186
    VARIABLE        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 172

    (94) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 94 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 173

    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 174

    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (82) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 187
    VARIABLE        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VAR             reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 175

    (73) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 188
    VARIABLE        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 176

    (92) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 92 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 177

    (96) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 96 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 178

    (57) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VARIABLE        reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VAR             reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    WHILE           reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 57 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 179

    (58) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 189


state 180

    (59) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadoresAsig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (54) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (65) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (70) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (80) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (93) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (95) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (59) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (87) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (97) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 190
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 181

    (60) casos -> CASE tipos_datos DOSPUNTOS . asignacion BREAK FINALDELINEA
    (61) casos -> CASE tipos_datos DOSPUNTOS .
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea

    CASE            reduce using rule 61 (casos -> CASE tipos_datos DOSPUNTOS .)
    DEFAULT         reduce using rule 61 (casos -> CASE tipos_datos DOSPUNTOS .)
    VARIABLE        shift and go to state 192

    asignacion                     shift and go to state 191

state 182

    (97) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .
    (98) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    FUNCTION        reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    VAR             reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    LET             reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    CONST           reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    IF              reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    SWITCH          reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    WHILE           reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    MAPLOWER        reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    NUMBER          reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    IZQPAREN        reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    $end            reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    DERLLAVE        reduce using rule 97 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    FINALDELINEA    shift and go to state 193


state 183

    (87) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 87 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 184

    (89) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA
    (90) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 194
    VARIABLE        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    LET             reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IF              reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    $end            reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 90 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)


state 185

    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VAR             reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 186

    (68) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 187

    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VAR             reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 188

    (73) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 189

    (58) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadoresAsig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadoresAsig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (54) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (55) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (41) expresion -> . expresion MAS term
    (42) expresion -> . expresion MENOS term
    (43) expresion -> . term
    (24) comparacion -> . VARIABLE comparador VARIABLE
    (25) comparacion -> . expresion comparador expresion
    (65) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (68) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (69) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (70) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (76) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (77) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (79) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (80) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (91) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (92) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (93) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (94) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (95) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (96) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (56) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (57) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (58) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (59) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (87) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (88) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (89) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (90) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (97) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (98) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (44) term -> . term MULT factor
    (45) term -> . term MULT VARIABLE
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . VARIABLE
    (49) factor -> . NUMBER
    (50) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 7
    js                             shift and go to state 195
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 190

    (59) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 196


state 191

    (60) casos -> CASE tipos_datos DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 197


state 192

    (18) asignacion -> VARIABLE . operadoresAsig tipos_datos final_linea
    (19) asignacion -> VARIABLE . IGUAL comparacion final_linea
    (20) asignacion -> VARIABLE . IGUAL expresion final_linea
    (31) operadoresAsig -> . IGUAL
    (32) operadoresAsig -> . MASIGUAL
    (33) operadoresAsig -> . MENOSIGUAL
    (34) operadoresAsig -> . DIVIGUAL
    (35) operadoresAsig -> . MODIGUAL

    IGUAL           shift and go to state 41
    MASIGUAL        shift and go to state 43
    MENOSIGUAL      shift and go to state 44
    DIVIGUAL        shift and go to state 45
    MODIGUAL        shift and go to state 46

    operadoresAsig                 shift and go to state 40

state 193

    (98) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    VAR             reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    LET             reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    CONST           reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    IF              reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    $end            reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 98 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)


state 194

    (89) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 89 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 195

    (58) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 198


state 196

    (59) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VARIABLE        reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VAR             reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    WHILE           reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 59 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 197

    (60) casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 199


state 198

    (58) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 58 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 199

    (60) casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 60 (casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 60 (casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYORQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUALQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for MENORIGUALQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for NOIGUALQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 21 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 23 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 24 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 41 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUALQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for MENORIGUALQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for NOIGUALQUE in state 73 resolved as shift
WARNING: shift/reduce conflict for COMA in state 149 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 151 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 156 resolved as shift
WARNING: shift/reduce conflict for IF in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 80 resolved using rule (term -> term MULT VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 80
