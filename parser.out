Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BOOL
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FLOTANTE
    FOR
    GET
    IGUALIGUAL
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    MULTIGUAL
    NULL
    NUMERO
    OR
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SUPER
    UNDEFINED
    VOID
    WHILE

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracionVarSinAsig
Rule 4     instrucciones -> asignacion
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> arreglo
Rule 9     instrucciones -> map
Rule 10    instrucciones -> if
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> pop
Rule 13    instrucciones -> push
Rule 14    instrucciones -> mapSet
Rule 15    declaracionVarSinAsig -> declarador VARIABLE
Rule 16    declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA
Rule 17    asignacion -> VARIABLE operadoresAsig tipoDato
Rule 18    asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA
Rule 19    declarador -> VAR
Rule 20    declarador -> LET
Rule 21    declarador -> CONST
Rule 22    operadoresAsig -> IGUAL
Rule 23    operadoresAsig -> MASIGUAL
Rule 24    operadoresAsig -> MENOSIGUAL
Rule 25    operadoresAsig -> DIVIGUAL
Rule 26    operadoresAsig -> MODIGUAL
Rule 27    tipoDato -> NUMBER
Rule 28    tipoDato -> STRING
Rule 29    tipoDato -> BOOLEAN
Rule 30    tipoDato -> BIGINT
Rule 31    tipoDato -> SYMBOL
Rule 32    empty -> <empty>
Rule 33    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 34    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 35    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 36    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 37    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 38    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 39    casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 40    casos -> CASE tipoDato DOSPUNTOS
Rule 41    ncasos -> casos
Rule 42    ncasos -> casos ncasos
Rule 43    comparacion -> VARIABLE comparador VARIABLE
Rule 44    comparacion -> expresion comparador expresion
Rule 45    comparador -> MAYORQUE
Rule 46    comparador -> MENORQUE
Rule 47    comparador -> MAYORIGUALQUE
Rule 48    comparador -> MENORIGUALQUE
Rule 49    comparador -> NOIGUALQUE
Rule 50    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 51    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 52    lista -> lista COMA lista
Rule 53    lista -> STRING
Rule 54    lista -> SYMBOL
Rule 55    lista -> NUMBER
Rule 56    lista -> BIGINT
Rule 57    lista -> BOOLEAN
Rule 58    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 59    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 60    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 61    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 62    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 63    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 64    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 65    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 66    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
Rule 67    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
Rule 68    expresion -> expresion MAS term
Rule 69    expresion -> expresion MENOS term
Rule 70    expresion -> term
Rule 71    term -> term MULT factor
Rule 72    term -> term DIV factor
Rule 73    term -> factor
Rule 74    factor -> NUMBER
Rule 75    factor -> IZQPAREN expresion DERPAREN

Terminals, with rules where they appear

AND                  : 
AWAIT                : 
BIGINT               : 30 56
BOOL                 : 
BOOLEAN              : 29 57
BREAK                : 39
CASE                 : 39 40
CATCH                : 
CLASS                : 
COMA                 : 52 66 67
CONST                : 21 64 65
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 38
DELETE               : 
DERCORCHETE          : 50 51
DERLLAVE             : 33 34 35 36 37 37 38
DERPAREN             : 33 34 35 36 37 38 58 59 60 61 62 63 64 65 66 67 75
DIV                  : 72
DIVIGUAL             : 25
DO                   : 
DOSPUNTOS            : 38 39 40
ELSE                 : 37
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 16 18 39 58 59 61 63 65 67
FLOTANTE             : 
FOR                  : 
FUNCTION             : 33 34
GET                  : 
IF                   : 35 36 37
IGUAL                : 22 50 51 58 59 60 61 62 63 64 65
IGUALIGUAL           : 
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 50 51
IZQLLAVE             : 33 34 35 36 37 37 38
IZQPAREN             : 33 34 35 36 37 38 58 59 60 61 62 63 64 65 66 67 75
LET                  : 20 51 60 61
MAP                  : 60 61 62 63 64 65
MAPLOWER             : 66 67
MAS                  : 68
MASIGUAL             : 23
MAYORIGUALQUE        : 47
MAYORQUE             : 45
MENORIGUALQUE        : 48
MENORQUE             : 46
MENOS                : 69
MENOSIGUAL           : 24
MODIGUAL             : 26
MULT                 : 71
MULTIGUAL            : 
NEW                  : 60 61 62 63 64 65
NOIGUALQUE           : 49
NULL                 : 
NUMBER               : 27 55 74
NUMERO               : 
OR                   : 
PACKAGE              : 
POP                  : 58
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 58 59 66 67
PUSH                 : 59
RETURN               : 
SET                  : 66 67
STRING               : 28 53
SUPER                : 
SWITCH               : 38
SYMBOL               : 31 54
UNDEFINED            : 
VAR                  : 19 50 58 59 62 63
VARIABLE             : 15 16 17 18 33 33 34 38 43 43 50 51 58 58 59 59 60 61 62 63 64 65
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 4 39
casos                : 41 42
comparacion          : 7 35 36 37
comparador           : 43 44
declaracionVarSinAsig : 3
declarador           : 15 16
empty                : 
expresion            : 6 44 44 68 69 75
factor               : 71 72 73
funcion              : 5
if                   : 10 36
instrucciones        : 1 2
js                   : 2 33 34 35 36 37 37 38 0
lista                : 50 51 52 52 59
map                  : 9
mapSet               : 14
ncasos               : 38 42
operadoresAsig       : 17 18
pop                  : 12
push                 : 13
switch               : 11
term                 : 68 69 70 71 72
tipoDato             : 17 18 39 40 66 66 67 67

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (33) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (50) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (51) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (62) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (64) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (38) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (58) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (66) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (19) declarador -> . VAR
    (20) declarador -> . LET
    (21) declarador -> . CONST
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 21
    CONST           shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (33) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (50) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (51) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (62) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (64) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (38) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (58) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (66) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (19) declarador -> . VAR
    (20) declarador -> . LET
    (21) declarador -> . CONST
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 21
    CONST           shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    instrucciones                  shift and go to state 2
    js                             shift and go to state 28
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 3

    (3) instrucciones -> declaracionVarSinAsig .

    VARIABLE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    VAR             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    LET             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    CONST           reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IF              reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    $end            reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)


state 4

    (4) instrucciones -> asignacion .

    VARIABLE        reduce using rule 4 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion .)
    VAR             reduce using rule 4 (instrucciones -> asignacion .)
    LET             reduce using rule 4 (instrucciones -> asignacion .)
    CONST           reduce using rule 4 (instrucciones -> asignacion .)
    IF              reduce using rule 4 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion .)
    $end            reduce using rule 4 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion .)


state 5

    (5) instrucciones -> funcion .

    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion .
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term
    (44) comparacion -> expresion . comparador expresion
    (45) comparador -> . MAYORQUE
    (46) comparador -> . MENORQUE
    (47) comparador -> . MAYORIGUALQUE
    (48) comparador -> . MENORIGUALQUE
    (49) comparador -> . NOIGUALQUE

    VARIABLE        reduce using rule 6 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion .)
    VAR             reduce using rule 6 (instrucciones -> expresion .)
    LET             reduce using rule 6 (instrucciones -> expresion .)
    CONST           reduce using rule 6 (instrucciones -> expresion .)
    IF              reduce using rule 6 (instrucciones -> expresion .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion .)
    $end            reduce using rule 6 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion .)
    MAS             shift and go to state 29
    MENOS           shift and go to state 30
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 31

state 7

    (7) instrucciones -> comparacion .

    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> arreglo .

    VARIABLE        reduce using rule 8 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 8 (instrucciones -> arreglo .)
    VAR             reduce using rule 8 (instrucciones -> arreglo .)
    LET             reduce using rule 8 (instrucciones -> arreglo .)
    CONST           reduce using rule 8 (instrucciones -> arreglo .)
    IF              reduce using rule 8 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 8 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 8 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 8 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 8 (instrucciones -> arreglo .)
    $end            reduce using rule 8 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 8 (instrucciones -> arreglo .)


state 9

    (9) instrucciones -> map .

    VARIABLE        reduce using rule 9 (instrucciones -> map .)
    FUNCTION        reduce using rule 9 (instrucciones -> map .)
    VAR             reduce using rule 9 (instrucciones -> map .)
    LET             reduce using rule 9 (instrucciones -> map .)
    CONST           reduce using rule 9 (instrucciones -> map .)
    IF              reduce using rule 9 (instrucciones -> map .)
    SWITCH          reduce using rule 9 (instrucciones -> map .)
    MAPLOWER        reduce using rule 9 (instrucciones -> map .)
    NUMBER          reduce using rule 9 (instrucciones -> map .)
    IZQPAREN        reduce using rule 9 (instrucciones -> map .)
    $end            reduce using rule 9 (instrucciones -> map .)
    DERLLAVE        reduce using rule 9 (instrucciones -> map .)


state 10

    (10) instrucciones -> if .

    VARIABLE        reduce using rule 10 (instrucciones -> if .)
    FUNCTION        reduce using rule 10 (instrucciones -> if .)
    VAR             reduce using rule 10 (instrucciones -> if .)
    LET             reduce using rule 10 (instrucciones -> if .)
    CONST           reduce using rule 10 (instrucciones -> if .)
    IF              reduce using rule 10 (instrucciones -> if .)
    SWITCH          reduce using rule 10 (instrucciones -> if .)
    MAPLOWER        reduce using rule 10 (instrucciones -> if .)
    NUMBER          reduce using rule 10 (instrucciones -> if .)
    IZQPAREN        reduce using rule 10 (instrucciones -> if .)
    $end            reduce using rule 10 (instrucciones -> if .)
    DERLLAVE        reduce using rule 10 (instrucciones -> if .)


state 11

    (11) instrucciones -> switch .

    VARIABLE        reduce using rule 11 (instrucciones -> switch .)
    FUNCTION        reduce using rule 11 (instrucciones -> switch .)
    VAR             reduce using rule 11 (instrucciones -> switch .)
    LET             reduce using rule 11 (instrucciones -> switch .)
    CONST           reduce using rule 11 (instrucciones -> switch .)
    IF              reduce using rule 11 (instrucciones -> switch .)
    SWITCH          reduce using rule 11 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 11 (instrucciones -> switch .)
    NUMBER          reduce using rule 11 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 11 (instrucciones -> switch .)
    $end            reduce using rule 11 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 11 (instrucciones -> switch .)


state 12

    (12) instrucciones -> pop .

    VARIABLE        reduce using rule 12 (instrucciones -> pop .)
    FUNCTION        reduce using rule 12 (instrucciones -> pop .)
    VAR             reduce using rule 12 (instrucciones -> pop .)
    LET             reduce using rule 12 (instrucciones -> pop .)
    CONST           reduce using rule 12 (instrucciones -> pop .)
    IF              reduce using rule 12 (instrucciones -> pop .)
    SWITCH          reduce using rule 12 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 12 (instrucciones -> pop .)
    NUMBER          reduce using rule 12 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 12 (instrucciones -> pop .)
    $end            reduce using rule 12 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 12 (instrucciones -> pop .)


state 13

    (13) instrucciones -> push .

    VARIABLE        reduce using rule 13 (instrucciones -> push .)
    FUNCTION        reduce using rule 13 (instrucciones -> push .)
    VAR             reduce using rule 13 (instrucciones -> push .)
    LET             reduce using rule 13 (instrucciones -> push .)
    CONST           reduce using rule 13 (instrucciones -> push .)
    IF              reduce using rule 13 (instrucciones -> push .)
    SWITCH          reduce using rule 13 (instrucciones -> push .)
    MAPLOWER        reduce using rule 13 (instrucciones -> push .)
    NUMBER          reduce using rule 13 (instrucciones -> push .)
    IZQPAREN        reduce using rule 13 (instrucciones -> push .)
    $end            reduce using rule 13 (instrucciones -> push .)
    DERLLAVE        reduce using rule 13 (instrucciones -> push .)


state 14

    (14) instrucciones -> mapSet .

    VARIABLE        reduce using rule 14 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 14 (instrucciones -> mapSet .)
    VAR             reduce using rule 14 (instrucciones -> mapSet .)
    LET             reduce using rule 14 (instrucciones -> mapSet .)
    CONST           reduce using rule 14 (instrucciones -> mapSet .)
    IF              reduce using rule 14 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 14 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 14 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 14 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 14 (instrucciones -> mapSet .)
    $end            reduce using rule 14 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 14 (instrucciones -> mapSet .)


state 15

    (15) declaracionVarSinAsig -> declarador . VARIABLE
    (16) declaracionVarSinAsig -> declarador . VARIABLE FINALDELINEA

    VARIABLE        shift and go to state 37


state 16

    (17) asignacion -> VARIABLE . operadoresAsig tipoDato
    (18) asignacion -> VARIABLE . operadoresAsig tipoDato FINALDELINEA
    (43) comparacion -> VARIABLE . comparador VARIABLE
    (22) operadoresAsig -> . IGUAL
    (23) operadoresAsig -> . MASIGUAL
    (24) operadoresAsig -> . MENOSIGUAL
    (25) operadoresAsig -> . DIVIGUAL
    (26) operadoresAsig -> . MODIGUAL
    (45) comparador -> . MAYORQUE
    (46) comparador -> . MENORQUE
    (47) comparador -> . MAYORIGUALQUE
    (48) comparador -> . MENORIGUALQUE
    (49) comparador -> . NOIGUALQUE

    IGUAL           shift and go to state 40
    MASIGUAL        shift and go to state 41
    MENOSIGUAL      shift and go to state 42
    DIVIGUAL        shift and go to state 43
    MODIGUAL        shift and go to state 44
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    operadoresAsig                 shift and go to state 38
    comparador                     shift and go to state 39

state 17

    (33) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 45


state 18

    (75) factor -> IZQPAREN . expresion DERPAREN
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    expresion                      shift and go to state 46
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 19

    (70) expresion -> term .
    (71) term -> term . MULT factor
    (72) term -> term . DIV factor

    MAS             reduce using rule 70 (expresion -> term .)
    MENOS           reduce using rule 70 (expresion -> term .)
    MAYORQUE        reduce using rule 70 (expresion -> term .)
    MENORQUE        reduce using rule 70 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 70 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 70 (expresion -> term .)
    NOIGUALQUE      reduce using rule 70 (expresion -> term .)
    VARIABLE        reduce using rule 70 (expresion -> term .)
    FUNCTION        reduce using rule 70 (expresion -> term .)
    VAR             reduce using rule 70 (expresion -> term .)
    LET             reduce using rule 70 (expresion -> term .)
    CONST           reduce using rule 70 (expresion -> term .)
    IF              reduce using rule 70 (expresion -> term .)
    SWITCH          reduce using rule 70 (expresion -> term .)
    MAPLOWER        reduce using rule 70 (expresion -> term .)
    NUMBER          reduce using rule 70 (expresion -> term .)
    IZQPAREN        reduce using rule 70 (expresion -> term .)
    $end            reduce using rule 70 (expresion -> term .)
    DERLLAVE        reduce using rule 70 (expresion -> term .)
    DERPAREN        reduce using rule 70 (expresion -> term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 20

    (50) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (62) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (58) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (19) declarador -> VAR .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 49

  ! VARIABLE        [ reduce using rule 19 (declarador -> VAR .) ]


state 21

    (51) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (20) declarador -> LET .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 50

  ! VARIABLE        [ reduce using rule 20 (declarador -> LET .) ]


state 22

    (64) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (21) declarador -> CONST .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 51

  ! VARIABLE        [ reduce using rule 21 (declarador -> CONST .) ]


state 23

    (35) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 52


state 24

    (38) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 53


state 25

    (66) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    PUNTO           shift and go to state 54


state 26

    (73) term -> factor .

    MULT            reduce using rule 73 (term -> factor .)
    DIV             reduce using rule 73 (term -> factor .)
    MAS             reduce using rule 73 (term -> factor .)
    MENOS           reduce using rule 73 (term -> factor .)
    MAYORQUE        reduce using rule 73 (term -> factor .)
    MENORQUE        reduce using rule 73 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 73 (term -> factor .)
    MENORIGUALQUE   reduce using rule 73 (term -> factor .)
    NOIGUALQUE      reduce using rule 73 (term -> factor .)
    VARIABLE        reduce using rule 73 (term -> factor .)
    FUNCTION        reduce using rule 73 (term -> factor .)
    VAR             reduce using rule 73 (term -> factor .)
    LET             reduce using rule 73 (term -> factor .)
    CONST           reduce using rule 73 (term -> factor .)
    IF              reduce using rule 73 (term -> factor .)
    SWITCH          reduce using rule 73 (term -> factor .)
    MAPLOWER        reduce using rule 73 (term -> factor .)
    NUMBER          reduce using rule 73 (term -> factor .)
    IZQPAREN        reduce using rule 73 (term -> factor .)
    $end            reduce using rule 73 (term -> factor .)
    DERLLAVE        reduce using rule 73 (term -> factor .)
    DERPAREN        reduce using rule 73 (term -> factor .)


state 27

    (74) factor -> NUMBER .

    MULT            reduce using rule 74 (factor -> NUMBER .)
    DIV             reduce using rule 74 (factor -> NUMBER .)
    MAS             reduce using rule 74 (factor -> NUMBER .)
    MENOS           reduce using rule 74 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 74 (factor -> NUMBER .)
    MENORQUE        reduce using rule 74 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 74 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 74 (factor -> NUMBER .)
    NOIGUALQUE      reduce using rule 74 (factor -> NUMBER .)
    VARIABLE        reduce using rule 74 (factor -> NUMBER .)
    FUNCTION        reduce using rule 74 (factor -> NUMBER .)
    VAR             reduce using rule 74 (factor -> NUMBER .)
    LET             reduce using rule 74 (factor -> NUMBER .)
    CONST           reduce using rule 74 (factor -> NUMBER .)
    IF              reduce using rule 74 (factor -> NUMBER .)
    SWITCH          reduce using rule 74 (factor -> NUMBER .)
    MAPLOWER        reduce using rule 74 (factor -> NUMBER .)
    NUMBER          reduce using rule 74 (factor -> NUMBER .)
    IZQPAREN        reduce using rule 74 (factor -> NUMBER .)
    $end            reduce using rule 74 (factor -> NUMBER .)
    DERLLAVE        reduce using rule 74 (factor -> NUMBER .)
    DERPAREN        reduce using rule 74 (factor -> NUMBER .)


state 28

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 29

    (68) expresion -> expresion MAS . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    term                           shift and go to state 55
    factor                         shift and go to state 26

state 30

    (69) expresion -> expresion MENOS . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    term                           shift and go to state 56
    factor                         shift and go to state 26

state 31

    (44) comparacion -> expresion comparador . expresion
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    expresion                      shift and go to state 57
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 32

    (45) comparador -> MAYORQUE .

    NUMBER          reduce using rule 45 (comparador -> MAYORQUE .)
    IZQPAREN        reduce using rule 45 (comparador -> MAYORQUE .)
    VARIABLE        reduce using rule 45 (comparador -> MAYORQUE .)


state 33

    (46) comparador -> MENORQUE .

    NUMBER          reduce using rule 46 (comparador -> MENORQUE .)
    IZQPAREN        reduce using rule 46 (comparador -> MENORQUE .)
    VARIABLE        reduce using rule 46 (comparador -> MENORQUE .)


state 34

    (47) comparador -> MAYORIGUALQUE .

    NUMBER          reduce using rule 47 (comparador -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 47 (comparador -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 47 (comparador -> MAYORIGUALQUE .)


state 35

    (48) comparador -> MENORIGUALQUE .

    NUMBER          reduce using rule 48 (comparador -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 48 (comparador -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 48 (comparador -> MENORIGUALQUE .)


state 36

    (49) comparador -> NOIGUALQUE .

    NUMBER          reduce using rule 49 (comparador -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 49 (comparador -> NOIGUALQUE .)
    VARIABLE        reduce using rule 49 (comparador -> NOIGUALQUE .)


state 37

    (15) declaracionVarSinAsig -> declarador VARIABLE .
    (16) declaracionVarSinAsig -> declarador VARIABLE . FINALDELINEA

    VARIABLE        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    FUNCTION        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    VAR             reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    LET             reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    CONST           reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    IF              reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    SWITCH          reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    MAPLOWER        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    NUMBER          reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    IZQPAREN        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    $end            reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    DERLLAVE        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    FINALDELINEA    shift and go to state 58


state 38

    (17) asignacion -> VARIABLE operadoresAsig . tipoDato
    (18) asignacion -> VARIABLE operadoresAsig . tipoDato FINALDELINEA
    (27) tipoDato -> . NUMBER
    (28) tipoDato -> . STRING
    (29) tipoDato -> . BOOLEAN
    (30) tipoDato -> . BIGINT
    (31) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipoDato                       shift and go to state 59

state 39

    (43) comparacion -> VARIABLE comparador . VARIABLE

    VARIABLE        shift and go to state 65


state 40

    (22) operadoresAsig -> IGUAL .

    NUMBER          reduce using rule 22 (operadoresAsig -> IGUAL .)
    STRING          reduce using rule 22 (operadoresAsig -> IGUAL .)
    BOOLEAN         reduce using rule 22 (operadoresAsig -> IGUAL .)
    BIGINT          reduce using rule 22 (operadoresAsig -> IGUAL .)
    SYMBOL          reduce using rule 22 (operadoresAsig -> IGUAL .)


state 41

    (23) operadoresAsig -> MASIGUAL .

    NUMBER          reduce using rule 23 (operadoresAsig -> MASIGUAL .)
    STRING          reduce using rule 23 (operadoresAsig -> MASIGUAL .)
    BOOLEAN         reduce using rule 23 (operadoresAsig -> MASIGUAL .)
    BIGINT          reduce using rule 23 (operadoresAsig -> MASIGUAL .)
    SYMBOL          reduce using rule 23 (operadoresAsig -> MASIGUAL .)


state 42

    (24) operadoresAsig -> MENOSIGUAL .

    NUMBER          reduce using rule 24 (operadoresAsig -> MENOSIGUAL .)
    STRING          reduce using rule 24 (operadoresAsig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 24 (operadoresAsig -> MENOSIGUAL .)
    BIGINT          reduce using rule 24 (operadoresAsig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 24 (operadoresAsig -> MENOSIGUAL .)


state 43

    (25) operadoresAsig -> DIVIGUAL .

    NUMBER          reduce using rule 25 (operadoresAsig -> DIVIGUAL .)
    STRING          reduce using rule 25 (operadoresAsig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 25 (operadoresAsig -> DIVIGUAL .)
    BIGINT          reduce using rule 25 (operadoresAsig -> DIVIGUAL .)
    SYMBOL          reduce using rule 25 (operadoresAsig -> DIVIGUAL .)


state 44

    (26) operadoresAsig -> MODIGUAL .

    NUMBER          reduce using rule 26 (operadoresAsig -> MODIGUAL .)
    STRING          reduce using rule 26 (operadoresAsig -> MODIGUAL .)
    BOOLEAN         reduce using rule 26 (operadoresAsig -> MODIGUAL .)
    BIGINT          reduce using rule 26 (operadoresAsig -> MODIGUAL .)
    SYMBOL          reduce using rule 26 (operadoresAsig -> MODIGUAL .)


state 45

    (33) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 66


state 46

    (75) factor -> IZQPAREN expresion . DERPAREN
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 67
    MAS             shift and go to state 29
    MENOS           shift and go to state 30


state 47

    (71) term -> term MULT . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    factor                         shift and go to state 68

state 48

    (72) term -> term DIV . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    factor                         shift and go to state 69

state 49

    (50) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (62) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (58) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    IGUAL           shift and go to state 70


state 50

    (51) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 71


state 51

    (64) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 72


state 52

    (35) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 74
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    comparacion                    shift and go to state 73
    expresion                      shift and go to state 75
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 53

    (38) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 76


state 54

    (66) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    SET             shift and go to state 77


state 55

    (68) expresion -> expresion MAS term .
    (71) term -> term . MULT factor
    (72) term -> term . DIV factor

    MAS             reduce using rule 68 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 68 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 68 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 68 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 68 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 68 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 68 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 68 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 68 (expresion -> expresion MAS term .)
    VAR             reduce using rule 68 (expresion -> expresion MAS term .)
    LET             reduce using rule 68 (expresion -> expresion MAS term .)
    CONST           reduce using rule 68 (expresion -> expresion MAS term .)
    IF              reduce using rule 68 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 68 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 68 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 68 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 68 (expresion -> expresion MAS term .)
    $end            reduce using rule 68 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 68 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 68 (expresion -> expresion MAS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 56

    (69) expresion -> expresion MENOS term .
    (71) term -> term . MULT factor
    (72) term -> term . DIV factor

    MAS             reduce using rule 69 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 69 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 69 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 69 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 69 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 69 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 69 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 69 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 69 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 69 (expresion -> expresion MENOS term .)
    LET             reduce using rule 69 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 69 (expresion -> expresion MENOS term .)
    IF              reduce using rule 69 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 69 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 69 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 69 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 69 (expresion -> expresion MENOS term .)
    $end            reduce using rule 69 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 69 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 69 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 57

    (44) comparacion -> expresion comparador expresion .
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term

    VARIABLE        reduce using rule 44 (comparacion -> expresion comparador expresion .)
    FUNCTION        reduce using rule 44 (comparacion -> expresion comparador expresion .)
    VAR             reduce using rule 44 (comparacion -> expresion comparador expresion .)
    LET             reduce using rule 44 (comparacion -> expresion comparador expresion .)
    CONST           reduce using rule 44 (comparacion -> expresion comparador expresion .)
    IF              reduce using rule 44 (comparacion -> expresion comparador expresion .)
    SWITCH          reduce using rule 44 (comparacion -> expresion comparador expresion .)
    MAPLOWER        reduce using rule 44 (comparacion -> expresion comparador expresion .)
    NUMBER          reduce using rule 44 (comparacion -> expresion comparador expresion .)
    IZQPAREN        reduce using rule 44 (comparacion -> expresion comparador expresion .)
    $end            reduce using rule 44 (comparacion -> expresion comparador expresion .)
    DERLLAVE        reduce using rule 44 (comparacion -> expresion comparador expresion .)
    DERPAREN        reduce using rule 44 (comparacion -> expresion comparador expresion .)
    MAS             shift and go to state 29
    MENOS           shift and go to state 30


state 58

    (16) declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .

    VARIABLE        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    VAR             reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    LET             reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    CONST           reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    IF              reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    MAPLOWER        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    $end            reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)


state 59

    (17) asignacion -> VARIABLE operadoresAsig tipoDato .
    (18) asignacion -> VARIABLE operadoresAsig tipoDato . FINALDELINEA

    VARIABLE        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    FUNCTION        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    VAR             reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    LET             reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    CONST           reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    IF              reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    SWITCH          reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    MAPLOWER        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    NUMBER          reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    IZQPAREN        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    $end            reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    DERLLAVE        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    BREAK           reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    FINALDELINEA    shift and go to state 78


state 60

    (27) tipoDato -> NUMBER .

    FINALDELINEA    reduce using rule 27 (tipoDato -> NUMBER .)
    VARIABLE        reduce using rule 27 (tipoDato -> NUMBER .)
    FUNCTION        reduce using rule 27 (tipoDato -> NUMBER .)
    VAR             reduce using rule 27 (tipoDato -> NUMBER .)
    LET             reduce using rule 27 (tipoDato -> NUMBER .)
    CONST           reduce using rule 27 (tipoDato -> NUMBER .)
    IF              reduce using rule 27 (tipoDato -> NUMBER .)
    SWITCH          reduce using rule 27 (tipoDato -> NUMBER .)
    MAPLOWER        reduce using rule 27 (tipoDato -> NUMBER .)
    NUMBER          reduce using rule 27 (tipoDato -> NUMBER .)
    IZQPAREN        reduce using rule 27 (tipoDato -> NUMBER .)
    $end            reduce using rule 27 (tipoDato -> NUMBER .)
    DERLLAVE        reduce using rule 27 (tipoDato -> NUMBER .)
    BREAK           reduce using rule 27 (tipoDato -> NUMBER .)
    COMA            reduce using rule 27 (tipoDato -> NUMBER .)
    DOSPUNTOS       reduce using rule 27 (tipoDato -> NUMBER .)
    DERPAREN        reduce using rule 27 (tipoDato -> NUMBER .)


state 61

    (28) tipoDato -> STRING .

    FINALDELINEA    reduce using rule 28 (tipoDato -> STRING .)
    VARIABLE        reduce using rule 28 (tipoDato -> STRING .)
    FUNCTION        reduce using rule 28 (tipoDato -> STRING .)
    VAR             reduce using rule 28 (tipoDato -> STRING .)
    LET             reduce using rule 28 (tipoDato -> STRING .)
    CONST           reduce using rule 28 (tipoDato -> STRING .)
    IF              reduce using rule 28 (tipoDato -> STRING .)
    SWITCH          reduce using rule 28 (tipoDato -> STRING .)
    MAPLOWER        reduce using rule 28 (tipoDato -> STRING .)
    NUMBER          reduce using rule 28 (tipoDato -> STRING .)
    IZQPAREN        reduce using rule 28 (tipoDato -> STRING .)
    $end            reduce using rule 28 (tipoDato -> STRING .)
    DERLLAVE        reduce using rule 28 (tipoDato -> STRING .)
    BREAK           reduce using rule 28 (tipoDato -> STRING .)
    COMA            reduce using rule 28 (tipoDato -> STRING .)
    DOSPUNTOS       reduce using rule 28 (tipoDato -> STRING .)
    DERPAREN        reduce using rule 28 (tipoDato -> STRING .)


state 62

    (29) tipoDato -> BOOLEAN .

    FINALDELINEA    reduce using rule 29 (tipoDato -> BOOLEAN .)
    VARIABLE        reduce using rule 29 (tipoDato -> BOOLEAN .)
    FUNCTION        reduce using rule 29 (tipoDato -> BOOLEAN .)
    VAR             reduce using rule 29 (tipoDato -> BOOLEAN .)
    LET             reduce using rule 29 (tipoDato -> BOOLEAN .)
    CONST           reduce using rule 29 (tipoDato -> BOOLEAN .)
    IF              reduce using rule 29 (tipoDato -> BOOLEAN .)
    SWITCH          reduce using rule 29 (tipoDato -> BOOLEAN .)
    MAPLOWER        reduce using rule 29 (tipoDato -> BOOLEAN .)
    NUMBER          reduce using rule 29 (tipoDato -> BOOLEAN .)
    IZQPAREN        reduce using rule 29 (tipoDato -> BOOLEAN .)
    $end            reduce using rule 29 (tipoDato -> BOOLEAN .)
    DERLLAVE        reduce using rule 29 (tipoDato -> BOOLEAN .)
    BREAK           reduce using rule 29 (tipoDato -> BOOLEAN .)
    COMA            reduce using rule 29 (tipoDato -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 29 (tipoDato -> BOOLEAN .)
    DERPAREN        reduce using rule 29 (tipoDato -> BOOLEAN .)


state 63

    (30) tipoDato -> BIGINT .

    FINALDELINEA    reduce using rule 30 (tipoDato -> BIGINT .)
    VARIABLE        reduce using rule 30 (tipoDato -> BIGINT .)
    FUNCTION        reduce using rule 30 (tipoDato -> BIGINT .)
    VAR             reduce using rule 30 (tipoDato -> BIGINT .)
    LET             reduce using rule 30 (tipoDato -> BIGINT .)
    CONST           reduce using rule 30 (tipoDato -> BIGINT .)
    IF              reduce using rule 30 (tipoDato -> BIGINT .)
    SWITCH          reduce using rule 30 (tipoDato -> BIGINT .)
    MAPLOWER        reduce using rule 30 (tipoDato -> BIGINT .)
    NUMBER          reduce using rule 30 (tipoDato -> BIGINT .)
    IZQPAREN        reduce using rule 30 (tipoDato -> BIGINT .)
    $end            reduce using rule 30 (tipoDato -> BIGINT .)
    DERLLAVE        reduce using rule 30 (tipoDato -> BIGINT .)
    BREAK           reduce using rule 30 (tipoDato -> BIGINT .)
    COMA            reduce using rule 30 (tipoDato -> BIGINT .)
    DOSPUNTOS       reduce using rule 30 (tipoDato -> BIGINT .)
    DERPAREN        reduce using rule 30 (tipoDato -> BIGINT .)


state 64

    (31) tipoDato -> SYMBOL .

    FINALDELINEA    reduce using rule 31 (tipoDato -> SYMBOL .)
    VARIABLE        reduce using rule 31 (tipoDato -> SYMBOL .)
    FUNCTION        reduce using rule 31 (tipoDato -> SYMBOL .)
    VAR             reduce using rule 31 (tipoDato -> SYMBOL .)
    LET             reduce using rule 31 (tipoDato -> SYMBOL .)
    CONST           reduce using rule 31 (tipoDato -> SYMBOL .)
    IF              reduce using rule 31 (tipoDato -> SYMBOL .)
    SWITCH          reduce using rule 31 (tipoDato -> SYMBOL .)
    MAPLOWER        reduce using rule 31 (tipoDato -> SYMBOL .)
    NUMBER          reduce using rule 31 (tipoDato -> SYMBOL .)
    IZQPAREN        reduce using rule 31 (tipoDato -> SYMBOL .)
    $end            reduce using rule 31 (tipoDato -> SYMBOL .)
    DERLLAVE        reduce using rule 31 (tipoDato -> SYMBOL .)
    BREAK           reduce using rule 31 (tipoDato -> SYMBOL .)
    COMA            reduce using rule 31 (tipoDato -> SYMBOL .)
    DOSPUNTOS       reduce using rule 31 (tipoDato -> SYMBOL .)
    DERPAREN        reduce using rule 31 (tipoDato -> SYMBOL .)


state 65

    (43) comparacion -> VARIABLE comparador VARIABLE .

    VARIABLE        reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    FUNCTION        reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    VAR             reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    LET             reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    CONST           reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    IF              reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    SWITCH          reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    MAPLOWER        reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    NUMBER          reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    IZQPAREN        reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    $end            reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    DERLLAVE        reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)
    DERPAREN        reduce using rule 43 (comparacion -> VARIABLE comparador VARIABLE .)


state 66

    (33) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 79
    DERPAREN        shift and go to state 80


state 67

    (75) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)


state 68

    (71) term -> term MULT factor .

    MULT            reduce using rule 71 (term -> term MULT factor .)
    DIV             reduce using rule 71 (term -> term MULT factor .)
    MAS             reduce using rule 71 (term -> term MULT factor .)
    MENOS           reduce using rule 71 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 71 (term -> term MULT factor .)
    MENORQUE        reduce using rule 71 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 71 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 71 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 71 (term -> term MULT factor .)
    VARIABLE        reduce using rule 71 (term -> term MULT factor .)
    FUNCTION        reduce using rule 71 (term -> term MULT factor .)
    VAR             reduce using rule 71 (term -> term MULT factor .)
    LET             reduce using rule 71 (term -> term MULT factor .)
    CONST           reduce using rule 71 (term -> term MULT factor .)
    IF              reduce using rule 71 (term -> term MULT factor .)
    SWITCH          reduce using rule 71 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 71 (term -> term MULT factor .)
    NUMBER          reduce using rule 71 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 71 (term -> term MULT factor .)
    $end            reduce using rule 71 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 71 (term -> term MULT factor .)
    DERPAREN        reduce using rule 71 (term -> term MULT factor .)


state 69

    (72) term -> term DIV factor .

    MULT            reduce using rule 72 (term -> term DIV factor .)
    DIV             reduce using rule 72 (term -> term DIV factor .)
    MAS             reduce using rule 72 (term -> term DIV factor .)
    MENOS           reduce using rule 72 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 72 (term -> term DIV factor .)
    MENORQUE        reduce using rule 72 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 72 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 72 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 72 (term -> term DIV factor .)
    VARIABLE        reduce using rule 72 (term -> term DIV factor .)
    FUNCTION        reduce using rule 72 (term -> term DIV factor .)
    VAR             reduce using rule 72 (term -> term DIV factor .)
    LET             reduce using rule 72 (term -> term DIV factor .)
    CONST           reduce using rule 72 (term -> term DIV factor .)
    IF              reduce using rule 72 (term -> term DIV factor .)
    SWITCH          reduce using rule 72 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 72 (term -> term DIV factor .)
    NUMBER          reduce using rule 72 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 72 (term -> term DIV factor .)
    $end            reduce using rule 72 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 72 (term -> term DIV factor .)
    DERPAREN        reduce using rule 72 (term -> term DIV factor .)


state 70

    (50) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (62) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (63) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (58) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    IZQCORCHETE     shift and go to state 82
    NEW             shift and go to state 83
    VARIABLE        shift and go to state 81


state 71

    (51) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (60) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (61) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IZQCORCHETE     shift and go to state 84
    NEW             shift and go to state 85


state 72

    (64) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (65) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    NEW             shift and go to state 86


state 73

    (35) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 87


state 74

    (43) comparacion -> VARIABLE . comparador VARIABLE
    (45) comparador -> . MAYORQUE
    (46) comparador -> . MENORQUE
    (47) comparador -> . MAYORIGUALQUE
    (48) comparador -> . MENORIGUALQUE
    (49) comparador -> . NOIGUALQUE

    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 39

state 75

    (44) comparacion -> expresion . comparador expresion
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term
    (45) comparador -> . MAYORQUE
    (46) comparador -> . MENORQUE
    (47) comparador -> . MAYORIGUALQUE
    (48) comparador -> . MENORIGUALQUE
    (49) comparador -> . NOIGUALQUE

    MAS             shift and go to state 29
    MENOS           shift and go to state 30
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 31

state 76

    (38) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 88


state 77

    (66) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 89


state 78

    (18) asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .

    VARIABLE        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    FUNCTION        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    VAR             reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    LET             reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    CONST           reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    IF              reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    SWITCH          reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    MAPLOWER        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    NUMBER          reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    IZQPAREN        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    $end            reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    DERLLAVE        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    BREAK           reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)


state 79

    (33) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 90


state 80

    (34) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 91


state 81

    (58) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    PUNTO           shift and go to state 92


state 82

    (50) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (52) lista -> . lista COMA lista
    (53) lista -> . STRING
    (54) lista -> . SYMBOL
    (55) lista -> . NUMBER
    (56) lista -> . BIGINT
    (57) lista -> . BOOLEAN

    STRING          shift and go to state 94
    SYMBOL          shift and go to state 95
    NUMBER          shift and go to state 96
    BIGINT          shift and go to state 97
    BOOLEAN         shift and go to state 98

    lista                          shift and go to state 93

state 83

    (62) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (63) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 99


state 84

    (51) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (52) lista -> . lista COMA lista
    (53) lista -> . STRING
    (54) lista -> . SYMBOL
    (55) lista -> . NUMBER
    (56) lista -> . BIGINT
    (57) lista -> . BOOLEAN

    STRING          shift and go to state 94
    SYMBOL          shift and go to state 95
    NUMBER          shift and go to state 96
    BIGINT          shift and go to state 97
    BOOLEAN         shift and go to state 98

    lista                          shift and go to state 100

state 85

    (60) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (61) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 101


state 86

    (64) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (65) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 102


state 87

    (35) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (36) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (37) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 103


state 88

    (38) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 104


state 89

    (66) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (27) tipoDato -> . NUMBER
    (28) tipoDato -> . STRING
    (29) tipoDato -> . BOOLEAN
    (30) tipoDato -> . BIGINT
    (31) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipoDato                       shift and go to state 105

state 90

    (33) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 106


state 91

    (34) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (33) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (50) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (51) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (62) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (64) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (38) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (58) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (66) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (19) declarador -> . VAR
    (20) declarador -> . LET
    (21) declarador -> . CONST
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 21
    CONST           shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 107
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 92

    (58) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA

    POP             shift and go to state 108
    PUSH            shift and go to state 109


state 93

    (50) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (52) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 110
    COMA            shift and go to state 111


state 94

    (53) lista -> STRING .

    DERCORCHETE     reduce using rule 53 (lista -> STRING .)
    COMA            reduce using rule 53 (lista -> STRING .)
    DERPAREN        reduce using rule 53 (lista -> STRING .)


state 95

    (54) lista -> SYMBOL .

    DERCORCHETE     reduce using rule 54 (lista -> SYMBOL .)
    COMA            reduce using rule 54 (lista -> SYMBOL .)
    DERPAREN        reduce using rule 54 (lista -> SYMBOL .)


state 96

    (55) lista -> NUMBER .

    DERCORCHETE     reduce using rule 55 (lista -> NUMBER .)
    COMA            reduce using rule 55 (lista -> NUMBER .)
    DERPAREN        reduce using rule 55 (lista -> NUMBER .)


state 97

    (56) lista -> BIGINT .

    DERCORCHETE     reduce using rule 56 (lista -> BIGINT .)
    COMA            reduce using rule 56 (lista -> BIGINT .)
    DERPAREN        reduce using rule 56 (lista -> BIGINT .)


state 98

    (57) lista -> BOOLEAN .

    DERCORCHETE     reduce using rule 57 (lista -> BOOLEAN .)
    COMA            reduce using rule 57 (lista -> BOOLEAN .)
    DERPAREN        reduce using rule 57 (lista -> BOOLEAN .)


state 99

    (62) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (63) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 112


state 100

    (51) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (52) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 113
    COMA            shift and go to state 111


state 101

    (60) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (61) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 114


state 102

    (64) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (65) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 115


state 103

    (35) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (36) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (37) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (33) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (50) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (51) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (62) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (64) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (38) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (58) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (66) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (19) declarador -> . VAR
    (20) declarador -> . LET
    (21) declarador -> . CONST
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 21
    CONST           shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    comparacion                    shift and go to state 7
    js                             shift and go to state 116
    if                             shift and go to state 10
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 104

    (38) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (41) ncasos -> . casos
    (42) ncasos -> . casos ncasos
    (39) casos -> . CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (40) casos -> . CASE tipoDato DOSPUNTOS

    CASE            shift and go to state 119

    ncasos                         shift and go to state 117
    casos                          shift and go to state 118

state 105

    (66) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato . COMA tipoDato DERPAREN
    (67) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato . COMA tipoDato DERPAREN FINALDELINEA

    COMA            shift and go to state 120


state 106

    (33) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (33) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (50) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (51) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (62) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (64) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (38) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (58) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (66) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (19) declarador -> . VAR
    (20) declarador -> . LET
    (21) declarador -> . CONST
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 21
    CONST           shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 121
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 107

    (34) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 122


state 108

    (58) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 123


state 109

    (59) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 124


state 110

    (50) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VARIABLE        reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 50 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 111

    (52) lista -> lista COMA . lista
    (52) lista -> . lista COMA lista
    (53) lista -> . STRING
    (54) lista -> . SYMBOL
    (55) lista -> . NUMBER
    (56) lista -> . BIGINT
    (57) lista -> . BOOLEAN

    STRING          shift and go to state 94
    SYMBOL          shift and go to state 95
    NUMBER          shift and go to state 96
    BIGINT          shift and go to state 97
    BOOLEAN         shift and go to state 98

    lista                          shift and go to state 125

state 112

    (62) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (63) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 126


state 113

    (51) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VARIABLE        reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 51 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 114

    (60) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (61) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 127


state 115

    (64) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (65) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 128


state 116

    (35) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (36) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (37) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 129


state 117

    (38) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 130


state 118

    (41) ncasos -> casos .
    (42) ncasos -> casos . ncasos
    (41) ncasos -> . casos
    (42) ncasos -> . casos ncasos
    (39) casos -> . CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (40) casos -> . CASE tipoDato DOSPUNTOS

    DEFAULT         reduce using rule 41 (ncasos -> casos .)
    CASE            shift and go to state 119

    casos                          shift and go to state 118
    ncasos                         shift and go to state 131

state 119

    (39) casos -> CASE . tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (40) casos -> CASE . tipoDato DOSPUNTOS
    (27) tipoDato -> . NUMBER
    (28) tipoDato -> . STRING
    (29) tipoDato -> . BOOLEAN
    (30) tipoDato -> . BIGINT
    (31) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipoDato                       shift and go to state 132

state 120

    (66) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA . tipoDato DERPAREN
    (67) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA . tipoDato DERPAREN FINALDELINEA
    (27) tipoDato -> . NUMBER
    (28) tipoDato -> . STRING
    (29) tipoDato -> . BOOLEAN
    (30) tipoDato -> . BIGINT
    (31) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    BOOLEAN         shift and go to state 62
    BIGINT          shift and go to state 63
    SYMBOL          shift and go to state 64

    tipoDato                       shift and go to state 133

state 121

    (33) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 134


state 122

    (34) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 123

    (58) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 135


state 124

    (59) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (52) lista -> . lista COMA lista
    (53) lista -> . STRING
    (54) lista -> . SYMBOL
    (55) lista -> . NUMBER
    (56) lista -> . BIGINT
    (57) lista -> . BOOLEAN

    STRING          shift and go to state 94
    SYMBOL          shift and go to state 95
    NUMBER          shift and go to state 96
    BIGINT          shift and go to state 97
    BOOLEAN         shift and go to state 98

    lista                          shift and go to state 136

state 125

    (52) lista -> lista COMA lista .
    (52) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 52 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 52 (lista -> lista COMA lista .)
    COMA            shift and go to state 111

  ! COMA            [ reduce using rule 52 (lista -> lista COMA lista .) ]


state 126

    (62) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (63) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 62 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 137


state 127

    (60) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (61) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 60 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 138


state 128

    (64) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (65) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 64 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 139


state 129

    (35) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (36) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (37) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VARIABLE        reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 141
    IF              shift and go to state 23

  ! IF              [ reduce using rule 35 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 140

state 130

    (38) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 142


state 131

    (42) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 42 (ncasos -> casos ncasos .)


state 132

    (39) casos -> CASE tipoDato . DOSPUNTOS asignacion BREAK FINALDELINEA
    (40) casos -> CASE tipoDato . DOSPUNTOS

    DOSPUNTOS       shift and go to state 143


state 133

    (66) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato . DERPAREN
    (67) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 144


state 134

    (33) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 33 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 135

    (58) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 145


state 136

    (59) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (52) lista -> lista . COMA lista

    DERPAREN        shift and go to state 146
    COMA            shift and go to state 111


state 137

    (63) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 63 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 138

    (61) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 61 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 139

    (65) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 65 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 140

    (36) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VARIABLE        reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VAR             reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 36 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 141

    (37) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 147


state 142

    (38) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (33) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (50) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (51) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (62) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (64) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (38) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (58) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (66) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (19) declarador -> . VAR
    (20) declarador -> . LET
    (21) declarador -> . CONST
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 21
    CONST           shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 148
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 143

    (39) casos -> CASE tipoDato DOSPUNTOS . asignacion BREAK FINALDELINEA
    (40) casos -> CASE tipoDato DOSPUNTOS .
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA

    CASE            reduce using rule 40 (casos -> CASE tipoDato DOSPUNTOS .)
    DEFAULT         reduce using rule 40 (casos -> CASE tipoDato DOSPUNTOS .)
    VARIABLE        shift and go to state 150

    asignacion                     shift and go to state 149

state 144

    (66) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .
    (67) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    FUNCTION        reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    VAR             reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    LET             reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    CONST           reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    IF              reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    SWITCH          reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    MAPLOWER        reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    NUMBER          reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    IZQPAREN        reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    $end            reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    DERLLAVE        reduce using rule 66 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    FINALDELINEA    shift and go to state 151


state 145

    (58) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 58 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 146

    (59) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 152


state 147

    (37) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (33) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (43) comparacion -> . VARIABLE comparador VARIABLE
    (44) comparacion -> . expresion comparador expresion
    (50) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (51) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (60) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (61) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (62) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (63) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (64) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (65) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (35) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (36) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (37) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (38) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (58) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (59) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (66) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (67) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (19) declarador -> . VAR
    (20) declarador -> . LET
    (21) declarador -> . CONST
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 21
    CONST           shift and go to state 22
    IF              shift and go to state 23
    SWITCH          shift and go to state 24
    MAPLOWER        shift and go to state 25
    NUMBER          shift and go to state 27
    IZQPAREN        shift and go to state 18

    comparacion                    shift and go to state 7
    js                             shift and go to state 153
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 26

state 148

    (38) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 154


state 149

    (39) casos -> CASE tipoDato DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 155


state 150

    (17) asignacion -> VARIABLE . operadoresAsig tipoDato
    (18) asignacion -> VARIABLE . operadoresAsig tipoDato FINALDELINEA
    (22) operadoresAsig -> . IGUAL
    (23) operadoresAsig -> . MASIGUAL
    (24) operadoresAsig -> . MENOSIGUAL
    (25) operadoresAsig -> . DIVIGUAL
    (26) operadoresAsig -> . MODIGUAL

    IGUAL           shift and go to state 40
    MASIGUAL        shift and go to state 41
    MENOSIGUAL      shift and go to state 42
    DIVIGUAL        shift and go to state 43
    MODIGUAL        shift and go to state 44

    operadoresAsig                 shift and go to state 38

state 151

    (67) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    VAR             reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    LET             reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    CONST           reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    IF              reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    $end            reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 67 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)


state 152

    (59) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 59 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 153

    (37) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 156


state 154

    (38) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VARIABLE        reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VAR             reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 38 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 155

    (39) casos -> CASE tipoDato DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 157


state 156

    (37) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 37 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 157

    (39) casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 39 (casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 39 (casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 20 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 21 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 22 resolved as shift
WARNING: shift/reduce conflict for COMA in state 125 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
