Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BOOL
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FLOTANTE
    FOR
    GET
    IGUALIGUAL
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    MULTIGUAL
    NULL
    NUMERO
    OR
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SET
    SUPER
    UNDEFINED
    VOID
    WHILE

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracionVarSinAsig
Rule 4     instrucciones -> declaracionVar
Rule 5     instrucciones -> asignacion
Rule 6     instrucciones -> funcion
Rule 7     instrucciones -> expresion
Rule 8     instrucciones -> comparacion
Rule 9     instrucciones -> arreglo
Rule 10    instrucciones -> map
Rule 11    instrucciones -> if
Rule 12    instrucciones -> switch
Rule 13    instrucciones -> pop
Rule 14    instrucciones -> push
Rule 15    declaracionVarSinAsig -> VAR VARIABLE
Rule 16    declaracionVarSinAsig -> LET VARIABLE
Rule 17    declaracionVarSinAsig -> CONST VARIABLE
Rule 18    declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA
Rule 19    declaracionVarSinAsig -> LET VARIABLE FINALDELINEA
Rule 20    declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA
Rule 21    declaracionVar -> VAR VARIABLE IGUAL tipo
Rule 22    declaracionVar -> LET VARIABLE IGUAL tipo
Rule 23    declaracionVar -> CONST VARIABLE IGUAL tipo
Rule 24    declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA
Rule 25    declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA
Rule 26    declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA
Rule 27    asignacion -> VARIABLE operadoresAsig tipo
Rule 28    asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA
Rule 29    operadoresAsig -> IGUAL
Rule 30    operadoresAsig -> MASIGUAL
Rule 31    operadoresAsig -> MENOSIGUAL
Rule 32    operadoresAsig -> DIVIGUAL
Rule 33    operadoresAsig -> MODIGUAL
Rule 34    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 35    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 36    tipo -> NUMBER
Rule 37    tipo -> STRING
Rule 38    tipo -> BOOLEAN
Rule 39    tipo -> BIGINT
Rule 40    tipo -> SYMBOL
Rule 41    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 42    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 43    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 44    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 45    casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 46    casos -> CASE tipo DOSPUNTOS
Rule 47    ncasos -> casos
Rule 48    ncasos -> casos ncasos
Rule 49    comparacion -> VARIABLE comparador VARIABLE
Rule 50    comparacion -> expresion comparador expresion
Rule 51    comparador -> MAYORQUE
Rule 52    comparador -> MENORQUE
Rule 53    comparador -> MAYORIGUALQUE
Rule 54    comparador -> MENORIGUALQUE
Rule 55    comparador -> NOIGUALQUE
Rule 56    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 57    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 58    lista -> lista COMA lista
Rule 59    lista -> STRING
Rule 60    lista -> SYMBOL
Rule 61    lista -> NUMBER
Rule 62    lista -> BIGINT
Rule 63    lista -> BOOLEAN
Rule 64    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 65    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 66    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 67    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 68    expresion -> expresion MAS term
Rule 69    expresion -> expresion MENOS term
Rule 70    expresion -> term
Rule 71    term -> term MULT factor
Rule 72    term -> term DIV factor
Rule 73    term -> factor
Rule 74    factor -> NUMBER
Rule 75    factor -> IZQPAREN expresion DERPAREN

Terminals, with rules where they appear

AND                  : 
AWAIT                : 
BIGINT               : 39 62
BOOL                 : 
BOOLEAN              : 38 63
BREAK                : 45
CASE                 : 45 46
CATCH                : 
CLASS                : 
COMA                 : 58
CONST                : 17 20 23 26
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 44
DELETE               : 
DERCORCHETE          : 56 57
DERLLAVE             : 34 35 41 42 43 43 44
DERPAREN             : 34 35 41 42 43 44 64 65 66 67 75
DIV                  : 72
DIVIGUAL             : 32
DO                   : 
DOSPUNTOS            : 44 45 46
ELSE                 : 43
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 18 19 20 24 25 26 28 45 64 65 67
FLOTANTE             : 
FOR                  : 
FUNCTION             : 34 35
GET                  : 
IF                   : 41 42 43
IGUAL                : 21 22 23 24 25 26 29 56 57 64 65 66 67
IGUALIGUAL           : 
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 56 57
IZQLLAVE             : 34 35 41 42 43 43 44
IZQPAREN             : 34 35 41 42 43 44 64 65 66 67 75
LET                  : 16 19 22 25 57 66 67
MAP                  : 66 67
MAS                  : 68
MASIGUAL             : 30
MAYORIGUALQUE        : 53
MAYORQUE             : 51
MENORIGUALQUE        : 54
MENORQUE             : 52
MENOS                : 69
MENOSIGUAL           : 31
MODIGUAL             : 33
MULT                 : 71
MULTIGUAL            : 
NEW                  : 66 67
NOIGUALQUE           : 55
NULL                 : 
NUMBER               : 36 61 74
NUMERO               : 
OR                   : 
PACKAGE              : 
POP                  : 64
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 64 65
PUSH                 : 65
RETURN               : 
SET                  : 
STRING               : 37 59
SUPER                : 
SWITCH               : 44
SYMBOL               : 40 60
UNDEFINED            : 
VAR                  : 15 18 21 24 56 64 65
VARIABLE             : 15 16 17 18 19 20 21 22 23 24 25 26 27 28 34 34 35 44 49 49 56 57 64 64 65 65 66 67
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arreglo              : 9
asignacion           : 5 45
casos                : 47 48
comparacion          : 8 41 42 43
comparador           : 49 50
declaracionVar       : 4
declaracionVarSinAsig : 3
expresion            : 7 50 50 68 69 75
factor               : 71 72 73
funcion              : 6
if                   : 11 42
instrucciones        : 1 2
js                   : 2 34 35 41 42 43 43 44 0
lista                : 56 57 58 58 65
map                  : 10
ncasos               : 44 48
operadoresAsig       : 27 28
pop                  : 13
push                 : 14
switch               : 12
term                 : 68 69 70 71 72
tipo                 : 21 22 23 24 25 26 27 28 45 46

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) declaracionVarSinAsig -> . VAR VARIABLE
    (16) declaracionVarSinAsig -> . LET VARIABLE
    (17) declaracionVarSinAsig -> . CONST VARIABLE
    (18) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (19) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (21) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (22) declaracionVar -> . LET VARIABLE IGUAL tipo
    (23) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (24) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (25) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (56) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (57) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (44) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 19
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) declaracionVarSinAsig -> . VAR VARIABLE
    (16) declaracionVarSinAsig -> . LET VARIABLE
    (17) declaracionVarSinAsig -> . CONST VARIABLE
    (18) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (19) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (21) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (22) declaracionVar -> . LET VARIABLE IGUAL tipo
    (23) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (24) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (25) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (56) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (57) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (44) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 19
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    instrucciones                  shift and go to state 2
    js                             shift and go to state 26
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 3

    (3) instrucciones -> declaracionVarSinAsig .

    VAR             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    LET             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    CONST           reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    VARIABLE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IF              reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    $end            reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)


state 4

    (4) instrucciones -> declaracionVar .

    VAR             reduce using rule 4 (instrucciones -> declaracionVar .)
    LET             reduce using rule 4 (instrucciones -> declaracionVar .)
    CONST           reduce using rule 4 (instrucciones -> declaracionVar .)
    VARIABLE        reduce using rule 4 (instrucciones -> declaracionVar .)
    FUNCTION        reduce using rule 4 (instrucciones -> declaracionVar .)
    IF              reduce using rule 4 (instrucciones -> declaracionVar .)
    SWITCH          reduce using rule 4 (instrucciones -> declaracionVar .)
    NUMBER          reduce using rule 4 (instrucciones -> declaracionVar .)
    IZQPAREN        reduce using rule 4 (instrucciones -> declaracionVar .)
    $end            reduce using rule 4 (instrucciones -> declaracionVar .)
    DERLLAVE        reduce using rule 4 (instrucciones -> declaracionVar .)


state 5

    (5) instrucciones -> asignacion .

    VAR             reduce using rule 5 (instrucciones -> asignacion .)
    LET             reduce using rule 5 (instrucciones -> asignacion .)
    CONST           reduce using rule 5 (instrucciones -> asignacion .)
    VARIABLE        reduce using rule 5 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 5 (instrucciones -> asignacion .)
    IF              reduce using rule 5 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 5 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 5 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> asignacion .)
    $end            reduce using rule 5 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> asignacion .)


state 6

    (6) instrucciones -> funcion .

    VAR             reduce using rule 6 (instrucciones -> funcion .)
    LET             reduce using rule 6 (instrucciones -> funcion .)
    CONST           reduce using rule 6 (instrucciones -> funcion .)
    VARIABLE        reduce using rule 6 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 6 (instrucciones -> funcion .)
    IF              reduce using rule 6 (instrucciones -> funcion .)
    SWITCH          reduce using rule 6 (instrucciones -> funcion .)
    NUMBER          reduce using rule 6 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> funcion .)
    $end            reduce using rule 6 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> funcion .)


state 7

    (7) instrucciones -> expresion .
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term
    (50) comparacion -> expresion . comparador expresion
    (51) comparador -> . MAYORQUE
    (52) comparador -> . MENORQUE
    (53) comparador -> . MAYORIGUALQUE
    (54) comparador -> . MENORIGUALQUE
    (55) comparador -> . NOIGUALQUE

    VAR             reduce using rule 7 (instrucciones -> expresion .)
    LET             reduce using rule 7 (instrucciones -> expresion .)
    CONST           reduce using rule 7 (instrucciones -> expresion .)
    VARIABLE        reduce using rule 7 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 7 (instrucciones -> expresion .)
    IF              reduce using rule 7 (instrucciones -> expresion .)
    SWITCH          reduce using rule 7 (instrucciones -> expresion .)
    NUMBER          reduce using rule 7 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> expresion .)
    $end            reduce using rule 7 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> expresion .)
    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    MAYORQUE        shift and go to state 30
    MENORQUE        shift and go to state 31
    MAYORIGUALQUE   shift and go to state 32
    MENORIGUALQUE   shift and go to state 33
    NOIGUALQUE      shift and go to state 34

    comparador                     shift and go to state 29

state 8

    (8) instrucciones -> comparacion .

    VAR             reduce using rule 8 (instrucciones -> comparacion .)
    LET             reduce using rule 8 (instrucciones -> comparacion .)
    CONST           reduce using rule 8 (instrucciones -> comparacion .)
    VARIABLE        reduce using rule 8 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 8 (instrucciones -> comparacion .)
    IF              reduce using rule 8 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 8 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 8 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 8 (instrucciones -> comparacion .)
    $end            reduce using rule 8 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 8 (instrucciones -> comparacion .)


state 9

    (9) instrucciones -> arreglo .

    VAR             reduce using rule 9 (instrucciones -> arreglo .)
    LET             reduce using rule 9 (instrucciones -> arreglo .)
    CONST           reduce using rule 9 (instrucciones -> arreglo .)
    VARIABLE        reduce using rule 9 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 9 (instrucciones -> arreglo .)
    IF              reduce using rule 9 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 9 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 9 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 9 (instrucciones -> arreglo .)
    $end            reduce using rule 9 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 9 (instrucciones -> arreglo .)


state 10

    (10) instrucciones -> map .

    VAR             reduce using rule 10 (instrucciones -> map .)
    LET             reduce using rule 10 (instrucciones -> map .)
    CONST           reduce using rule 10 (instrucciones -> map .)
    VARIABLE        reduce using rule 10 (instrucciones -> map .)
    FUNCTION        reduce using rule 10 (instrucciones -> map .)
    IF              reduce using rule 10 (instrucciones -> map .)
    SWITCH          reduce using rule 10 (instrucciones -> map .)
    NUMBER          reduce using rule 10 (instrucciones -> map .)
    IZQPAREN        reduce using rule 10 (instrucciones -> map .)
    $end            reduce using rule 10 (instrucciones -> map .)
    DERLLAVE        reduce using rule 10 (instrucciones -> map .)


state 11

    (11) instrucciones -> if .

    VAR             reduce using rule 11 (instrucciones -> if .)
    LET             reduce using rule 11 (instrucciones -> if .)
    CONST           reduce using rule 11 (instrucciones -> if .)
    VARIABLE        reduce using rule 11 (instrucciones -> if .)
    FUNCTION        reduce using rule 11 (instrucciones -> if .)
    IF              reduce using rule 11 (instrucciones -> if .)
    SWITCH          reduce using rule 11 (instrucciones -> if .)
    NUMBER          reduce using rule 11 (instrucciones -> if .)
    IZQPAREN        reduce using rule 11 (instrucciones -> if .)
    $end            reduce using rule 11 (instrucciones -> if .)
    DERLLAVE        reduce using rule 11 (instrucciones -> if .)


state 12

    (12) instrucciones -> switch .

    VAR             reduce using rule 12 (instrucciones -> switch .)
    LET             reduce using rule 12 (instrucciones -> switch .)
    CONST           reduce using rule 12 (instrucciones -> switch .)
    VARIABLE        reduce using rule 12 (instrucciones -> switch .)
    FUNCTION        reduce using rule 12 (instrucciones -> switch .)
    IF              reduce using rule 12 (instrucciones -> switch .)
    SWITCH          reduce using rule 12 (instrucciones -> switch .)
    NUMBER          reduce using rule 12 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 12 (instrucciones -> switch .)
    $end            reduce using rule 12 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 12 (instrucciones -> switch .)


state 13

    (13) instrucciones -> pop .

    VAR             reduce using rule 13 (instrucciones -> pop .)
    LET             reduce using rule 13 (instrucciones -> pop .)
    CONST           reduce using rule 13 (instrucciones -> pop .)
    VARIABLE        reduce using rule 13 (instrucciones -> pop .)
    FUNCTION        reduce using rule 13 (instrucciones -> pop .)
    IF              reduce using rule 13 (instrucciones -> pop .)
    SWITCH          reduce using rule 13 (instrucciones -> pop .)
    NUMBER          reduce using rule 13 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 13 (instrucciones -> pop .)
    $end            reduce using rule 13 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 13 (instrucciones -> pop .)


state 14

    (14) instrucciones -> push .

    VAR             reduce using rule 14 (instrucciones -> push .)
    LET             reduce using rule 14 (instrucciones -> push .)
    CONST           reduce using rule 14 (instrucciones -> push .)
    VARIABLE        reduce using rule 14 (instrucciones -> push .)
    FUNCTION        reduce using rule 14 (instrucciones -> push .)
    IF              reduce using rule 14 (instrucciones -> push .)
    SWITCH          reduce using rule 14 (instrucciones -> push .)
    NUMBER          reduce using rule 14 (instrucciones -> push .)
    IZQPAREN        reduce using rule 14 (instrucciones -> push .)
    $end            reduce using rule 14 (instrucciones -> push .)
    DERLLAVE        reduce using rule 14 (instrucciones -> push .)


state 15

    (15) declaracionVarSinAsig -> VAR . VARIABLE
    (18) declaracionVarSinAsig -> VAR . VARIABLE FINALDELINEA
    (21) declaracionVar -> VAR . VARIABLE IGUAL tipo
    (24) declaracionVar -> VAR . VARIABLE IGUAL tipo FINALDELINEA
    (56) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (64) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    VARIABLE        shift and go to state 35


state 16

    (27) asignacion -> VARIABLE . operadoresAsig tipo
    (28) asignacion -> VARIABLE . operadoresAsig tipo FINALDELINEA
    (49) comparacion -> VARIABLE . comparador VARIABLE
    (29) operadoresAsig -> . IGUAL
    (30) operadoresAsig -> . MASIGUAL
    (31) operadoresAsig -> . MENOSIGUAL
    (32) operadoresAsig -> . DIVIGUAL
    (33) operadoresAsig -> . MODIGUAL
    (51) comparador -> . MAYORQUE
    (52) comparador -> . MENORQUE
    (53) comparador -> . MAYORIGUALQUE
    (54) comparador -> . MENORIGUALQUE
    (55) comparador -> . NOIGUALQUE

    IGUAL           shift and go to state 38
    MASIGUAL        shift and go to state 39
    MENOSIGUAL      shift and go to state 40
    DIVIGUAL        shift and go to state 41
    MODIGUAL        shift and go to state 42
    MAYORQUE        shift and go to state 30
    MENORQUE        shift and go to state 31
    MAYORIGUALQUE   shift and go to state 32
    MENORIGUALQUE   shift and go to state 33
    NOIGUALQUE      shift and go to state 34

    operadoresAsig                 shift and go to state 36
    comparador                     shift and go to state 37

state 17

    (16) declaracionVarSinAsig -> LET . VARIABLE
    (19) declaracionVarSinAsig -> LET . VARIABLE FINALDELINEA
    (22) declaracionVar -> LET . VARIABLE IGUAL tipo
    (25) declaracionVar -> LET . VARIABLE IGUAL tipo FINALDELINEA
    (57) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    VARIABLE        shift and go to state 43


state 18

    (17) declaracionVarSinAsig -> CONST . VARIABLE
    (20) declaracionVarSinAsig -> CONST . VARIABLE FINALDELINEA
    (23) declaracionVar -> CONST . VARIABLE IGUAL tipo
    (26) declaracionVar -> CONST . VARIABLE IGUAL tipo FINALDELINEA

    VARIABLE        shift and go to state 44


state 19

    (34) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 45


state 20

    (75) factor -> IZQPAREN . expresion DERPAREN
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    expresion                      shift and go to state 46
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 21

    (70) expresion -> term .
    (71) term -> term . MULT factor
    (72) term -> term . DIV factor

    MAS             reduce using rule 70 (expresion -> term .)
    MENOS           reduce using rule 70 (expresion -> term .)
    MAYORQUE        reduce using rule 70 (expresion -> term .)
    MENORQUE        reduce using rule 70 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 70 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 70 (expresion -> term .)
    NOIGUALQUE      reduce using rule 70 (expresion -> term .)
    VAR             reduce using rule 70 (expresion -> term .)
    LET             reduce using rule 70 (expresion -> term .)
    CONST           reduce using rule 70 (expresion -> term .)
    VARIABLE        reduce using rule 70 (expresion -> term .)
    FUNCTION        reduce using rule 70 (expresion -> term .)
    IF              reduce using rule 70 (expresion -> term .)
    SWITCH          reduce using rule 70 (expresion -> term .)
    NUMBER          reduce using rule 70 (expresion -> term .)
    IZQPAREN        reduce using rule 70 (expresion -> term .)
    $end            reduce using rule 70 (expresion -> term .)
    DERLLAVE        reduce using rule 70 (expresion -> term .)
    DERPAREN        reduce using rule 70 (expresion -> term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 22

    (41) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 49


state 23

    (44) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 50


state 24

    (73) term -> factor .

    MULT            reduce using rule 73 (term -> factor .)
    DIV             reduce using rule 73 (term -> factor .)
    MAS             reduce using rule 73 (term -> factor .)
    MENOS           reduce using rule 73 (term -> factor .)
    MAYORQUE        reduce using rule 73 (term -> factor .)
    MENORQUE        reduce using rule 73 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 73 (term -> factor .)
    MENORIGUALQUE   reduce using rule 73 (term -> factor .)
    NOIGUALQUE      reduce using rule 73 (term -> factor .)
    VAR             reduce using rule 73 (term -> factor .)
    LET             reduce using rule 73 (term -> factor .)
    CONST           reduce using rule 73 (term -> factor .)
    VARIABLE        reduce using rule 73 (term -> factor .)
    FUNCTION        reduce using rule 73 (term -> factor .)
    IF              reduce using rule 73 (term -> factor .)
    SWITCH          reduce using rule 73 (term -> factor .)
    NUMBER          reduce using rule 73 (term -> factor .)
    IZQPAREN        reduce using rule 73 (term -> factor .)
    $end            reduce using rule 73 (term -> factor .)
    DERLLAVE        reduce using rule 73 (term -> factor .)
    DERPAREN        reduce using rule 73 (term -> factor .)


state 25

    (74) factor -> NUMBER .

    MULT            reduce using rule 74 (factor -> NUMBER .)
    DIV             reduce using rule 74 (factor -> NUMBER .)
    MAS             reduce using rule 74 (factor -> NUMBER .)
    MENOS           reduce using rule 74 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 74 (factor -> NUMBER .)
    MENORQUE        reduce using rule 74 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 74 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 74 (factor -> NUMBER .)
    NOIGUALQUE      reduce using rule 74 (factor -> NUMBER .)
    VAR             reduce using rule 74 (factor -> NUMBER .)
    LET             reduce using rule 74 (factor -> NUMBER .)
    CONST           reduce using rule 74 (factor -> NUMBER .)
    VARIABLE        reduce using rule 74 (factor -> NUMBER .)
    FUNCTION        reduce using rule 74 (factor -> NUMBER .)
    IF              reduce using rule 74 (factor -> NUMBER .)
    SWITCH          reduce using rule 74 (factor -> NUMBER .)
    NUMBER          reduce using rule 74 (factor -> NUMBER .)
    IZQPAREN        reduce using rule 74 (factor -> NUMBER .)
    $end            reduce using rule 74 (factor -> NUMBER .)
    DERLLAVE        reduce using rule 74 (factor -> NUMBER .)
    DERPAREN        reduce using rule 74 (factor -> NUMBER .)


state 26

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 27

    (68) expresion -> expresion MAS . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    term                           shift and go to state 51
    factor                         shift and go to state 24

state 28

    (69) expresion -> expresion MENOS . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    term                           shift and go to state 52
    factor                         shift and go to state 24

state 29

    (50) comparacion -> expresion comparador . expresion
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    expresion                      shift and go to state 53
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 30

    (51) comparador -> MAYORQUE .

    NUMBER          reduce using rule 51 (comparador -> MAYORQUE .)
    IZQPAREN        reduce using rule 51 (comparador -> MAYORQUE .)
    VARIABLE        reduce using rule 51 (comparador -> MAYORQUE .)


state 31

    (52) comparador -> MENORQUE .

    NUMBER          reduce using rule 52 (comparador -> MENORQUE .)
    IZQPAREN        reduce using rule 52 (comparador -> MENORQUE .)
    VARIABLE        reduce using rule 52 (comparador -> MENORQUE .)


state 32

    (53) comparador -> MAYORIGUALQUE .

    NUMBER          reduce using rule 53 (comparador -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 53 (comparador -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 53 (comparador -> MAYORIGUALQUE .)


state 33

    (54) comparador -> MENORIGUALQUE .

    NUMBER          reduce using rule 54 (comparador -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 54 (comparador -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 54 (comparador -> MENORIGUALQUE .)


state 34

    (55) comparador -> NOIGUALQUE .

    NUMBER          reduce using rule 55 (comparador -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 55 (comparador -> NOIGUALQUE .)
    VARIABLE        reduce using rule 55 (comparador -> NOIGUALQUE .)


state 35

    (15) declaracionVarSinAsig -> VAR VARIABLE .
    (18) declaracionVarSinAsig -> VAR VARIABLE . FINALDELINEA
    (21) declaracionVar -> VAR VARIABLE . IGUAL tipo
    (24) declaracionVar -> VAR VARIABLE . IGUAL tipo FINALDELINEA
    (56) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (64) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    VAR             reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    LET             reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    CONST           reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    VARIABLE        reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    FUNCTION        reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    IF              reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    SWITCH          reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    NUMBER          reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    IZQPAREN        reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    $end            reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    DERLLAVE        reduce using rule 15 (declaracionVarSinAsig -> VAR VARIABLE .)
    FINALDELINEA    shift and go to state 54
    IGUAL           shift and go to state 55


state 36

    (27) asignacion -> VARIABLE operadoresAsig . tipo
    (28) asignacion -> VARIABLE operadoresAsig . tipo FINALDELINEA
    (36) tipo -> . NUMBER
    (37) tipo -> . STRING
    (38) tipo -> . BOOLEAN
    (39) tipo -> . BIGINT
    (40) tipo -> . SYMBOL

    NUMBER          shift and go to state 57
    STRING          shift and go to state 58
    BOOLEAN         shift and go to state 59
    BIGINT          shift and go to state 60
    SYMBOL          shift and go to state 61

    tipo                           shift and go to state 56

state 37

    (49) comparacion -> VARIABLE comparador . VARIABLE

    VARIABLE        shift and go to state 62


state 38

    (29) operadoresAsig -> IGUAL .

    NUMBER          reduce using rule 29 (operadoresAsig -> IGUAL .)
    STRING          reduce using rule 29 (operadoresAsig -> IGUAL .)
    BOOLEAN         reduce using rule 29 (operadoresAsig -> IGUAL .)
    BIGINT          reduce using rule 29 (operadoresAsig -> IGUAL .)
    SYMBOL          reduce using rule 29 (operadoresAsig -> IGUAL .)


state 39

    (30) operadoresAsig -> MASIGUAL .

    NUMBER          reduce using rule 30 (operadoresAsig -> MASIGUAL .)
    STRING          reduce using rule 30 (operadoresAsig -> MASIGUAL .)
    BOOLEAN         reduce using rule 30 (operadoresAsig -> MASIGUAL .)
    BIGINT          reduce using rule 30 (operadoresAsig -> MASIGUAL .)
    SYMBOL          reduce using rule 30 (operadoresAsig -> MASIGUAL .)


state 40

    (31) operadoresAsig -> MENOSIGUAL .

    NUMBER          reduce using rule 31 (operadoresAsig -> MENOSIGUAL .)
    STRING          reduce using rule 31 (operadoresAsig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 31 (operadoresAsig -> MENOSIGUAL .)
    BIGINT          reduce using rule 31 (operadoresAsig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 31 (operadoresAsig -> MENOSIGUAL .)


state 41

    (32) operadoresAsig -> DIVIGUAL .

    NUMBER          reduce using rule 32 (operadoresAsig -> DIVIGUAL .)
    STRING          reduce using rule 32 (operadoresAsig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 32 (operadoresAsig -> DIVIGUAL .)
    BIGINT          reduce using rule 32 (operadoresAsig -> DIVIGUAL .)
    SYMBOL          reduce using rule 32 (operadoresAsig -> DIVIGUAL .)


state 42

    (33) operadoresAsig -> MODIGUAL .

    NUMBER          reduce using rule 33 (operadoresAsig -> MODIGUAL .)
    STRING          reduce using rule 33 (operadoresAsig -> MODIGUAL .)
    BOOLEAN         reduce using rule 33 (operadoresAsig -> MODIGUAL .)
    BIGINT          reduce using rule 33 (operadoresAsig -> MODIGUAL .)
    SYMBOL          reduce using rule 33 (operadoresAsig -> MODIGUAL .)


state 43

    (16) declaracionVarSinAsig -> LET VARIABLE .
    (19) declaracionVarSinAsig -> LET VARIABLE . FINALDELINEA
    (22) declaracionVar -> LET VARIABLE . IGUAL tipo
    (25) declaracionVar -> LET VARIABLE . IGUAL tipo FINALDELINEA
    (57) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    VAR             reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    LET             reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    CONST           reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    VARIABLE        reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    FUNCTION        reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    IF              reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    SWITCH          reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    NUMBER          reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    IZQPAREN        reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    $end            reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    DERLLAVE        reduce using rule 16 (declaracionVarSinAsig -> LET VARIABLE .)
    FINALDELINEA    shift and go to state 63
    IGUAL           shift and go to state 64


state 44

    (17) declaracionVarSinAsig -> CONST VARIABLE .
    (20) declaracionVarSinAsig -> CONST VARIABLE . FINALDELINEA
    (23) declaracionVar -> CONST VARIABLE . IGUAL tipo
    (26) declaracionVar -> CONST VARIABLE . IGUAL tipo FINALDELINEA

    VAR             reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    LET             reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    CONST           reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    VARIABLE        reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    FUNCTION        reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    IF              reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    SWITCH          reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    NUMBER          reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    IZQPAREN        reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    $end            reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    DERLLAVE        reduce using rule 17 (declaracionVarSinAsig -> CONST VARIABLE .)
    FINALDELINEA    shift and go to state 65
    IGUAL           shift and go to state 66


state 45

    (34) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 67


state 46

    (75) factor -> IZQPAREN expresion . DERPAREN
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 68
    MAS             shift and go to state 27
    MENOS           shift and go to state 28


state 47

    (71) term -> term MULT . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    factor                         shift and go to state 69

state 48

    (72) term -> term DIV . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    factor                         shift and go to state 70

state 49

    (41) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 72
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    comparacion                    shift and go to state 71
    expresion                      shift and go to state 73
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 50

    (44) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 74


state 51

    (68) expresion -> expresion MAS term .
    (71) term -> term . MULT factor
    (72) term -> term . DIV factor

    MAS             reduce using rule 68 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 68 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 68 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 68 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 68 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 68 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 68 (expresion -> expresion MAS term .)
    VAR             reduce using rule 68 (expresion -> expresion MAS term .)
    LET             reduce using rule 68 (expresion -> expresion MAS term .)
    CONST           reduce using rule 68 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 68 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 68 (expresion -> expresion MAS term .)
    IF              reduce using rule 68 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 68 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 68 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 68 (expresion -> expresion MAS term .)
    $end            reduce using rule 68 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 68 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 68 (expresion -> expresion MAS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 52

    (69) expresion -> expresion MENOS term .
    (71) term -> term . MULT factor
    (72) term -> term . DIV factor

    MAS             reduce using rule 69 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 69 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 69 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 69 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 69 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 69 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 69 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 69 (expresion -> expresion MENOS term .)
    LET             reduce using rule 69 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 69 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 69 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 69 (expresion -> expresion MENOS term .)
    IF              reduce using rule 69 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 69 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 69 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 69 (expresion -> expresion MENOS term .)
    $end            reduce using rule 69 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 69 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 69 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 53

    (50) comparacion -> expresion comparador expresion .
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term

    VAR             reduce using rule 50 (comparacion -> expresion comparador expresion .)
    LET             reduce using rule 50 (comparacion -> expresion comparador expresion .)
    CONST           reduce using rule 50 (comparacion -> expresion comparador expresion .)
    VARIABLE        reduce using rule 50 (comparacion -> expresion comparador expresion .)
    FUNCTION        reduce using rule 50 (comparacion -> expresion comparador expresion .)
    IF              reduce using rule 50 (comparacion -> expresion comparador expresion .)
    SWITCH          reduce using rule 50 (comparacion -> expresion comparador expresion .)
    NUMBER          reduce using rule 50 (comparacion -> expresion comparador expresion .)
    IZQPAREN        reduce using rule 50 (comparacion -> expresion comparador expresion .)
    $end            reduce using rule 50 (comparacion -> expresion comparador expresion .)
    DERLLAVE        reduce using rule 50 (comparacion -> expresion comparador expresion .)
    DERPAREN        reduce using rule 50 (comparacion -> expresion comparador expresion .)
    MAS             shift and go to state 27
    MENOS           shift and go to state 28


state 54

    (18) declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .

    VAR             reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    LET             reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    CONST           reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    VARIABLE        reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    IF              reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    $end            reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 18 (declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA .)


state 55

    (21) declaracionVar -> VAR VARIABLE IGUAL . tipo
    (24) declaracionVar -> VAR VARIABLE IGUAL . tipo FINALDELINEA
    (56) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (64) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (36) tipo -> . NUMBER
    (37) tipo -> . STRING
    (38) tipo -> . BOOLEAN
    (39) tipo -> . BIGINT
    (40) tipo -> . SYMBOL

    IZQCORCHETE     shift and go to state 77
    VARIABLE        shift and go to state 75
    NUMBER          shift and go to state 57
    STRING          shift and go to state 58
    BOOLEAN         shift and go to state 59
    BIGINT          shift and go to state 60
    SYMBOL          shift and go to state 61

    tipo                           shift and go to state 76

state 56

    (27) asignacion -> VARIABLE operadoresAsig tipo .
    (28) asignacion -> VARIABLE operadoresAsig tipo . FINALDELINEA

    VAR             reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    LET             reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    CONST           reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    VARIABLE        reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    FUNCTION        reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    IF              reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    SWITCH          reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    NUMBER          reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    IZQPAREN        reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    $end            reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    DERLLAVE        reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    BREAK           reduce using rule 27 (asignacion -> VARIABLE operadoresAsig tipo .)
    FINALDELINEA    shift and go to state 78


state 57

    (36) tipo -> NUMBER .

    FINALDELINEA    reduce using rule 36 (tipo -> NUMBER .)
    VAR             reduce using rule 36 (tipo -> NUMBER .)
    LET             reduce using rule 36 (tipo -> NUMBER .)
    CONST           reduce using rule 36 (tipo -> NUMBER .)
    VARIABLE        reduce using rule 36 (tipo -> NUMBER .)
    FUNCTION        reduce using rule 36 (tipo -> NUMBER .)
    IF              reduce using rule 36 (tipo -> NUMBER .)
    SWITCH          reduce using rule 36 (tipo -> NUMBER .)
    NUMBER          reduce using rule 36 (tipo -> NUMBER .)
    IZQPAREN        reduce using rule 36 (tipo -> NUMBER .)
    $end            reduce using rule 36 (tipo -> NUMBER .)
    DERLLAVE        reduce using rule 36 (tipo -> NUMBER .)
    BREAK           reduce using rule 36 (tipo -> NUMBER .)
    DOSPUNTOS       reduce using rule 36 (tipo -> NUMBER .)


state 58

    (37) tipo -> STRING .

    FINALDELINEA    reduce using rule 37 (tipo -> STRING .)
    VAR             reduce using rule 37 (tipo -> STRING .)
    LET             reduce using rule 37 (tipo -> STRING .)
    CONST           reduce using rule 37 (tipo -> STRING .)
    VARIABLE        reduce using rule 37 (tipo -> STRING .)
    FUNCTION        reduce using rule 37 (tipo -> STRING .)
    IF              reduce using rule 37 (tipo -> STRING .)
    SWITCH          reduce using rule 37 (tipo -> STRING .)
    NUMBER          reduce using rule 37 (tipo -> STRING .)
    IZQPAREN        reduce using rule 37 (tipo -> STRING .)
    $end            reduce using rule 37 (tipo -> STRING .)
    DERLLAVE        reduce using rule 37 (tipo -> STRING .)
    BREAK           reduce using rule 37 (tipo -> STRING .)
    DOSPUNTOS       reduce using rule 37 (tipo -> STRING .)


state 59

    (38) tipo -> BOOLEAN .

    FINALDELINEA    reduce using rule 38 (tipo -> BOOLEAN .)
    VAR             reduce using rule 38 (tipo -> BOOLEAN .)
    LET             reduce using rule 38 (tipo -> BOOLEAN .)
    CONST           reduce using rule 38 (tipo -> BOOLEAN .)
    VARIABLE        reduce using rule 38 (tipo -> BOOLEAN .)
    FUNCTION        reduce using rule 38 (tipo -> BOOLEAN .)
    IF              reduce using rule 38 (tipo -> BOOLEAN .)
    SWITCH          reduce using rule 38 (tipo -> BOOLEAN .)
    NUMBER          reduce using rule 38 (tipo -> BOOLEAN .)
    IZQPAREN        reduce using rule 38 (tipo -> BOOLEAN .)
    $end            reduce using rule 38 (tipo -> BOOLEAN .)
    DERLLAVE        reduce using rule 38 (tipo -> BOOLEAN .)
    BREAK           reduce using rule 38 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 38 (tipo -> BOOLEAN .)


state 60

    (39) tipo -> BIGINT .

    FINALDELINEA    reduce using rule 39 (tipo -> BIGINT .)
    VAR             reduce using rule 39 (tipo -> BIGINT .)
    LET             reduce using rule 39 (tipo -> BIGINT .)
    CONST           reduce using rule 39 (tipo -> BIGINT .)
    VARIABLE        reduce using rule 39 (tipo -> BIGINT .)
    FUNCTION        reduce using rule 39 (tipo -> BIGINT .)
    IF              reduce using rule 39 (tipo -> BIGINT .)
    SWITCH          reduce using rule 39 (tipo -> BIGINT .)
    NUMBER          reduce using rule 39 (tipo -> BIGINT .)
    IZQPAREN        reduce using rule 39 (tipo -> BIGINT .)
    $end            reduce using rule 39 (tipo -> BIGINT .)
    DERLLAVE        reduce using rule 39 (tipo -> BIGINT .)
    BREAK           reduce using rule 39 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 39 (tipo -> BIGINT .)


state 61

    (40) tipo -> SYMBOL .

    FINALDELINEA    reduce using rule 40 (tipo -> SYMBOL .)
    VAR             reduce using rule 40 (tipo -> SYMBOL .)
    LET             reduce using rule 40 (tipo -> SYMBOL .)
    CONST           reduce using rule 40 (tipo -> SYMBOL .)
    VARIABLE        reduce using rule 40 (tipo -> SYMBOL .)
    FUNCTION        reduce using rule 40 (tipo -> SYMBOL .)
    IF              reduce using rule 40 (tipo -> SYMBOL .)
    SWITCH          reduce using rule 40 (tipo -> SYMBOL .)
    NUMBER          reduce using rule 40 (tipo -> SYMBOL .)
    IZQPAREN        reduce using rule 40 (tipo -> SYMBOL .)
    $end            reduce using rule 40 (tipo -> SYMBOL .)
    DERLLAVE        reduce using rule 40 (tipo -> SYMBOL .)
    BREAK           reduce using rule 40 (tipo -> SYMBOL .)
    DOSPUNTOS       reduce using rule 40 (tipo -> SYMBOL .)


state 62

    (49) comparacion -> VARIABLE comparador VARIABLE .

    VAR             reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    LET             reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    CONST           reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    VARIABLE        reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    FUNCTION        reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    IF              reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    SWITCH          reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    NUMBER          reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    IZQPAREN        reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    $end            reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    DERLLAVE        reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)
    DERPAREN        reduce using rule 49 (comparacion -> VARIABLE comparador VARIABLE .)


state 63

    (19) declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .

    VAR             reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    LET             reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    CONST           reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    VARIABLE        reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    IF              reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    $end            reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 19 (declaracionVarSinAsig -> LET VARIABLE FINALDELINEA .)


state 64

    (22) declaracionVar -> LET VARIABLE IGUAL . tipo
    (25) declaracionVar -> LET VARIABLE IGUAL . tipo FINALDELINEA
    (57) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (66) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (67) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (36) tipo -> . NUMBER
    (37) tipo -> . STRING
    (38) tipo -> . BOOLEAN
    (39) tipo -> . BIGINT
    (40) tipo -> . SYMBOL

    IZQCORCHETE     shift and go to state 80
    NEW             shift and go to state 81
    NUMBER          shift and go to state 57
    STRING          shift and go to state 58
    BOOLEAN         shift and go to state 59
    BIGINT          shift and go to state 60
    SYMBOL          shift and go to state 61

    tipo                           shift and go to state 79

state 65

    (20) declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .

    VAR             reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    LET             reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    CONST           reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    VARIABLE        reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    IF              reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    $end            reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 20 (declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA .)


state 66

    (23) declaracionVar -> CONST VARIABLE IGUAL . tipo
    (26) declaracionVar -> CONST VARIABLE IGUAL . tipo FINALDELINEA
    (36) tipo -> . NUMBER
    (37) tipo -> . STRING
    (38) tipo -> . BOOLEAN
    (39) tipo -> . BIGINT
    (40) tipo -> . SYMBOL

    NUMBER          shift and go to state 57
    STRING          shift and go to state 58
    BOOLEAN         shift and go to state 59
    BIGINT          shift and go to state 60
    SYMBOL          shift and go to state 61

    tipo                           shift and go to state 82

state 67

    (34) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 83
    DERPAREN        shift and go to state 84


state 68

    (75) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 75 (factor -> IZQPAREN expresion DERPAREN .)


state 69

    (71) term -> term MULT factor .

    MULT            reduce using rule 71 (term -> term MULT factor .)
    DIV             reduce using rule 71 (term -> term MULT factor .)
    MAS             reduce using rule 71 (term -> term MULT factor .)
    MENOS           reduce using rule 71 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 71 (term -> term MULT factor .)
    MENORQUE        reduce using rule 71 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 71 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 71 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 71 (term -> term MULT factor .)
    VAR             reduce using rule 71 (term -> term MULT factor .)
    LET             reduce using rule 71 (term -> term MULT factor .)
    CONST           reduce using rule 71 (term -> term MULT factor .)
    VARIABLE        reduce using rule 71 (term -> term MULT factor .)
    FUNCTION        reduce using rule 71 (term -> term MULT factor .)
    IF              reduce using rule 71 (term -> term MULT factor .)
    SWITCH          reduce using rule 71 (term -> term MULT factor .)
    NUMBER          reduce using rule 71 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 71 (term -> term MULT factor .)
    $end            reduce using rule 71 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 71 (term -> term MULT factor .)
    DERPAREN        reduce using rule 71 (term -> term MULT factor .)


state 70

    (72) term -> term DIV factor .

    MULT            reduce using rule 72 (term -> term DIV factor .)
    DIV             reduce using rule 72 (term -> term DIV factor .)
    MAS             reduce using rule 72 (term -> term DIV factor .)
    MENOS           reduce using rule 72 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 72 (term -> term DIV factor .)
    MENORQUE        reduce using rule 72 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 72 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 72 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 72 (term -> term DIV factor .)
    VAR             reduce using rule 72 (term -> term DIV factor .)
    LET             reduce using rule 72 (term -> term DIV factor .)
    CONST           reduce using rule 72 (term -> term DIV factor .)
    VARIABLE        reduce using rule 72 (term -> term DIV factor .)
    FUNCTION        reduce using rule 72 (term -> term DIV factor .)
    IF              reduce using rule 72 (term -> term DIV factor .)
    SWITCH          reduce using rule 72 (term -> term DIV factor .)
    NUMBER          reduce using rule 72 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 72 (term -> term DIV factor .)
    $end            reduce using rule 72 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 72 (term -> term DIV factor .)
    DERPAREN        reduce using rule 72 (term -> term DIV factor .)


state 71

    (41) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 85


state 72

    (49) comparacion -> VARIABLE . comparador VARIABLE
    (51) comparador -> . MAYORQUE
    (52) comparador -> . MENORQUE
    (53) comparador -> . MAYORIGUALQUE
    (54) comparador -> . MENORIGUALQUE
    (55) comparador -> . NOIGUALQUE

    MAYORQUE        shift and go to state 30
    MENORQUE        shift and go to state 31
    MAYORIGUALQUE   shift and go to state 32
    MENORIGUALQUE   shift and go to state 33
    NOIGUALQUE      shift and go to state 34

    comparador                     shift and go to state 37

state 73

    (50) comparacion -> expresion . comparador expresion
    (68) expresion -> expresion . MAS term
    (69) expresion -> expresion . MENOS term
    (51) comparador -> . MAYORQUE
    (52) comparador -> . MENORQUE
    (53) comparador -> . MAYORIGUALQUE
    (54) comparador -> . MENORIGUALQUE
    (55) comparador -> . NOIGUALQUE

    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    MAYORQUE        shift and go to state 30
    MENORQUE        shift and go to state 31
    MAYORIGUALQUE   shift and go to state 32
    MENORIGUALQUE   shift and go to state 33
    NOIGUALQUE      shift and go to state 34

    comparador                     shift and go to state 29

state 74

    (44) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 86


state 75

    (64) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA

    PUNTO           shift and go to state 87


state 76

    (21) declaracionVar -> VAR VARIABLE IGUAL tipo .
    (24) declaracionVar -> VAR VARIABLE IGUAL tipo . FINALDELINEA

    VAR             reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    LET             reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    CONST           reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    VARIABLE        reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    FUNCTION        reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    IF              reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    SWITCH          reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    NUMBER          reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    IZQPAREN        reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    $end            reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    DERLLAVE        reduce using rule 21 (declaracionVar -> VAR VARIABLE IGUAL tipo .)
    FINALDELINEA    shift and go to state 88


state 77

    (56) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (58) lista -> . lista COMA lista
    (59) lista -> . STRING
    (60) lista -> . SYMBOL
    (61) lista -> . NUMBER
    (62) lista -> . BIGINT
    (63) lista -> . BOOLEAN

    STRING          shift and go to state 90
    SYMBOL          shift and go to state 91
    NUMBER          shift and go to state 92
    BIGINT          shift and go to state 93
    BOOLEAN         shift and go to state 94

    lista                          shift and go to state 89

state 78

    (28) asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .

    VAR             reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    LET             reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    CONST           reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    VARIABLE        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    FUNCTION        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    IF              reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    SWITCH          reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    NUMBER          reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    $end            reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)
    BREAK           reduce using rule 28 (asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA .)


state 79

    (22) declaracionVar -> LET VARIABLE IGUAL tipo .
    (25) declaracionVar -> LET VARIABLE IGUAL tipo . FINALDELINEA

    VAR             reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    LET             reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    CONST           reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    VARIABLE        reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    FUNCTION        reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    IF              reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    SWITCH          reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    NUMBER          reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    IZQPAREN        reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    $end            reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    DERLLAVE        reduce using rule 22 (declaracionVar -> LET VARIABLE IGUAL tipo .)
    FINALDELINEA    shift and go to state 95


state 80

    (57) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (58) lista -> . lista COMA lista
    (59) lista -> . STRING
    (60) lista -> . SYMBOL
    (61) lista -> . NUMBER
    (62) lista -> . BIGINT
    (63) lista -> . BOOLEAN

    STRING          shift and go to state 90
    SYMBOL          shift and go to state 91
    NUMBER          shift and go to state 92
    BIGINT          shift and go to state 93
    BOOLEAN         shift and go to state 94

    lista                          shift and go to state 96

state 81

    (66) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (67) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 97


state 82

    (23) declaracionVar -> CONST VARIABLE IGUAL tipo .
    (26) declaracionVar -> CONST VARIABLE IGUAL tipo . FINALDELINEA

    VAR             reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    LET             reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    CONST           reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    VARIABLE        reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    FUNCTION        reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    IF              reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    SWITCH          reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    NUMBER          reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    IZQPAREN        reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    $end            reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    DERLLAVE        reduce using rule 23 (declaracionVar -> CONST VARIABLE IGUAL tipo .)
    FINALDELINEA    shift and go to state 98


state 83

    (34) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 99


state 84

    (35) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 100


state 85

    (41) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (42) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (43) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 101


state 86

    (44) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 102


state 87

    (64) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA

    POP             shift and go to state 103
    PUSH            shift and go to state 104


state 88

    (24) declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .

    VAR             reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    LET             reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    CONST           reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    VARIABLE        reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    FUNCTION        reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    IF              reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    SWITCH          reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    NUMBER          reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    $end            reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 24 (declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA .)


state 89

    (56) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (58) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 105
    COMA            shift and go to state 106


state 90

    (59) lista -> STRING .

    DERCORCHETE     reduce using rule 59 (lista -> STRING .)
    COMA            reduce using rule 59 (lista -> STRING .)
    DERPAREN        reduce using rule 59 (lista -> STRING .)


state 91

    (60) lista -> SYMBOL .

    DERCORCHETE     reduce using rule 60 (lista -> SYMBOL .)
    COMA            reduce using rule 60 (lista -> SYMBOL .)
    DERPAREN        reduce using rule 60 (lista -> SYMBOL .)


state 92

    (61) lista -> NUMBER .

    DERCORCHETE     reduce using rule 61 (lista -> NUMBER .)
    COMA            reduce using rule 61 (lista -> NUMBER .)
    DERPAREN        reduce using rule 61 (lista -> NUMBER .)


state 93

    (62) lista -> BIGINT .

    DERCORCHETE     reduce using rule 62 (lista -> BIGINT .)
    COMA            reduce using rule 62 (lista -> BIGINT .)
    DERPAREN        reduce using rule 62 (lista -> BIGINT .)


state 94

    (63) lista -> BOOLEAN .

    DERCORCHETE     reduce using rule 63 (lista -> BOOLEAN .)
    COMA            reduce using rule 63 (lista -> BOOLEAN .)
    DERPAREN        reduce using rule 63 (lista -> BOOLEAN .)


state 95

    (25) declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .

    VAR             reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    LET             reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    CONST           reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    VARIABLE        reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    FUNCTION        reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    IF              reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    SWITCH          reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    NUMBER          reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    $end            reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 25 (declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA .)


state 96

    (57) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (58) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 107
    COMA            shift and go to state 106


state 97

    (66) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (67) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 108


state 98

    (26) declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .

    VAR             reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    LET             reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    CONST           reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    VARIABLE        reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    FUNCTION        reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    IF              reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    SWITCH          reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    NUMBER          reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    IZQPAREN        reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    $end            reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)
    DERLLAVE        reduce using rule 26 (declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA .)


state 99

    (34) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 109


state 100

    (35) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) declaracionVarSinAsig -> . VAR VARIABLE
    (16) declaracionVarSinAsig -> . LET VARIABLE
    (17) declaracionVarSinAsig -> . CONST VARIABLE
    (18) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (19) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (21) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (22) declaracionVar -> . LET VARIABLE IGUAL tipo
    (23) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (24) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (25) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (56) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (57) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (44) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 19
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    js                             shift and go to state 110
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 101

    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (42) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) declaracionVarSinAsig -> . VAR VARIABLE
    (16) declaracionVarSinAsig -> . LET VARIABLE
    (17) declaracionVarSinAsig -> . CONST VARIABLE
    (18) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (19) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (21) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (22) declaracionVar -> . LET VARIABLE IGUAL tipo
    (23) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (24) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (25) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (56) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (57) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (44) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 19
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    comparacion                    shift and go to state 8
    js                             shift and go to state 111
    if                             shift and go to state 11
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 102

    (44) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (47) ncasos -> . casos
    (48) ncasos -> . casos ncasos
    (45) casos -> . CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA
    (46) casos -> . CASE tipo DOSPUNTOS

    CASE            shift and go to state 114

    ncasos                         shift and go to state 112
    casos                          shift and go to state 113

state 103

    (64) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 115


state 104

    (65) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 116


state 105

    (56) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VAR             reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 106

    (58) lista -> lista COMA . lista
    (58) lista -> . lista COMA lista
    (59) lista -> . STRING
    (60) lista -> . SYMBOL
    (61) lista -> . NUMBER
    (62) lista -> . BIGINT
    (63) lista -> . BOOLEAN

    STRING          shift and go to state 90
    SYMBOL          shift and go to state 91
    NUMBER          shift and go to state 92
    BIGINT          shift and go to state 93
    BOOLEAN         shift and go to state 94

    lista                          shift and go to state 117

state 107

    (57) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    VAR             reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 57 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 108

    (66) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (67) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 118


state 109

    (34) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) declaracionVarSinAsig -> . VAR VARIABLE
    (16) declaracionVarSinAsig -> . LET VARIABLE
    (17) declaracionVarSinAsig -> . CONST VARIABLE
    (18) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (19) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (21) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (22) declaracionVar -> . LET VARIABLE IGUAL tipo
    (23) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (24) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (25) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (56) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (57) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (44) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 19
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    js                             shift and go to state 119
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 110

    (35) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 120


state 111

    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (42) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 121


state 112

    (44) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 122


state 113

    (47) ncasos -> casos .
    (48) ncasos -> casos . ncasos
    (47) ncasos -> . casos
    (48) ncasos -> . casos ncasos
    (45) casos -> . CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA
    (46) casos -> . CASE tipo DOSPUNTOS

    DEFAULT         reduce using rule 47 (ncasos -> casos .)
    CASE            shift and go to state 114

    casos                          shift and go to state 113
    ncasos                         shift and go to state 123

state 114

    (45) casos -> CASE . tipo DOSPUNTOS asignacion BREAK FINALDELINEA
    (46) casos -> CASE . tipo DOSPUNTOS
    (36) tipo -> . NUMBER
    (37) tipo -> . STRING
    (38) tipo -> . BOOLEAN
    (39) tipo -> . BIGINT
    (40) tipo -> . SYMBOL

    NUMBER          shift and go to state 57
    STRING          shift and go to state 58
    BOOLEAN         shift and go to state 59
    BIGINT          shift and go to state 60
    SYMBOL          shift and go to state 61

    tipo                           shift and go to state 124

state 115

    (64) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 125


state 116

    (65) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (58) lista -> . lista COMA lista
    (59) lista -> . STRING
    (60) lista -> . SYMBOL
    (61) lista -> . NUMBER
    (62) lista -> . BIGINT
    (63) lista -> . BOOLEAN

    STRING          shift and go to state 90
    SYMBOL          shift and go to state 91
    NUMBER          shift and go to state 92
    BIGINT          shift and go to state 93
    BOOLEAN         shift and go to state 94

    lista                          shift and go to state 126

state 117

    (58) lista -> lista COMA lista .
    (58) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 58 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 58 (lista -> lista COMA lista .)
    COMA            shift and go to state 106

  ! COMA            [ reduce using rule 58 (lista -> lista COMA lista .) ]


state 118

    (66) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (67) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VAR             reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 66 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 127


state 119

    (34) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 128


state 120

    (35) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 35 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 121

    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (42) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VAR             reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 130
    IF              shift and go to state 22

  ! IF              [ reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 129

state 122

    (44) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 131


state 123

    (48) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 48 (ncasos -> casos ncasos .)


state 124

    (45) casos -> CASE tipo . DOSPUNTOS asignacion BREAK FINALDELINEA
    (46) casos -> CASE tipo . DOSPUNTOS

    DOSPUNTOS       shift and go to state 132


state 125

    (64) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 133


state 126

    (65) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (58) lista -> lista . COMA lista

    DERPAREN        shift and go to state 134
    COMA            shift and go to state 106


state 127

    (67) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 67 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 128

    (34) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 34 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 129

    (42) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VAR             reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VARIABLE        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 42 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 130

    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 135


state 131

    (44) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) declaracionVarSinAsig -> . VAR VARIABLE
    (16) declaracionVarSinAsig -> . LET VARIABLE
    (17) declaracionVarSinAsig -> . CONST VARIABLE
    (18) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (19) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (21) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (22) declaracionVar -> . LET VARIABLE IGUAL tipo
    (23) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (24) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (25) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (56) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (57) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (44) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 19
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    js                             shift and go to state 136
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    comparacion                    shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 132

    (45) casos -> CASE tipo DOSPUNTOS . asignacion BREAK FINALDELINEA
    (46) casos -> CASE tipo DOSPUNTOS .
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA

    CASE            reduce using rule 46 (casos -> CASE tipo DOSPUNTOS .)
    DEFAULT         reduce using rule 46 (casos -> CASE tipo DOSPUNTOS .)
    VARIABLE        shift and go to state 138

    asignacion                     shift and go to state 137

state 133

    (64) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 64 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 134

    (65) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA

    FINALDELINEA    shift and go to state 139


state 135

    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . declaracionVar
    (5) instrucciones -> . asignacion
    (6) instrucciones -> . funcion
    (7) instrucciones -> . expresion
    (8) instrucciones -> . comparacion
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) declaracionVarSinAsig -> . VAR VARIABLE
    (16) declaracionVarSinAsig -> . LET VARIABLE
    (17) declaracionVarSinAsig -> . CONST VARIABLE
    (18) declaracionVarSinAsig -> . VAR VARIABLE FINALDELINEA
    (19) declaracionVarSinAsig -> . LET VARIABLE FINALDELINEA
    (20) declaracionVarSinAsig -> . CONST VARIABLE FINALDELINEA
    (21) declaracionVar -> . VAR VARIABLE IGUAL tipo
    (22) declaracionVar -> . LET VARIABLE IGUAL tipo
    (23) declaracionVar -> . CONST VARIABLE IGUAL tipo
    (24) declaracionVar -> . VAR VARIABLE IGUAL tipo FINALDELINEA
    (25) declaracionVar -> . LET VARIABLE IGUAL tipo FINALDELINEA
    (26) declaracionVar -> . CONST VARIABLE IGUAL tipo FINALDELINEA
    (27) asignacion -> . VARIABLE operadoresAsig tipo
    (28) asignacion -> . VARIABLE operadoresAsig tipo FINALDELINEA
    (34) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (35) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (68) expresion -> . expresion MAS term
    (69) expresion -> . expresion MENOS term
    (70) expresion -> . term
    (49) comparacion -> . VARIABLE comparador VARIABLE
    (50) comparacion -> . expresion comparador expresion
    (56) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (57) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (66) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (67) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (42) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (43) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (44) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (64) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (65) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (71) term -> . term MULT factor
    (72) term -> . term DIV factor
    (73) term -> . factor
    (74) factor -> . NUMBER
    (75) factor -> . IZQPAREN expresion DERPAREN

    VAR             shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 19
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    NUMBER          shift and go to state 25
    IZQPAREN        shift and go to state 20

    comparacion                    shift and go to state 8
    js                             shift and go to state 140
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    declaracionVar                 shift and go to state 4
    asignacion                     shift and go to state 5
    funcion                        shift and go to state 6
    expresion                      shift and go to state 7
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    term                           shift and go to state 21
    factor                         shift and go to state 24

state 136

    (44) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 141


state 137

    (45) casos -> CASE tipo DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 142


state 138

    (27) asignacion -> VARIABLE . operadoresAsig tipo
    (28) asignacion -> VARIABLE . operadoresAsig tipo FINALDELINEA
    (29) operadoresAsig -> . IGUAL
    (30) operadoresAsig -> . MASIGUAL
    (31) operadoresAsig -> . MENOSIGUAL
    (32) operadoresAsig -> . DIVIGUAL
    (33) operadoresAsig -> . MODIGUAL

    IGUAL           shift and go to state 38
    MASIGUAL        shift and go to state 39
    MENOSIGUAL      shift and go to state 40
    DIVIGUAL        shift and go to state 41
    MODIGUAL        shift and go to state 42

    operadoresAsig                 shift and go to state 36

state 139

    (65) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 65 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 140

    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 143


state 141

    (44) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VAR             reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VARIABLE        reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 44 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 142

    (45) casos -> CASE tipo DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 144


state 143

    (43) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 43 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 144

    (45) casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 45 (casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 45 (casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMA in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 121 resolved as shift
