Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BOOL
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FLOTANTE
    FOR
    GET
    IGUALIGUAL
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    MULTIGUAL
    NULL
    NUMERO
    OR
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SUPER
    UNDEFINED
    VOID
    WHILE

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracionVarSinAsig
Rule 4     instrucciones -> asignacion
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> arreglo
Rule 9     instrucciones -> map
Rule 10    instrucciones -> if
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> pop
Rule 13    instrucciones -> push
Rule 14    instrucciones -> mapSet
Rule 15    declaracionVarSinAsig -> declarador VARIABLE
Rule 16    declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA
Rule 17    asignacion -> VARIABLE operadoresAsig tipoDato
Rule 18    asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA
Rule 19    asignacion -> VARIABLE IGUAL comparacion
Rule 20    asignacion -> VARIABLE IGUAL comparacion FINALDELINEA
Rule 21    asignacion -> VARIABLE IGUAL expresion
Rule 22    asignacion -> VARIABLE IGUAL expresion FINALDELINEA
Rule 23    declarador -> VAR
Rule 24    declarador -> LET
Rule 25    declarador -> CONST
Rule 26    operadoresAsig -> IGUAL
Rule 27    operadoresAsig -> MASIGUAL
Rule 28    operadoresAsig -> MENOSIGUAL
Rule 29    operadoresAsig -> DIVIGUAL
Rule 30    operadoresAsig -> MODIGUAL
Rule 31    tipoDato -> NUMBER
Rule 32    tipoDato -> STRING
Rule 33    tipoDato -> BOOLEAN
Rule 34    tipoDato -> BIGINT
Rule 35    tipoDato -> SYMBOL
Rule 36    empty -> <empty>
Rule 37    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 38    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 39    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 40    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 41    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 42    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 43    casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 44    casos -> CASE tipoDato DOSPUNTOS
Rule 45    ncasos -> casos
Rule 46    ncasos -> casos ncasos
Rule 47    comparacion -> VARIABLE comparador VARIABLE
Rule 48    comparacion -> expresion comparador expresion
Rule 49    comparador -> MAYORQUE
Rule 50    comparador -> MENORQUE
Rule 51    comparador -> MAYORIGUALQUE
Rule 52    comparador -> MENORIGUALQUE
Rule 53    comparador -> NOIGUALQUE
Rule 54    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 55    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 56    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 57    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 58    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 59    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 60    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 61    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 62    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 63    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 64    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 65    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 66    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 67    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 68    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 69    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 70    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 71    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 72    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 73    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 74    lista -> lista COMA lista
Rule 75    lista -> STRING
Rule 76    lista -> SYMBOL
Rule 77    lista -> NUMBER
Rule 78    lista -> BIGINT
Rule 79    lista -> BOOLEAN
Rule 80    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 81    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
Rule 82    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 83    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
Rule 84    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 85    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 86    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 87    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 88    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 89    map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 90    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
Rule 91    mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
Rule 92    expresion -> expresion MAS term
Rule 93    expresion -> expresion MENOS term
Rule 94    expresion -> term
Rule 95    term -> term MULT factor
Rule 96    term -> term MULT VARIABLE
Rule 97    term -> term DIV factor
Rule 98    term -> factor
Rule 99    factor -> VARIABLE
Rule 100   factor -> NUMBER
Rule 101   factor -> IZQPAREN expresion DERPAREN

Terminals, with rules where they appear

AND                  : 
ARRAY                : 55 56 57 60 61 62 65 66 67 70 71 72
AWAIT                : 
BIGINT               : 34 78
BOOL                 : 
BOOLEAN              : 33 79
BREAK                : 43
CASE                 : 43 44
CATCH                : 
CLASS                : 
COMA                 : 74 90 91
CONST                : 25 88 89
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 42
DELETE               : 
DERCORCHETE          : 54 58 59 63 64 68 69 73
DERLLAVE             : 37 38 39 40 41 41 42
DERPAREN             : 37 38 39 40 41 42 55 56 57 60 61 62 65 66 67 70 71 72 80 81 82 83 84 85 86 87 88 89 90 91 101
DIV                  : 97
DIVIGUAL             : 29
DO                   : 
DOSPUNTOS            : 42 43 44
ELSE                 : 41
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 16 18 20 22 43 54 55 56 57 58 59 60 61 62 63 80 82 85 87 89 91
FLOTANTE             : 
FOR                  : 
FUNCTION             : 37 38
GET                  : 
IF                   : 39 40 41
IGUAL                : 19 20 21 22 26 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 80 81 82 83 84 85 86 87 88 89
IGUALIGUAL           : 
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 54 58 59 63 64 68 69 73
IZQLLAVE             : 37 38 39 40 41 41 42
IZQPAREN             : 37 38 39 40 41 42 55 56 57 60 61 62 65 66 67 70 71 72 80 81 82 83 84 85 86 87 88 89 90 91 101
LET                  : 24 59 60 61 62 63 69 70 71 72 73 84 85
MAP                  : 84 85 86 87 88 89
MAPLOWER             : 90 91
MAS                  : 92
MASIGUAL             : 27
MAYORIGUALQUE        : 51
MAYORQUE             : 49
MENORIGUALQUE        : 52
MENORQUE             : 50
MENOS                : 93
MENOSIGUAL           : 28
MODIGUAL             : 30
MULT                 : 95 96
MULTIGUAL            : 
NEW                  : 55 56 57 60 61 62 65 66 67 70 71 72 84 85 86 87 88 89
NOIGUALQUE           : 53
NULL                 : 
NUMBER               : 31 56 61 66 71 77 100
NUMERO               : 
OR                   : 
PACKAGE              : 
POP                  : 80 81
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 80 81 82 83 90 91
PUSH                 : 82 83
RETURN               : 
SET                  : 90 91
STRING               : 32 75
SUPER                : 
SWITCH               : 42
SYMBOL               : 35 76
UNDEFINED            : 
VAR                  : 23 54 55 56 57 58 64 65 66 67 68 80 81 82 83 86 87
VARIABLE             : 15 16 17 18 19 20 21 22 37 37 38 42 47 47 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 80 80 81 81 82 82 83 83 84 85 86 87 88 89 96 99
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 4 43
casos                : 45 46
comparacion          : 7 19 20 39 40 41
comparador           : 47 48
declaracionVarSinAsig : 3
declarador           : 15 16
empty                : 
expresion            : 6 21 22 48 48 92 93 101
factor               : 95 97 98
funcion              : 5
if                   : 10 40
instrucciones        : 1 2
js                   : 2 37 38 39 40 41 41 42 0
lista                : 54 57 59 62 64 67 69 72 74 74 82 83
map                  : 9
mapSet               : 14
ncasos               : 42 46
operadoresAsig       : 17 18
pop                  : 12
push                 : 13
switch               : 11
term                 : 92 93 94 95 96 97
tipoDato             : 17 18 43 44 90 90 91 91

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (54) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (59) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (69) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (86) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (88) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (42) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (80) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (90) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (23) declarador -> . VAR
    (24) declarador -> . LET
    (25) declarador -> . CONST
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (54) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (59) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (69) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (86) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (88) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (42) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (80) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (90) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (23) declarador -> . VAR
    (24) declarador -> . LET
    (25) declarador -> . CONST
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    instrucciones                  shift and go to state 2
    js                             shift and go to state 28
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 3

    (3) instrucciones -> declaracionVarSinAsig .

    VARIABLE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    VAR             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    LET             reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    CONST           reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IF              reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    $end            reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracionVarSinAsig .)


state 4

    (4) instrucciones -> asignacion .

    VARIABLE        reduce using rule 4 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion .)
    VAR             reduce using rule 4 (instrucciones -> asignacion .)
    LET             reduce using rule 4 (instrucciones -> asignacion .)
    CONST           reduce using rule 4 (instrucciones -> asignacion .)
    IF              reduce using rule 4 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion .)
    $end            reduce using rule 4 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion .)


state 5

    (5) instrucciones -> funcion .

    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion .
    (92) expresion -> expresion . MAS term
    (93) expresion -> expresion . MENOS term
    (48) comparacion -> expresion . comparador expresion
    (49) comparador -> . MAYORQUE
    (50) comparador -> . MENORQUE
    (51) comparador -> . MAYORIGUALQUE
    (52) comparador -> . MENORIGUALQUE
    (53) comparador -> . NOIGUALQUE

    VARIABLE        reduce using rule 6 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion .)
    VAR             reduce using rule 6 (instrucciones -> expresion .)
    LET             reduce using rule 6 (instrucciones -> expresion .)
    CONST           reduce using rule 6 (instrucciones -> expresion .)
    IF              reduce using rule 6 (instrucciones -> expresion .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion .)
    $end            reduce using rule 6 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion .)
    MAS             shift and go to state 29
    MENOS           shift and go to state 30
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 31

state 7

    (7) instrucciones -> comparacion .

    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> arreglo .

    VARIABLE        reduce using rule 8 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 8 (instrucciones -> arreglo .)
    VAR             reduce using rule 8 (instrucciones -> arreglo .)
    LET             reduce using rule 8 (instrucciones -> arreglo .)
    CONST           reduce using rule 8 (instrucciones -> arreglo .)
    IF              reduce using rule 8 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 8 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 8 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 8 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 8 (instrucciones -> arreglo .)
    $end            reduce using rule 8 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 8 (instrucciones -> arreglo .)


state 9

    (9) instrucciones -> map .

    VARIABLE        reduce using rule 9 (instrucciones -> map .)
    FUNCTION        reduce using rule 9 (instrucciones -> map .)
    VAR             reduce using rule 9 (instrucciones -> map .)
    LET             reduce using rule 9 (instrucciones -> map .)
    CONST           reduce using rule 9 (instrucciones -> map .)
    IF              reduce using rule 9 (instrucciones -> map .)
    SWITCH          reduce using rule 9 (instrucciones -> map .)
    MAPLOWER        reduce using rule 9 (instrucciones -> map .)
    NUMBER          reduce using rule 9 (instrucciones -> map .)
    IZQPAREN        reduce using rule 9 (instrucciones -> map .)
    $end            reduce using rule 9 (instrucciones -> map .)
    DERLLAVE        reduce using rule 9 (instrucciones -> map .)


state 10

    (10) instrucciones -> if .

    VARIABLE        reduce using rule 10 (instrucciones -> if .)
    FUNCTION        reduce using rule 10 (instrucciones -> if .)
    VAR             reduce using rule 10 (instrucciones -> if .)
    LET             reduce using rule 10 (instrucciones -> if .)
    CONST           reduce using rule 10 (instrucciones -> if .)
    IF              reduce using rule 10 (instrucciones -> if .)
    SWITCH          reduce using rule 10 (instrucciones -> if .)
    MAPLOWER        reduce using rule 10 (instrucciones -> if .)
    NUMBER          reduce using rule 10 (instrucciones -> if .)
    IZQPAREN        reduce using rule 10 (instrucciones -> if .)
    $end            reduce using rule 10 (instrucciones -> if .)
    DERLLAVE        reduce using rule 10 (instrucciones -> if .)


state 11

    (11) instrucciones -> switch .

    VARIABLE        reduce using rule 11 (instrucciones -> switch .)
    FUNCTION        reduce using rule 11 (instrucciones -> switch .)
    VAR             reduce using rule 11 (instrucciones -> switch .)
    LET             reduce using rule 11 (instrucciones -> switch .)
    CONST           reduce using rule 11 (instrucciones -> switch .)
    IF              reduce using rule 11 (instrucciones -> switch .)
    SWITCH          reduce using rule 11 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 11 (instrucciones -> switch .)
    NUMBER          reduce using rule 11 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 11 (instrucciones -> switch .)
    $end            reduce using rule 11 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 11 (instrucciones -> switch .)


state 12

    (12) instrucciones -> pop .

    VARIABLE        reduce using rule 12 (instrucciones -> pop .)
    FUNCTION        reduce using rule 12 (instrucciones -> pop .)
    VAR             reduce using rule 12 (instrucciones -> pop .)
    LET             reduce using rule 12 (instrucciones -> pop .)
    CONST           reduce using rule 12 (instrucciones -> pop .)
    IF              reduce using rule 12 (instrucciones -> pop .)
    SWITCH          reduce using rule 12 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 12 (instrucciones -> pop .)
    NUMBER          reduce using rule 12 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 12 (instrucciones -> pop .)
    $end            reduce using rule 12 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 12 (instrucciones -> pop .)


state 13

    (13) instrucciones -> push .

    VARIABLE        reduce using rule 13 (instrucciones -> push .)
    FUNCTION        reduce using rule 13 (instrucciones -> push .)
    VAR             reduce using rule 13 (instrucciones -> push .)
    LET             reduce using rule 13 (instrucciones -> push .)
    CONST           reduce using rule 13 (instrucciones -> push .)
    IF              reduce using rule 13 (instrucciones -> push .)
    SWITCH          reduce using rule 13 (instrucciones -> push .)
    MAPLOWER        reduce using rule 13 (instrucciones -> push .)
    NUMBER          reduce using rule 13 (instrucciones -> push .)
    IZQPAREN        reduce using rule 13 (instrucciones -> push .)
    $end            reduce using rule 13 (instrucciones -> push .)
    DERLLAVE        reduce using rule 13 (instrucciones -> push .)


state 14

    (14) instrucciones -> mapSet .

    VARIABLE        reduce using rule 14 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 14 (instrucciones -> mapSet .)
    VAR             reduce using rule 14 (instrucciones -> mapSet .)
    LET             reduce using rule 14 (instrucciones -> mapSet .)
    CONST           reduce using rule 14 (instrucciones -> mapSet .)
    IF              reduce using rule 14 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 14 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 14 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 14 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 14 (instrucciones -> mapSet .)
    $end            reduce using rule 14 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 14 (instrucciones -> mapSet .)


state 15

    (15) declaracionVarSinAsig -> declarador . VARIABLE
    (16) declaracionVarSinAsig -> declarador . VARIABLE FINALDELINEA

    VARIABLE        shift and go to state 37


state 16

    (17) asignacion -> VARIABLE . operadoresAsig tipoDato
    (18) asignacion -> VARIABLE . operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> VARIABLE . IGUAL comparacion
    (20) asignacion -> VARIABLE . IGUAL comparacion FINALDELINEA
    (21) asignacion -> VARIABLE . IGUAL expresion
    (22) asignacion -> VARIABLE . IGUAL expresion FINALDELINEA
    (47) comparacion -> VARIABLE . comparador VARIABLE
    (99) factor -> VARIABLE .
    (26) operadoresAsig -> . IGUAL
    (27) operadoresAsig -> . MASIGUAL
    (28) operadoresAsig -> . MENOSIGUAL
    (29) operadoresAsig -> . DIVIGUAL
    (30) operadoresAsig -> . MODIGUAL
    (49) comparador -> . MAYORQUE
    (50) comparador -> . MENORQUE
    (51) comparador -> . MAYORIGUALQUE
    (52) comparador -> . MENORIGUALQUE
    (53) comparador -> . NOIGUALQUE

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUALQUE resolved as shift
  ! shift/reduce conflict for NOIGUALQUE resolved as shift
    IGUAL           shift and go to state 39
    MULT            reduce using rule 99 (factor -> VARIABLE .)
    DIV             reduce using rule 99 (factor -> VARIABLE .)
    MAS             reduce using rule 99 (factor -> VARIABLE .)
    MENOS           reduce using rule 99 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 99 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 99 (factor -> VARIABLE .)
    VAR             reduce using rule 99 (factor -> VARIABLE .)
    LET             reduce using rule 99 (factor -> VARIABLE .)
    CONST           reduce using rule 99 (factor -> VARIABLE .)
    IF              reduce using rule 99 (factor -> VARIABLE .)
    SWITCH          reduce using rule 99 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 99 (factor -> VARIABLE .)
    NUMBER          reduce using rule 99 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 99 (factor -> VARIABLE .)
    $end            reduce using rule 99 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 99 (factor -> VARIABLE .)
    MASIGUAL        shift and go to state 41
    MENOSIGUAL      shift and go to state 42
    DIVIGUAL        shift and go to state 43
    MODIGUAL        shift and go to state 44
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

  ! MAYORQUE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 99 (factor -> VARIABLE .) ]

    operadoresAsig                 shift and go to state 38
    comparador                     shift and go to state 40

state 17

    (37) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 45


state 18

    (101) factor -> IZQPAREN . expresion DERPAREN
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    expresion                      shift and go to state 46
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 19

    (94) expresion -> term .
    (95) term -> term . MULT factor
    (96) term -> term . MULT VARIABLE
    (97) term -> term . DIV factor

    MAS             reduce using rule 94 (expresion -> term .)
    MENOS           reduce using rule 94 (expresion -> term .)
    MAYORQUE        reduce using rule 94 (expresion -> term .)
    MENORQUE        reduce using rule 94 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 94 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 94 (expresion -> term .)
    NOIGUALQUE      reduce using rule 94 (expresion -> term .)
    VARIABLE        reduce using rule 94 (expresion -> term .)
    FUNCTION        reduce using rule 94 (expresion -> term .)
    VAR             reduce using rule 94 (expresion -> term .)
    LET             reduce using rule 94 (expresion -> term .)
    CONST           reduce using rule 94 (expresion -> term .)
    IF              reduce using rule 94 (expresion -> term .)
    SWITCH          reduce using rule 94 (expresion -> term .)
    MAPLOWER        reduce using rule 94 (expresion -> term .)
    NUMBER          reduce using rule 94 (expresion -> term .)
    IZQPAREN        reduce using rule 94 (expresion -> term .)
    $end            reduce using rule 94 (expresion -> term .)
    DERLLAVE        reduce using rule 94 (expresion -> term .)
    DERPAREN        reduce using rule 94 (expresion -> term .)
    FINALDELINEA    reduce using rule 94 (expresion -> term .)
    BREAK           reduce using rule 94 (expresion -> term .)
    MULT            shift and go to state 48
    DIV             shift and go to state 49


state 20

    (54) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (86) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (80) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (23) declarador -> VAR .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 50

  ! VARIABLE        [ reduce using rule 23 (declarador -> VAR .) ]


state 21

    (100) factor -> NUMBER .

    MULT            reduce using rule 100 (factor -> NUMBER .)
    DIV             reduce using rule 100 (factor -> NUMBER .)
    MAS             reduce using rule 100 (factor -> NUMBER .)
    MENOS           reduce using rule 100 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 100 (factor -> NUMBER .)
    MENORQUE        reduce using rule 100 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 100 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 100 (factor -> NUMBER .)
    NOIGUALQUE      reduce using rule 100 (factor -> NUMBER .)
    VARIABLE        reduce using rule 100 (factor -> NUMBER .)
    FUNCTION        reduce using rule 100 (factor -> NUMBER .)
    VAR             reduce using rule 100 (factor -> NUMBER .)
    LET             reduce using rule 100 (factor -> NUMBER .)
    CONST           reduce using rule 100 (factor -> NUMBER .)
    IF              reduce using rule 100 (factor -> NUMBER .)
    SWITCH          reduce using rule 100 (factor -> NUMBER .)
    MAPLOWER        reduce using rule 100 (factor -> NUMBER .)
    NUMBER          reduce using rule 100 (factor -> NUMBER .)
    IZQPAREN        reduce using rule 100 (factor -> NUMBER .)
    $end            reduce using rule 100 (factor -> NUMBER .)
    DERLLAVE        reduce using rule 100 (factor -> NUMBER .)
    DERPAREN        reduce using rule 100 (factor -> NUMBER .)
    FINALDELINEA    reduce using rule 100 (factor -> NUMBER .)
    BREAK           reduce using rule 100 (factor -> NUMBER .)


state 22

    (59) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (69) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (24) declarador -> LET .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 51

  ! VARIABLE        [ reduce using rule 24 (declarador -> LET .) ]


state 23

    (88) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (25) declarador -> CONST .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 52

  ! VARIABLE        [ reduce using rule 25 (declarador -> CONST .) ]


state 24

    (39) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 53


state 25

    (42) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 54


state 26

    (90) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    PUNTO           shift and go to state 55


state 27

    (98) term -> factor .

    MULT            reduce using rule 98 (term -> factor .)
    DIV             reduce using rule 98 (term -> factor .)
    MAS             reduce using rule 98 (term -> factor .)
    MENOS           reduce using rule 98 (term -> factor .)
    MAYORQUE        reduce using rule 98 (term -> factor .)
    MENORQUE        reduce using rule 98 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 98 (term -> factor .)
    MENORIGUALQUE   reduce using rule 98 (term -> factor .)
    NOIGUALQUE      reduce using rule 98 (term -> factor .)
    VARIABLE        reduce using rule 98 (term -> factor .)
    FUNCTION        reduce using rule 98 (term -> factor .)
    VAR             reduce using rule 98 (term -> factor .)
    LET             reduce using rule 98 (term -> factor .)
    CONST           reduce using rule 98 (term -> factor .)
    IF              reduce using rule 98 (term -> factor .)
    SWITCH          reduce using rule 98 (term -> factor .)
    MAPLOWER        reduce using rule 98 (term -> factor .)
    NUMBER          reduce using rule 98 (term -> factor .)
    IZQPAREN        reduce using rule 98 (term -> factor .)
    $end            reduce using rule 98 (term -> factor .)
    DERLLAVE        reduce using rule 98 (term -> factor .)
    DERPAREN        reduce using rule 98 (term -> factor .)
    FINALDELINEA    reduce using rule 98 (term -> factor .)
    BREAK           reduce using rule 98 (term -> factor .)


state 28

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 29

    (92) expresion -> expresion MAS . term
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    term                           shift and go to state 56
    factor                         shift and go to state 27

state 30

    (93) expresion -> expresion MENOS . term
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    term                           shift and go to state 57
    factor                         shift and go to state 27

state 31

    (48) comparacion -> expresion comparador . expresion
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    expresion                      shift and go to state 58
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 32

    (49) comparador -> MAYORQUE .

    VARIABLE        reduce using rule 49 (comparador -> MAYORQUE .)
    NUMBER          reduce using rule 49 (comparador -> MAYORQUE .)
    IZQPAREN        reduce using rule 49 (comparador -> MAYORQUE .)


state 33

    (50) comparador -> MENORQUE .

    VARIABLE        reduce using rule 50 (comparador -> MENORQUE .)
    NUMBER          reduce using rule 50 (comparador -> MENORQUE .)
    IZQPAREN        reduce using rule 50 (comparador -> MENORQUE .)


state 34

    (51) comparador -> MAYORIGUALQUE .

    VARIABLE        reduce using rule 51 (comparador -> MAYORIGUALQUE .)
    NUMBER          reduce using rule 51 (comparador -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 51 (comparador -> MAYORIGUALQUE .)


state 35

    (52) comparador -> MENORIGUALQUE .

    VARIABLE        reduce using rule 52 (comparador -> MENORIGUALQUE .)
    NUMBER          reduce using rule 52 (comparador -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 52 (comparador -> MENORIGUALQUE .)


state 36

    (53) comparador -> NOIGUALQUE .

    VARIABLE        reduce using rule 53 (comparador -> NOIGUALQUE .)
    NUMBER          reduce using rule 53 (comparador -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 53 (comparador -> NOIGUALQUE .)


state 37

    (15) declaracionVarSinAsig -> declarador VARIABLE .
    (16) declaracionVarSinAsig -> declarador VARIABLE . FINALDELINEA

    VARIABLE        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    FUNCTION        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    VAR             reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    LET             reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    CONST           reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    IF              reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    SWITCH          reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    MAPLOWER        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    NUMBER          reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    IZQPAREN        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    $end            reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    DERLLAVE        reduce using rule 15 (declaracionVarSinAsig -> declarador VARIABLE .)
    FINALDELINEA    shift and go to state 59


state 38

    (17) asignacion -> VARIABLE operadoresAsig . tipoDato
    (18) asignacion -> VARIABLE operadoresAsig . tipoDato FINALDELINEA
    (31) tipoDato -> . NUMBER
    (32) tipoDato -> . STRING
    (33) tipoDato -> . BOOLEAN
    (34) tipoDato -> . BIGINT
    (35) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 61
    STRING          shift and go to state 62
    BOOLEAN         shift and go to state 63
    BIGINT          shift and go to state 64
    SYMBOL          shift and go to state 65

    tipoDato                       shift and go to state 60

state 39

    (19) asignacion -> VARIABLE IGUAL . comparacion
    (20) asignacion -> VARIABLE IGUAL . comparacion FINALDELINEA
    (21) asignacion -> VARIABLE IGUAL . expresion
    (22) asignacion -> VARIABLE IGUAL . expresion FINALDELINEA
    (26) operadoresAsig -> IGUAL .
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
    STRING          reduce using rule 26 (operadoresAsig -> IGUAL .)
    BOOLEAN         reduce using rule 26 (operadoresAsig -> IGUAL .)
    BIGINT          reduce using rule 26 (operadoresAsig -> IGUAL .)
    SYMBOL          reduce using rule 26 (operadoresAsig -> IGUAL .)
    VARIABLE        shift and go to state 66
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

  ! NUMBER          [ reduce using rule 26 (operadoresAsig -> IGUAL .) ]

    comparacion                    shift and go to state 67
    expresion                      shift and go to state 68
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 40

    (47) comparacion -> VARIABLE comparador . VARIABLE

    VARIABLE        shift and go to state 69


state 41

    (27) operadoresAsig -> MASIGUAL .

    NUMBER          reduce using rule 27 (operadoresAsig -> MASIGUAL .)
    STRING          reduce using rule 27 (operadoresAsig -> MASIGUAL .)
    BOOLEAN         reduce using rule 27 (operadoresAsig -> MASIGUAL .)
    BIGINT          reduce using rule 27 (operadoresAsig -> MASIGUAL .)
    SYMBOL          reduce using rule 27 (operadoresAsig -> MASIGUAL .)


state 42

    (28) operadoresAsig -> MENOSIGUAL .

    NUMBER          reduce using rule 28 (operadoresAsig -> MENOSIGUAL .)
    STRING          reduce using rule 28 (operadoresAsig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 28 (operadoresAsig -> MENOSIGUAL .)
    BIGINT          reduce using rule 28 (operadoresAsig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 28 (operadoresAsig -> MENOSIGUAL .)


state 43

    (29) operadoresAsig -> DIVIGUAL .

    NUMBER          reduce using rule 29 (operadoresAsig -> DIVIGUAL .)
    STRING          reduce using rule 29 (operadoresAsig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 29 (operadoresAsig -> DIVIGUAL .)
    BIGINT          reduce using rule 29 (operadoresAsig -> DIVIGUAL .)
    SYMBOL          reduce using rule 29 (operadoresAsig -> DIVIGUAL .)


state 44

    (30) operadoresAsig -> MODIGUAL .

    NUMBER          reduce using rule 30 (operadoresAsig -> MODIGUAL .)
    STRING          reduce using rule 30 (operadoresAsig -> MODIGUAL .)
    BOOLEAN         reduce using rule 30 (operadoresAsig -> MODIGUAL .)
    BIGINT          reduce using rule 30 (operadoresAsig -> MODIGUAL .)
    SYMBOL          reduce using rule 30 (operadoresAsig -> MODIGUAL .)


state 45

    (37) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 70


state 46

    (101) factor -> IZQPAREN expresion . DERPAREN
    (92) expresion -> expresion . MAS term
    (93) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 71
    MAS             shift and go to state 29
    MENOS           shift and go to state 30


state 47

    (99) factor -> VARIABLE .

    MULT            reduce using rule 99 (factor -> VARIABLE .)
    DIV             reduce using rule 99 (factor -> VARIABLE .)
    DERPAREN        reduce using rule 99 (factor -> VARIABLE .)
    MAS             reduce using rule 99 (factor -> VARIABLE .)
    MENOS           reduce using rule 99 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 99 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 99 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 99 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 99 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 99 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 99 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 99 (factor -> VARIABLE .)
    VAR             reduce using rule 99 (factor -> VARIABLE .)
    LET             reduce using rule 99 (factor -> VARIABLE .)
    CONST           reduce using rule 99 (factor -> VARIABLE .)
    IF              reduce using rule 99 (factor -> VARIABLE .)
    SWITCH          reduce using rule 99 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 99 (factor -> VARIABLE .)
    NUMBER          reduce using rule 99 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 99 (factor -> VARIABLE .)
    $end            reduce using rule 99 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 99 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 99 (factor -> VARIABLE .)
    BREAK           reduce using rule 99 (factor -> VARIABLE .)


state 48

    (95) term -> term MULT . factor
    (96) term -> term MULT . VARIABLE
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 73
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    factor                         shift and go to state 72

state 49

    (97) term -> term DIV . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    factor                         shift and go to state 74

state 50

    (54) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (86) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (80) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    IGUAL           shift and go to state 75


state 51

    (59) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (69) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 76


state 52

    (88) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 77


state 53

    (39) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 66
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    comparacion                    shift and go to state 78
    expresion                      shift and go to state 79
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 54

    (42) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 80


state 55

    (90) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    SET             shift and go to state 81


state 56

    (92) expresion -> expresion MAS term .
    (95) term -> term . MULT factor
    (96) term -> term . MULT VARIABLE
    (97) term -> term . DIV factor

    MAS             reduce using rule 92 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 92 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 92 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 92 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 92 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 92 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 92 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 92 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 92 (expresion -> expresion MAS term .)
    VAR             reduce using rule 92 (expresion -> expresion MAS term .)
    LET             reduce using rule 92 (expresion -> expresion MAS term .)
    CONST           reduce using rule 92 (expresion -> expresion MAS term .)
    IF              reduce using rule 92 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 92 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 92 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 92 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 92 (expresion -> expresion MAS term .)
    $end            reduce using rule 92 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 92 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 92 (expresion -> expresion MAS term .)
    FINALDELINEA    reduce using rule 92 (expresion -> expresion MAS term .)
    BREAK           reduce using rule 92 (expresion -> expresion MAS term .)
    MULT            shift and go to state 48
    DIV             shift and go to state 49


state 57

    (93) expresion -> expresion MENOS term .
    (95) term -> term . MULT factor
    (96) term -> term . MULT VARIABLE
    (97) term -> term . DIV factor

    MAS             reduce using rule 93 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 93 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 93 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 93 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 93 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 93 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 93 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 93 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 93 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 93 (expresion -> expresion MENOS term .)
    LET             reduce using rule 93 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 93 (expresion -> expresion MENOS term .)
    IF              reduce using rule 93 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 93 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 93 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 93 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 93 (expresion -> expresion MENOS term .)
    $end            reduce using rule 93 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 93 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 93 (expresion -> expresion MENOS term .)
    FINALDELINEA    reduce using rule 93 (expresion -> expresion MENOS term .)
    BREAK           reduce using rule 93 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 48
    DIV             shift and go to state 49


state 58

    (48) comparacion -> expresion comparador expresion .
    (92) expresion -> expresion . MAS term
    (93) expresion -> expresion . MENOS term

    VARIABLE        reduce using rule 48 (comparacion -> expresion comparador expresion .)
    FUNCTION        reduce using rule 48 (comparacion -> expresion comparador expresion .)
    VAR             reduce using rule 48 (comparacion -> expresion comparador expresion .)
    LET             reduce using rule 48 (comparacion -> expresion comparador expresion .)
    CONST           reduce using rule 48 (comparacion -> expresion comparador expresion .)
    IF              reduce using rule 48 (comparacion -> expresion comparador expresion .)
    SWITCH          reduce using rule 48 (comparacion -> expresion comparador expresion .)
    MAPLOWER        reduce using rule 48 (comparacion -> expresion comparador expresion .)
    NUMBER          reduce using rule 48 (comparacion -> expresion comparador expresion .)
    IZQPAREN        reduce using rule 48 (comparacion -> expresion comparador expresion .)
    $end            reduce using rule 48 (comparacion -> expresion comparador expresion .)
    DERLLAVE        reduce using rule 48 (comparacion -> expresion comparador expresion .)
    FINALDELINEA    reduce using rule 48 (comparacion -> expresion comparador expresion .)
    BREAK           reduce using rule 48 (comparacion -> expresion comparador expresion .)
    DERPAREN        reduce using rule 48 (comparacion -> expresion comparador expresion .)
    MAS             shift and go to state 29
    MENOS           shift and go to state 30


state 59

    (16) declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .

    VARIABLE        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    FUNCTION        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    VAR             reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    LET             reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    CONST           reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    IF              reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    SWITCH          reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    MAPLOWER        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    NUMBER          reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    IZQPAREN        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    $end            reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)
    DERLLAVE        reduce using rule 16 (declaracionVarSinAsig -> declarador VARIABLE FINALDELINEA .)


state 60

    (17) asignacion -> VARIABLE operadoresAsig tipoDato .
    (18) asignacion -> VARIABLE operadoresAsig tipoDato . FINALDELINEA

    VARIABLE        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    FUNCTION        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    VAR             reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    LET             reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    CONST           reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    IF              reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    SWITCH          reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    MAPLOWER        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    NUMBER          reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    IZQPAREN        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    $end            reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    DERLLAVE        reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    BREAK           reduce using rule 17 (asignacion -> VARIABLE operadoresAsig tipoDato .)
    FINALDELINEA    shift and go to state 82


state 61

    (31) tipoDato -> NUMBER .

    FINALDELINEA    reduce using rule 31 (tipoDato -> NUMBER .)
    VARIABLE        reduce using rule 31 (tipoDato -> NUMBER .)
    FUNCTION        reduce using rule 31 (tipoDato -> NUMBER .)
    VAR             reduce using rule 31 (tipoDato -> NUMBER .)
    LET             reduce using rule 31 (tipoDato -> NUMBER .)
    CONST           reduce using rule 31 (tipoDato -> NUMBER .)
    IF              reduce using rule 31 (tipoDato -> NUMBER .)
    SWITCH          reduce using rule 31 (tipoDato -> NUMBER .)
    MAPLOWER        reduce using rule 31 (tipoDato -> NUMBER .)
    NUMBER          reduce using rule 31 (tipoDato -> NUMBER .)
    IZQPAREN        reduce using rule 31 (tipoDato -> NUMBER .)
    $end            reduce using rule 31 (tipoDato -> NUMBER .)
    DERLLAVE        reduce using rule 31 (tipoDato -> NUMBER .)
    BREAK           reduce using rule 31 (tipoDato -> NUMBER .)
    COMA            reduce using rule 31 (tipoDato -> NUMBER .)
    DOSPUNTOS       reduce using rule 31 (tipoDato -> NUMBER .)
    DERPAREN        reduce using rule 31 (tipoDato -> NUMBER .)


state 62

    (32) tipoDato -> STRING .

    FINALDELINEA    reduce using rule 32 (tipoDato -> STRING .)
    VARIABLE        reduce using rule 32 (tipoDato -> STRING .)
    FUNCTION        reduce using rule 32 (tipoDato -> STRING .)
    VAR             reduce using rule 32 (tipoDato -> STRING .)
    LET             reduce using rule 32 (tipoDato -> STRING .)
    CONST           reduce using rule 32 (tipoDato -> STRING .)
    IF              reduce using rule 32 (tipoDato -> STRING .)
    SWITCH          reduce using rule 32 (tipoDato -> STRING .)
    MAPLOWER        reduce using rule 32 (tipoDato -> STRING .)
    NUMBER          reduce using rule 32 (tipoDato -> STRING .)
    IZQPAREN        reduce using rule 32 (tipoDato -> STRING .)
    $end            reduce using rule 32 (tipoDato -> STRING .)
    DERLLAVE        reduce using rule 32 (tipoDato -> STRING .)
    BREAK           reduce using rule 32 (tipoDato -> STRING .)
    COMA            reduce using rule 32 (tipoDato -> STRING .)
    DOSPUNTOS       reduce using rule 32 (tipoDato -> STRING .)
    DERPAREN        reduce using rule 32 (tipoDato -> STRING .)


state 63

    (33) tipoDato -> BOOLEAN .

    FINALDELINEA    reduce using rule 33 (tipoDato -> BOOLEAN .)
    VARIABLE        reduce using rule 33 (tipoDato -> BOOLEAN .)
    FUNCTION        reduce using rule 33 (tipoDato -> BOOLEAN .)
    VAR             reduce using rule 33 (tipoDato -> BOOLEAN .)
    LET             reduce using rule 33 (tipoDato -> BOOLEAN .)
    CONST           reduce using rule 33 (tipoDato -> BOOLEAN .)
    IF              reduce using rule 33 (tipoDato -> BOOLEAN .)
    SWITCH          reduce using rule 33 (tipoDato -> BOOLEAN .)
    MAPLOWER        reduce using rule 33 (tipoDato -> BOOLEAN .)
    NUMBER          reduce using rule 33 (tipoDato -> BOOLEAN .)
    IZQPAREN        reduce using rule 33 (tipoDato -> BOOLEAN .)
    $end            reduce using rule 33 (tipoDato -> BOOLEAN .)
    DERLLAVE        reduce using rule 33 (tipoDato -> BOOLEAN .)
    BREAK           reduce using rule 33 (tipoDato -> BOOLEAN .)
    COMA            reduce using rule 33 (tipoDato -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 33 (tipoDato -> BOOLEAN .)
    DERPAREN        reduce using rule 33 (tipoDato -> BOOLEAN .)


state 64

    (34) tipoDato -> BIGINT .

    FINALDELINEA    reduce using rule 34 (tipoDato -> BIGINT .)
    VARIABLE        reduce using rule 34 (tipoDato -> BIGINT .)
    FUNCTION        reduce using rule 34 (tipoDato -> BIGINT .)
    VAR             reduce using rule 34 (tipoDato -> BIGINT .)
    LET             reduce using rule 34 (tipoDato -> BIGINT .)
    CONST           reduce using rule 34 (tipoDato -> BIGINT .)
    IF              reduce using rule 34 (tipoDato -> BIGINT .)
    SWITCH          reduce using rule 34 (tipoDato -> BIGINT .)
    MAPLOWER        reduce using rule 34 (tipoDato -> BIGINT .)
    NUMBER          reduce using rule 34 (tipoDato -> BIGINT .)
    IZQPAREN        reduce using rule 34 (tipoDato -> BIGINT .)
    $end            reduce using rule 34 (tipoDato -> BIGINT .)
    DERLLAVE        reduce using rule 34 (tipoDato -> BIGINT .)
    BREAK           reduce using rule 34 (tipoDato -> BIGINT .)
    COMA            reduce using rule 34 (tipoDato -> BIGINT .)
    DOSPUNTOS       reduce using rule 34 (tipoDato -> BIGINT .)
    DERPAREN        reduce using rule 34 (tipoDato -> BIGINT .)


state 65

    (35) tipoDato -> SYMBOL .

    FINALDELINEA    reduce using rule 35 (tipoDato -> SYMBOL .)
    VARIABLE        reduce using rule 35 (tipoDato -> SYMBOL .)
    FUNCTION        reduce using rule 35 (tipoDato -> SYMBOL .)
    VAR             reduce using rule 35 (tipoDato -> SYMBOL .)
    LET             reduce using rule 35 (tipoDato -> SYMBOL .)
    CONST           reduce using rule 35 (tipoDato -> SYMBOL .)
    IF              reduce using rule 35 (tipoDato -> SYMBOL .)
    SWITCH          reduce using rule 35 (tipoDato -> SYMBOL .)
    MAPLOWER        reduce using rule 35 (tipoDato -> SYMBOL .)
    NUMBER          reduce using rule 35 (tipoDato -> SYMBOL .)
    IZQPAREN        reduce using rule 35 (tipoDato -> SYMBOL .)
    $end            reduce using rule 35 (tipoDato -> SYMBOL .)
    DERLLAVE        reduce using rule 35 (tipoDato -> SYMBOL .)
    BREAK           reduce using rule 35 (tipoDato -> SYMBOL .)
    COMA            reduce using rule 35 (tipoDato -> SYMBOL .)
    DOSPUNTOS       reduce using rule 35 (tipoDato -> SYMBOL .)
    DERPAREN        reduce using rule 35 (tipoDato -> SYMBOL .)


state 66

    (47) comparacion -> VARIABLE . comparador VARIABLE
    (99) factor -> VARIABLE .
    (49) comparador -> . MAYORQUE
    (50) comparador -> . MENORQUE
    (51) comparador -> . MAYORIGUALQUE
    (52) comparador -> . MENORIGUALQUE
    (53) comparador -> . NOIGUALQUE

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUALQUE resolved as shift
  ! shift/reduce conflict for NOIGUALQUE resolved as shift
    MULT            reduce using rule 99 (factor -> VARIABLE .)
    DIV             reduce using rule 99 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 99 (factor -> VARIABLE .)
    MAS             reduce using rule 99 (factor -> VARIABLE .)
    MENOS           reduce using rule 99 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 99 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 99 (factor -> VARIABLE .)
    VAR             reduce using rule 99 (factor -> VARIABLE .)
    LET             reduce using rule 99 (factor -> VARIABLE .)
    CONST           reduce using rule 99 (factor -> VARIABLE .)
    IF              reduce using rule 99 (factor -> VARIABLE .)
    SWITCH          reduce using rule 99 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 99 (factor -> VARIABLE .)
    NUMBER          reduce using rule 99 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 99 (factor -> VARIABLE .)
    $end            reduce using rule 99 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 99 (factor -> VARIABLE .)
    BREAK           reduce using rule 99 (factor -> VARIABLE .)
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

  ! MAYORQUE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 99 (factor -> VARIABLE .) ]

    comparador                     shift and go to state 40

state 67

    (19) asignacion -> VARIABLE IGUAL comparacion .
    (20) asignacion -> VARIABLE IGUAL comparacion . FINALDELINEA

    VARIABLE        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    LET             reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    IF              reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    $end            reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion .)
    FINALDELINEA    shift and go to state 83


state 68

    (21) asignacion -> VARIABLE IGUAL expresion .
    (22) asignacion -> VARIABLE IGUAL expresion . FINALDELINEA
    (48) comparacion -> expresion . comparador expresion
    (92) expresion -> expresion . MAS term
    (93) expresion -> expresion . MENOS term
    (49) comparador -> . MAYORQUE
    (50) comparador -> . MENORQUE
    (51) comparador -> . MAYORIGUALQUE
    (52) comparador -> . MENORIGUALQUE
    (53) comparador -> . NOIGUALQUE

    VARIABLE        reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    VAR             reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    LET             reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    CONST           reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    IF              reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    $end            reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 21 (asignacion -> VARIABLE IGUAL expresion .)
    FINALDELINEA    shift and go to state 84
    MAS             shift and go to state 29
    MENOS           shift and go to state 30
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 31

state 69

    (47) comparacion -> VARIABLE comparador VARIABLE .

    VARIABLE        reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    FUNCTION        reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    VAR             reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    LET             reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    CONST           reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    IF              reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    SWITCH          reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    MAPLOWER        reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    NUMBER          reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    IZQPAREN        reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    $end            reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    DERLLAVE        reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    FINALDELINEA    reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    BREAK           reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)
    DERPAREN        reduce using rule 47 (comparacion -> VARIABLE comparador VARIABLE .)


state 70

    (37) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 85
    DERPAREN        shift and go to state 86


state 71

    (101) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    FINALDELINEA    reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)
    BREAK           reduce using rule 101 (factor -> IZQPAREN expresion DERPAREN .)


state 72

    (95) term -> term MULT factor .

    MULT            reduce using rule 95 (term -> term MULT factor .)
    DIV             reduce using rule 95 (term -> term MULT factor .)
    MAS             reduce using rule 95 (term -> term MULT factor .)
    MENOS           reduce using rule 95 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 95 (term -> term MULT factor .)
    MENORQUE        reduce using rule 95 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 95 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 95 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 95 (term -> term MULT factor .)
    VARIABLE        reduce using rule 95 (term -> term MULT factor .)
    FUNCTION        reduce using rule 95 (term -> term MULT factor .)
    VAR             reduce using rule 95 (term -> term MULT factor .)
    LET             reduce using rule 95 (term -> term MULT factor .)
    CONST           reduce using rule 95 (term -> term MULT factor .)
    IF              reduce using rule 95 (term -> term MULT factor .)
    SWITCH          reduce using rule 95 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 95 (term -> term MULT factor .)
    NUMBER          reduce using rule 95 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 95 (term -> term MULT factor .)
    $end            reduce using rule 95 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 95 (term -> term MULT factor .)
    DERPAREN        reduce using rule 95 (term -> term MULT factor .)
    FINALDELINEA    reduce using rule 95 (term -> term MULT factor .)
    BREAK           reduce using rule 95 (term -> term MULT factor .)


state 73

    (96) term -> term MULT VARIABLE .
    (99) factor -> VARIABLE .

  ! reduce/reduce conflict for MULT resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAS resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAYORQUE resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAYORIGUALQUE resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENORIGUALQUE resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for NOIGUALQUE resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for LET resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for SWITCH resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DERPAREN resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for FINALDELINEA resolved using rule 96 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for BREAK resolved using rule 96 (term -> term MULT VARIABLE .)
    MULT            reduce using rule 96 (term -> term MULT VARIABLE .)
    DIV             reduce using rule 96 (term -> term MULT VARIABLE .)
    MAS             reduce using rule 96 (term -> term MULT VARIABLE .)
    MENOS           reduce using rule 96 (term -> term MULT VARIABLE .)
    MAYORQUE        reduce using rule 96 (term -> term MULT VARIABLE .)
    MENORQUE        reduce using rule 96 (term -> term MULT VARIABLE .)
    MAYORIGUALQUE   reduce using rule 96 (term -> term MULT VARIABLE .)
    MENORIGUALQUE   reduce using rule 96 (term -> term MULT VARIABLE .)
    NOIGUALQUE      reduce using rule 96 (term -> term MULT VARIABLE .)
    VARIABLE        reduce using rule 96 (term -> term MULT VARIABLE .)
    FUNCTION        reduce using rule 96 (term -> term MULT VARIABLE .)
    VAR             reduce using rule 96 (term -> term MULT VARIABLE .)
    LET             reduce using rule 96 (term -> term MULT VARIABLE .)
    CONST           reduce using rule 96 (term -> term MULT VARIABLE .)
    IF              reduce using rule 96 (term -> term MULT VARIABLE .)
    SWITCH          reduce using rule 96 (term -> term MULT VARIABLE .)
    MAPLOWER        reduce using rule 96 (term -> term MULT VARIABLE .)
    NUMBER          reduce using rule 96 (term -> term MULT VARIABLE .)
    IZQPAREN        reduce using rule 96 (term -> term MULT VARIABLE .)
    $end            reduce using rule 96 (term -> term MULT VARIABLE .)
    DERLLAVE        reduce using rule 96 (term -> term MULT VARIABLE .)
    DERPAREN        reduce using rule 96 (term -> term MULT VARIABLE .)
    FINALDELINEA    reduce using rule 96 (term -> term MULT VARIABLE .)
    BREAK           reduce using rule 96 (term -> term MULT VARIABLE .)

  ! MULT            [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! DIV             [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MAS             [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MENOS           [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MAYORQUE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! FUNCTION        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! VAR             [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! LET             [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! CONST           [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! IF              [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! SWITCH          [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! MAPLOWER        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! IZQPAREN        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! $end            [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! DERLLAVE        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! DERPAREN        [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! FINALDELINEA    [ reduce using rule 99 (factor -> VARIABLE .) ]
  ! BREAK           [ reduce using rule 99 (factor -> VARIABLE .) ]


state 74

    (97) term -> term DIV factor .

    MULT            reduce using rule 97 (term -> term DIV factor .)
    DIV             reduce using rule 97 (term -> term DIV factor .)
    MAS             reduce using rule 97 (term -> term DIV factor .)
    MENOS           reduce using rule 97 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 97 (term -> term DIV factor .)
    MENORQUE        reduce using rule 97 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 97 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 97 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 97 (term -> term DIV factor .)
    VARIABLE        reduce using rule 97 (term -> term DIV factor .)
    FUNCTION        reduce using rule 97 (term -> term DIV factor .)
    VAR             reduce using rule 97 (term -> term DIV factor .)
    LET             reduce using rule 97 (term -> term DIV factor .)
    CONST           reduce using rule 97 (term -> term DIV factor .)
    IF              reduce using rule 97 (term -> term DIV factor .)
    SWITCH          reduce using rule 97 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 97 (term -> term DIV factor .)
    NUMBER          reduce using rule 97 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 97 (term -> term DIV factor .)
    $end            reduce using rule 97 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 97 (term -> term DIV factor .)
    DERPAREN        reduce using rule 97 (term -> term DIV factor .)
    FINALDELINEA    reduce using rule 97 (term -> term DIV factor .)
    BREAK           reduce using rule 97 (term -> term DIV factor .)


state 75

    (54) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (86) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (87) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (80) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    IZQCORCHETE     shift and go to state 88
    NEW             shift and go to state 89
    VARIABLE        shift and go to state 87


state 76

    (59) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (69) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (84) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (85) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IZQCORCHETE     shift and go to state 90
    NEW             shift and go to state 91


state 77

    (88) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (89) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    NEW             shift and go to state 92


state 78

    (39) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 93


state 79

    (48) comparacion -> expresion . comparador expresion
    (92) expresion -> expresion . MAS term
    (93) expresion -> expresion . MENOS term
    (49) comparador -> . MAYORQUE
    (50) comparador -> . MENORQUE
    (51) comparador -> . MAYORIGUALQUE
    (52) comparador -> . MENORIGUALQUE
    (53) comparador -> . NOIGUALQUE

    MAS             shift and go to state 29
    MENOS           shift and go to state 30
    MAYORQUE        shift and go to state 32
    MENORQUE        shift and go to state 33
    MAYORIGUALQUE   shift and go to state 34
    MENORIGUALQUE   shift and go to state 35
    NOIGUALQUE      shift and go to state 36

    comparador                     shift and go to state 31

state 80

    (42) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 94


state 81

    (90) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 95


state 82

    (18) asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .

    VARIABLE        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    FUNCTION        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    VAR             reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    LET             reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    CONST           reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    IF              reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    SWITCH          reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    MAPLOWER        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    NUMBER          reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    IZQPAREN        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    $end            reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    DERLLAVE        reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)
    BREAK           reduce using rule 18 (asignacion -> VARIABLE operadoresAsig tipoDato FINALDELINEA .)


state 83

    (20) asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .

    VARIABLE        reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    FUNCTION        reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    VAR             reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    LET             reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    CONST           reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    IF              reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    SWITCH          reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    MAPLOWER        reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    NUMBER          reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    IZQPAREN        reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    $end            reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    DERLLAVE        reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)
    BREAK           reduce using rule 20 (asignacion -> VARIABLE IGUAL comparacion FINALDELINEA .)


state 84

    (22) asignacion -> VARIABLE IGUAL expresion FINALDELINEA .

    VARIABLE        reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    FUNCTION        reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    VAR             reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    LET             reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    CONST           reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    IF              reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    SWITCH          reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    MAPLOWER        reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    NUMBER          reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    IZQPAREN        reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    $end            reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    DERLLAVE        reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)
    BREAK           reduce using rule 22 (asignacion -> VARIABLE IGUAL expresion FINALDELINEA .)


state 85

    (37) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 96


state 86

    (38) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 97


state 87

    (80) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN
    (82) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN

    PUNTO           shift and go to state 98


state 88

    (54) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (58) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (64) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (68) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (74) lista -> . lista COMA lista
    (75) lista -> . STRING
    (76) lista -> . SYMBOL
    (77) lista -> . NUMBER
    (78) lista -> . BIGINT
    (79) lista -> . BOOLEAN

    DERCORCHETE     shift and go to state 100
    STRING          shift and go to state 101
    SYMBOL          shift and go to state 102
    NUMBER          shift and go to state 103
    BIGINT          shift and go to state 104
    BOOLEAN         shift and go to state 105

    lista                          shift and go to state 99

state 89

    (55) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (65) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (66) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (86) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (87) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    ARRAY           shift and go to state 106
    MAP             shift and go to state 107


state 90

    (59) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (63) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (69) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (73) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (74) lista -> . lista COMA lista
    (75) lista -> . STRING
    (76) lista -> . SYMBOL
    (77) lista -> . NUMBER
    (78) lista -> . BIGINT
    (79) lista -> . BOOLEAN

    DERCORCHETE     shift and go to state 109
    STRING          shift and go to state 101
    SYMBOL          shift and go to state 102
    NUMBER          shift and go to state 103
    BIGINT          shift and go to state 104
    BOOLEAN         shift and go to state 105

    lista                          shift and go to state 108

state 91

    (60) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (70) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (71) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (84) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (85) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    ARRAY           shift and go to state 110
    MAP             shift and go to state 111


state 92

    (88) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (89) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 112


state 93

    (39) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (40) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (41) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 113


state 94

    (42) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 114


state 95

    (90) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (31) tipoDato -> . NUMBER
    (32) tipoDato -> . STRING
    (33) tipoDato -> . BOOLEAN
    (34) tipoDato -> . BIGINT
    (35) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 61
    STRING          shift and go to state 62
    BOOLEAN         shift and go to state 63
    BIGINT          shift and go to state 64
    SYMBOL          shift and go to state 65

    tipoDato                       shift and go to state 115

state 96

    (37) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 116


state 97

    (38) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (54) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (59) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (69) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (86) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (88) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (42) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (80) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (90) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (23) declarador -> . VAR
    (24) declarador -> . LET
    (25) declarador -> . CONST
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 117
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 98

    (80) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN
    (82) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN

    POP             shift and go to state 118
    PUSH            shift and go to state 119


state 99

    (54) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (64) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (74) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 120
    COMA            shift and go to state 121


state 100

    (58) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (68) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 122
    VARIABLE        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VAR             reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 68 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 101

    (75) lista -> STRING .

    DERCORCHETE     reduce using rule 75 (lista -> STRING .)
    COMA            reduce using rule 75 (lista -> STRING .)
    DERPAREN        reduce using rule 75 (lista -> STRING .)


state 102

    (76) lista -> SYMBOL .

    DERCORCHETE     reduce using rule 76 (lista -> SYMBOL .)
    COMA            reduce using rule 76 (lista -> SYMBOL .)
    DERPAREN        reduce using rule 76 (lista -> SYMBOL .)


state 103

    (77) lista -> NUMBER .

    DERCORCHETE     reduce using rule 77 (lista -> NUMBER .)
    COMA            reduce using rule 77 (lista -> NUMBER .)
    DERPAREN        reduce using rule 77 (lista -> NUMBER .)


state 104

    (78) lista -> BIGINT .

    DERCORCHETE     reduce using rule 78 (lista -> BIGINT .)
    COMA            reduce using rule 78 (lista -> BIGINT .)
    DERPAREN        reduce using rule 78 (lista -> BIGINT .)


state 105

    (79) lista -> BOOLEAN .

    DERCORCHETE     reduce using rule 79 (lista -> BOOLEAN .)
    COMA            reduce using rule 79 (lista -> BOOLEAN .)
    DERPAREN        reduce using rule 79 (lista -> BOOLEAN .)


state 106

    (55) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (65) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 123


state 107

    (86) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (87) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 124


state 108

    (59) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (69) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (74) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 125
    COMA            shift and go to state 121


state 109

    (63) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (73) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 126
    VARIABLE        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VAR             reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 73 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 110

    (60) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (70) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 127


state 111

    (84) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (85) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 128


state 112

    (88) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (89) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 129


state 113

    (39) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (54) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (59) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (69) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (86) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (88) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (42) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (80) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (90) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (23) declarador -> . VAR
    (24) declarador -> . LET
    (25) declarador -> . CONST
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    comparacion                    shift and go to state 7
    js                             shift and go to state 130
    if                             shift and go to state 10
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 114

    (42) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (45) ncasos -> . casos
    (46) ncasos -> . casos ncasos
    (43) casos -> . CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (44) casos -> . CASE tipoDato DOSPUNTOS

    CASE            shift and go to state 133

    ncasos                         shift and go to state 131
    casos                          shift and go to state 132

state 115

    (90) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato . COMA tipoDato DERPAREN
    (91) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato . COMA tipoDato DERPAREN FINALDELINEA

    COMA            shift and go to state 134


state 116

    (37) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (54) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (59) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (69) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (86) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (88) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (42) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (80) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (90) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (23) declarador -> . VAR
    (24) declarador -> . LET
    (25) declarador -> . CONST
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 135
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 117

    (38) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 136


state 118

    (80) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN

    IZQPAREN        shift and go to state 137


state 119

    (82) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 138


state 120

    (54) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (64) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 139
    VARIABLE        reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 64 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 121

    (74) lista -> lista COMA . lista
    (74) lista -> . lista COMA lista
    (75) lista -> . STRING
    (76) lista -> . SYMBOL
    (77) lista -> . NUMBER
    (78) lista -> . BIGINT
    (79) lista -> . BOOLEAN

    STRING          shift and go to state 101
    SYMBOL          shift and go to state 102
    NUMBER          shift and go to state 103
    BIGINT          shift and go to state 104
    BOOLEAN         shift and go to state 105

    lista                          shift and go to state 140

state 122

    (58) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 58 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 123

    (55) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (56) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (65) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (74) lista -> . lista COMA lista
    (75) lista -> . STRING
    (76) lista -> . SYMBOL
    (77) lista -> . NUMBER
    (78) lista -> . BIGINT
    (79) lista -> . BOOLEAN

    DERPAREN        shift and go to state 141
    NUMBER          shift and go to state 142
    STRING          shift and go to state 101
    SYMBOL          shift and go to state 102
    BIGINT          shift and go to state 104
    BOOLEAN         shift and go to state 105

    lista                          shift and go to state 143

state 124

    (86) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (87) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 144


state 125

    (59) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (69) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 145
    VARIABLE        reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 69 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 126

    (63) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 63 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 127

    (60) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (61) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (70) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (74) lista -> . lista COMA lista
    (75) lista -> . STRING
    (76) lista -> . SYMBOL
    (77) lista -> . NUMBER
    (78) lista -> . BIGINT
    (79) lista -> . BOOLEAN

    DERPAREN        shift and go to state 146
    NUMBER          shift and go to state 147
    STRING          shift and go to state 101
    SYMBOL          shift and go to state 102
    BIGINT          shift and go to state 104
    BOOLEAN         shift and go to state 105

    lista                          shift and go to state 148

state 128

    (84) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (85) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 149


state 129

    (88) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (89) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 150


state 130

    (39) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 151


state 131

    (42) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 152


state 132

    (45) ncasos -> casos .
    (46) ncasos -> casos . ncasos
    (45) ncasos -> . casos
    (46) ncasos -> . casos ncasos
    (43) casos -> . CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (44) casos -> . CASE tipoDato DOSPUNTOS

    DEFAULT         reduce using rule 45 (ncasos -> casos .)
    CASE            shift and go to state 133

    casos                          shift and go to state 132
    ncasos                         shift and go to state 153

state 133

    (43) casos -> CASE . tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA
    (44) casos -> CASE . tipoDato DOSPUNTOS
    (31) tipoDato -> . NUMBER
    (32) tipoDato -> . STRING
    (33) tipoDato -> . BOOLEAN
    (34) tipoDato -> . BIGINT
    (35) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 61
    STRING          shift and go to state 62
    BOOLEAN         shift and go to state 63
    BIGINT          shift and go to state 64
    SYMBOL          shift and go to state 65

    tipoDato                       shift and go to state 154

state 134

    (90) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA . tipoDato DERPAREN
    (91) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA . tipoDato DERPAREN FINALDELINEA
    (31) tipoDato -> . NUMBER
    (32) tipoDato -> . STRING
    (33) tipoDato -> . BOOLEAN
    (34) tipoDato -> . BIGINT
    (35) tipoDato -> . SYMBOL

    NUMBER          shift and go to state 61
    STRING          shift and go to state 62
    BOOLEAN         shift and go to state 63
    BIGINT          shift and go to state 64
    SYMBOL          shift and go to state 65

    tipoDato                       shift and go to state 155

state 135

    (37) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 156


state 136

    (38) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 38 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 137

    (80) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA
    (81) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN

    DERPAREN        shift and go to state 157


state 138

    (82) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (83) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN
    (74) lista -> . lista COMA lista
    (75) lista -> . STRING
    (76) lista -> . SYMBOL
    (77) lista -> . NUMBER
    (78) lista -> . BIGINT
    (79) lista -> . BOOLEAN

    STRING          shift and go to state 101
    SYMBOL          shift and go to state 102
    NUMBER          shift and go to state 103
    BIGINT          shift and go to state 104
    BOOLEAN         shift and go to state 105

    lista                          shift and go to state 158

state 139

    (54) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 54 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 140

    (74) lista -> lista COMA lista .
    (74) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 74 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 74 (lista -> lista COMA lista .)
    COMA            shift and go to state 121

  ! COMA            [ reduce using rule 74 (lista -> lista COMA lista .) ]


state 141

    (55) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (65) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 159
    VARIABLE        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VAR             reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 65 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 142

    (56) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (77) lista -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 160
    COMA            reduce using rule 77 (lista -> NUMBER .)

  ! DERPAREN        [ reduce using rule 77 (lista -> NUMBER .) ]


state 143

    (57) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (74) lista -> lista . COMA lista

    DERPAREN        shift and go to state 161
    COMA            shift and go to state 121


state 144

    (86) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (87) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 86 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 162


state 145

    (59) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 59 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 146

    (60) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (70) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 163
    VARIABLE        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VAR             reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 70 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 147

    (61) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (77) lista -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 164
    COMA            reduce using rule 77 (lista -> NUMBER .)

  ! DERPAREN        [ reduce using rule 77 (lista -> NUMBER .) ]


state 148

    (62) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (74) lista -> lista . COMA lista

    DERPAREN        shift and go to state 165
    COMA            shift and go to state 121


state 149

    (84) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (85) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 84 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 166


state 150

    (88) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (89) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 88 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 167


state 151

    (39) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VARIABLE        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 169
    IF              shift and go to state 24

  ! IF              [ reduce using rule 39 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 168

state 152

    (42) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 170


state 153

    (46) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 46 (ncasos -> casos ncasos .)


state 154

    (43) casos -> CASE tipoDato . DOSPUNTOS asignacion BREAK FINALDELINEA
    (44) casos -> CASE tipoDato . DOSPUNTOS

    DOSPUNTOS       shift and go to state 171


state 155

    (90) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato . DERPAREN
    (91) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 172


state 156

    (37) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 37 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 157

    (80) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA
    (81) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 173
    VARIABLE        reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    VAR             reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    LET             reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    CONST           reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IF              reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    $end            reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 81 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)


state 158

    (82) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (83) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN
    (74) lista -> lista . COMA lista

    DERPAREN        shift and go to state 174
    COMA            shift and go to state 121


state 159

    (55) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 55 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 160

    (56) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (66) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 175
    VARIABLE        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VAR             reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 66 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 161

    (57) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (67) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 176
    VARIABLE        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 67 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 162

    (87) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 87 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 163

    (60) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 60 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 164

    (61) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (71) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 177
    VARIABLE        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VAR             reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 71 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 165

    (62) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (72) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 178
    VARIABLE        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 72 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 166

    (85) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 85 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 167

    (89) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 89 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 168

    (40) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VARIABLE        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VAR             reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 40 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 169

    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 179


state 170

    (42) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (54) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (59) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (69) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (86) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (88) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (42) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (80) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (90) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (23) declarador -> . VAR
    (24) declarador -> . LET
    (25) declarador -> . CONST
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    js                             shift and go to state 180
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 171

    (43) casos -> CASE tipoDato DOSPUNTOS . asignacion BREAK FINALDELINEA
    (44) casos -> CASE tipoDato DOSPUNTOS .
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA

    CASE            reduce using rule 44 (casos -> CASE tipoDato DOSPUNTOS .)
    DEFAULT         reduce using rule 44 (casos -> CASE tipoDato DOSPUNTOS .)
    VARIABLE        shift and go to state 182

    asignacion                     shift and go to state 181

state 172

    (90) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .
    (91) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    FUNCTION        reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    VAR             reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    LET             reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    CONST           reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    IF              reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    SWITCH          reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    MAPLOWER        reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    NUMBER          reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    IZQPAREN        reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    $end            reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    DERLLAVE        reduce using rule 90 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN .)
    FINALDELINEA    shift and go to state 183


state 173

    (80) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 80 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 174

    (82) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA
    (83) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 184
    VARIABLE        reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    LET             reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IF              reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    $end            reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 83 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)


state 175

    (56) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VAR             reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 56 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 176

    (57) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 57 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 177

    (61) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VAR             reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 61 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 178

    (62) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 62 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 179

    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracionVarSinAsig
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . pop
    (13) instrucciones -> . push
    (14) instrucciones -> . mapSet
    (15) declaracionVarSinAsig -> . declarador VARIABLE
    (16) declaracionVarSinAsig -> . declarador VARIABLE FINALDELINEA
    (17) asignacion -> . VARIABLE operadoresAsig tipoDato
    (18) asignacion -> . VARIABLE operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> . VARIABLE IGUAL comparacion
    (20) asignacion -> . VARIABLE IGUAL comparacion FINALDELINEA
    (21) asignacion -> . VARIABLE IGUAL expresion
    (22) asignacion -> . VARIABLE IGUAL expresion FINALDELINEA
    (37) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (38) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (92) expresion -> . expresion MAS term
    (93) expresion -> . expresion MENOS term
    (94) expresion -> . term
    (47) comparacion -> . VARIABLE comparador VARIABLE
    (48) comparacion -> . expresion comparador expresion
    (54) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (55) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (56) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (57) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (58) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (59) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (60) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (61) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (62) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (63) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (64) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (65) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (66) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (67) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (68) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (69) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (70) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (71) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (72) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (73) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (84) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (85) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (86) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (87) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (88) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (89) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (39) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (40) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (41) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (42) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (80) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (81) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (82) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (83) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (90) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN
    (91) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA
    (23) declarador -> . VAR
    (24) declarador -> . LET
    (25) declarador -> . CONST
    (95) term -> . term MULT factor
    (96) term -> . term MULT VARIABLE
    (97) term -> . term DIV factor
    (98) term -> . factor
    (99) factor -> . VARIABLE
    (100) factor -> . NUMBER
    (101) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    VAR             shift and go to state 20
    LET             shift and go to state 22
    CONST           shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    MAPLOWER        shift and go to state 26
    NUMBER          shift and go to state 21
    IZQPAREN        shift and go to state 18

    comparacion                    shift and go to state 7
    js                             shift and go to state 185
    instrucciones                  shift and go to state 2
    declaracionVarSinAsig          shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    pop                            shift and go to state 12
    push                           shift and go to state 13
    mapSet                         shift and go to state 14
    declarador                     shift and go to state 15
    term                           shift and go to state 19
    factor                         shift and go to state 27

state 180

    (42) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 186


state 181

    (43) casos -> CASE tipoDato DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 187


state 182

    (17) asignacion -> VARIABLE . operadoresAsig tipoDato
    (18) asignacion -> VARIABLE . operadoresAsig tipoDato FINALDELINEA
    (19) asignacion -> VARIABLE . IGUAL comparacion
    (20) asignacion -> VARIABLE . IGUAL comparacion FINALDELINEA
    (21) asignacion -> VARIABLE . IGUAL expresion
    (22) asignacion -> VARIABLE . IGUAL expresion FINALDELINEA
    (26) operadoresAsig -> . IGUAL
    (27) operadoresAsig -> . MASIGUAL
    (28) operadoresAsig -> . MENOSIGUAL
    (29) operadoresAsig -> . DIVIGUAL
    (30) operadoresAsig -> . MODIGUAL

    IGUAL           shift and go to state 39
    MASIGUAL        shift and go to state 41
    MENOSIGUAL      shift and go to state 42
    DIVIGUAL        shift and go to state 43
    MODIGUAL        shift and go to state 44

    operadoresAsig                 shift and go to state 38

state 183

    (91) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    VAR             reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    LET             reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    CONST           reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    IF              reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    $end            reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 91 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipoDato COMA tipoDato DERPAREN FINALDELINEA .)


state 184

    (82) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 82 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 185

    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 188


state 186

    (42) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VARIABLE        reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VAR             reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 42 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 187

    (43) casos -> CASE tipoDato DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 189


state 188

    (41) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 41 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 189

    (43) casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 43 (casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 43 (casos -> CASE tipoDato DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYORQUE in state 16 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 16 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUALQUE in state 16 resolved as shift
WARNING: shift/reduce conflict for MENORIGUALQUE in state 16 resolved as shift
WARNING: shift/reduce conflict for NOIGUALQUE in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 20 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 22 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 23 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 39 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 66 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 66 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUALQUE in state 66 resolved as shift
WARNING: shift/reduce conflict for MENORIGUALQUE in state 66 resolved as shift
WARNING: shift/reduce conflict for NOIGUALQUE in state 66 resolved as shift
WARNING: shift/reduce conflict for COMA in state 140 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 142 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 147 resolved as shift
WARNING: shift/reduce conflict for IF in state 151 resolved as shift
WARNING: reduce/reduce conflict in state 73 resolved using rule (term -> term MULT VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 73
