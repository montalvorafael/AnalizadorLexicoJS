Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AWAIT
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FOR
    GET
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SUPER
    UNDEFINED
    VOID

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracion
Rule 4     instrucciones -> asignacion
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> arreglo
Rule 9     instrucciones -> map
Rule 10    instrucciones -> if
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> while
Rule 13    instrucciones -> pop
Rule 14    instrucciones -> push
Rule 15    instrucciones -> mapSet
Rule 16    declaracion -> declarador VARIABLE final_linea
Rule 17    declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea
Rule 18    asignacion -> VARIABLE operadores_asig tipos_datos final_linea
Rule 19    asignacion -> VARIABLE IGUAL comparacion final_linea
Rule 20    asignacion -> VARIABLE IGUAL expresion final_linea
Rule 21    declarador -> LET
Rule 22    declarador -> VAR
Rule 23    declarador -> CONST
Rule 24    comparacion -> VARIABLE operadores_comp VARIABLE
Rule 25    comparacion -> expresion operadores_comp expresion
Rule 26    tipos_datos -> NUMBER
Rule 27    tipos_datos -> STRING
Rule 28    tipos_datos -> BOOLEAN
Rule 29    tipos_datos -> BIGINT
Rule 30    tipos_datos -> NULL
Rule 31    tipos_datos -> SYMBOL
Rule 32    operadores_asig -> IGUAL
Rule 33    operadores_asig -> MASIGUAL
Rule 34    operadores_asig -> MENOSIGUAL
Rule 35    operadores_asig -> DIVIGUAL
Rule 36    operadores_asig -> MODIGUAL
Rule 37    operadores_asig -> MULTIGUAL
Rule 38    operadores_comp -> MAYORQUE
Rule 39    operadores_comp -> MENORQUE
Rule 40    operadores_comp -> MAYORIGUALQUE
Rule 41    operadores_comp -> MENORIGUALQUE
Rule 42    operadores_comp -> NOIGUALQUE
Rule 43    operadores_comp -> IGUALIGUAL
Rule 44    operadores_log -> AND
Rule 45    operadores_log -> OR
Rule 46    expresion -> expresion MAS term
Rule 47    expresion -> expresion MENOS term
Rule 48    expresion -> term
Rule 49    term -> term MULT factor
Rule 50    term -> term MULT VARIABLE
Rule 51    term -> term DIV factor
Rule 52    term -> factor
Rule 53    factor -> VARIABLE
Rule 54    factor -> NUMBER
Rule 55    factor -> IZQPAREN expresion DERPAREN
Rule 56    final_linea -> FINALDELINEA
Rule 57    final_linea -> empty
Rule 58    empty -> <empty>
Rule 59    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 60    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 61    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 62    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 63    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 64    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 65    casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 66    casos -> CASE tipos_datos DOSPUNTOS
Rule 67    ncasos -> casos
Rule 68    ncasos -> casos ncasos
Rule 69    while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
Rule 70    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 71    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 72    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 73    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 74    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 75    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 76    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 77    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 78    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 79    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 80    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 81    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 82    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 83    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 84    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 85    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 86    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 87    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 88    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 89    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 90    lista -> lista COMA lista
Rule 91    lista -> tipos_datos
Rule 92    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 93    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
Rule 94    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 95    push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
Rule 96    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 97    map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 98    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 99    map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 100   map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
Rule 101   map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
Rule 102   mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
Rule 103   mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

Terminals, with rules where they appear

AND                  : 44
ARRAY                : 71 72 73 76 77 78 81 82 83 86 87 88
AWAIT                : 
BIGINT               : 29
BOOLEAN              : 28
BREAK                : 65
CASE                 : 65 66
CATCH                : 
CLASS                : 
COMA                 : 90 102 103
CONST                : 23 100 101
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 64
DELETE               : 
DERCORCHETE          : 70 74 75 79 80 84 85 89
DERLLAVE             : 59 60 61 62 63 63 64 69
DERPAREN             : 55 59 60 61 62 63 64 69 71 72 73 76 77 78 81 82 83 86 87 88 92 93 94 95 96 97 98 99 100 101 102 103
DIV                  : 51
DIVIGUAL             : 35
DO                   : 
DOSPUNTOS            : 64 65 66
ELSE                 : 63
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 56 65 70 71 72 73 74 75 76 77 78 79 92 94 97 99 101 103
FOR                  : 
FUNCTION             : 59 60
GET                  : 
IF                   : 61 62 63
IGUAL                : 19 20 32 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 92 93 94 95 96 97 98 99 100 101
IGUALIGUAL           : 43
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 70 74 75 79 80 84 85 89
IZQLLAVE             : 59 60 61 62 63 63 64 69
IZQPAREN             : 55 59 60 61 62 63 64 69 71 72 73 76 77 78 81 82 83 86 87 88 92 93 94 95 96 97 98 99 100 101 102 103
LET                  : 21 75 76 77 78 79 85 86 87 88 89 96 97
MAP                  : 96 97 98 99 100 101
MAPLOWER             : 102 103
MAS                  : 46
MASIGUAL             : 33
MAYORIGUALQUE        : 40
MAYORQUE             : 38
MENORIGUALQUE        : 41
MENORQUE             : 39
MENOS                : 47
MENOSIGUAL           : 34
MODIGUAL             : 36
MULT                 : 49 50
MULTIGUAL            : 37
NEW                  : 71 72 73 76 77 78 81 82 83 86 87 88 96 97 98 99 100 101
NOIGUALQUE           : 42
NULL                 : 30
NUMBER               : 26 54 72 77 82 87
OR                   : 45
PACKAGE              : 
POP                  : 92 93
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 92 93 94 95 102 103
PUSH                 : 94 95
RETURN               : 
SET                  : 102 103
STRING               : 27
SUPER                : 
SWITCH               : 64
SYMBOL               : 31
UNDEFINED            : 
VAR                  : 22 70 71 72 73 74 80 81 82 83 84 92 93 94 95 98 99
VARIABLE             : 16 17 18 19 20 24 24 50 53 59 59 60 64 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 92 92 93 93 94 94 95 95 96 97 98 99 100 101
VOID                 : 
WHILE                : 69
error                : 

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 4 65
casos                : 67 68
comparacion          : 7 19 61 62 63 69
declaracion          : 3
declarador           : 16 17
empty                : 57
expresion            : 6 20 25 25 46 47 55 69
factor               : 49 51 52
final_linea          : 16 17 18 19 20
funcion              : 5
if                   : 10 62
instrucciones        : 1 2
js                   : 2 59 60 61 62 63 63 64 0
lista                : 70 73 75 78 80 83 85 88 90 90 94 95
map                  : 9
mapSet               : 15
ncasos               : 64 68
operadores_asig      : 17 18
operadores_comp      : 24 25
operadores_log       : 
pop                  : 13
push                 : 14
switch               : 11
term                 : 46 47 48 49 50 51
tipos_datos          : 17 18 65 66 91 102 102 103 103
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadores_asig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (59) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (70) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (98) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (100) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (64) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (69) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (92) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (102) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadores_asig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (59) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (70) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (98) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (100) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (64) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (69) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (92) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (102) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    instrucciones                  shift and go to state 2
    js                             shift and go to state 30
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 3

    (3) instrucciones -> declaracion .

    VARIABLE        reduce using rule 3 (instrucciones -> declaracion .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracion .)
    VAR             reduce using rule 3 (instrucciones -> declaracion .)
    LET             reduce using rule 3 (instrucciones -> declaracion .)
    CONST           reduce using rule 3 (instrucciones -> declaracion .)
    IF              reduce using rule 3 (instrucciones -> declaracion .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracion .)
    WHILE           reduce using rule 3 (instrucciones -> declaracion .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracion .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracion .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracion .)
    $end            reduce using rule 3 (instrucciones -> declaracion .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracion .)


state 4

    (4) instrucciones -> asignacion .

    VARIABLE        reduce using rule 4 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion .)
    VAR             reduce using rule 4 (instrucciones -> asignacion .)
    LET             reduce using rule 4 (instrucciones -> asignacion .)
    CONST           reduce using rule 4 (instrucciones -> asignacion .)
    IF              reduce using rule 4 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion .)
    $end            reduce using rule 4 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion .)


state 5

    (5) instrucciones -> funcion .

    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    WHILE           reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion .
    (46) expresion -> expresion . MAS term
    (47) expresion -> expresion . MENOS term
    (25) comparacion -> expresion . operadores_comp expresion
    (38) operadores_comp -> . MAYORQUE
    (39) operadores_comp -> . MENORQUE
    (40) operadores_comp -> . MAYORIGUALQUE
    (41) operadores_comp -> . MENORIGUALQUE
    (42) operadores_comp -> . NOIGUALQUE
    (43) operadores_comp -> . IGUALIGUAL

    VARIABLE        reduce using rule 6 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion .)
    VAR             reduce using rule 6 (instrucciones -> expresion .)
    LET             reduce using rule 6 (instrucciones -> expresion .)
    CONST           reduce using rule 6 (instrucciones -> expresion .)
    IF              reduce using rule 6 (instrucciones -> expresion .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion .)
    WHILE           reduce using rule 6 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion .)
    $end            reduce using rule 6 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38
    IGUALIGUAL      shift and go to state 39

    operadores_comp                shift and go to state 33

state 7

    (7) instrucciones -> comparacion .

    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    WHILE           reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> arreglo .

    VARIABLE        reduce using rule 8 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 8 (instrucciones -> arreglo .)
    VAR             reduce using rule 8 (instrucciones -> arreglo .)
    LET             reduce using rule 8 (instrucciones -> arreglo .)
    CONST           reduce using rule 8 (instrucciones -> arreglo .)
    IF              reduce using rule 8 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 8 (instrucciones -> arreglo .)
    WHILE           reduce using rule 8 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 8 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 8 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 8 (instrucciones -> arreglo .)
    $end            reduce using rule 8 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 8 (instrucciones -> arreglo .)


state 9

    (9) instrucciones -> map .

    VARIABLE        reduce using rule 9 (instrucciones -> map .)
    FUNCTION        reduce using rule 9 (instrucciones -> map .)
    VAR             reduce using rule 9 (instrucciones -> map .)
    LET             reduce using rule 9 (instrucciones -> map .)
    CONST           reduce using rule 9 (instrucciones -> map .)
    IF              reduce using rule 9 (instrucciones -> map .)
    SWITCH          reduce using rule 9 (instrucciones -> map .)
    WHILE           reduce using rule 9 (instrucciones -> map .)
    MAPLOWER        reduce using rule 9 (instrucciones -> map .)
    NUMBER          reduce using rule 9 (instrucciones -> map .)
    IZQPAREN        reduce using rule 9 (instrucciones -> map .)
    $end            reduce using rule 9 (instrucciones -> map .)
    DERLLAVE        reduce using rule 9 (instrucciones -> map .)


state 10

    (10) instrucciones -> if .

    VARIABLE        reduce using rule 10 (instrucciones -> if .)
    FUNCTION        reduce using rule 10 (instrucciones -> if .)
    VAR             reduce using rule 10 (instrucciones -> if .)
    LET             reduce using rule 10 (instrucciones -> if .)
    CONST           reduce using rule 10 (instrucciones -> if .)
    IF              reduce using rule 10 (instrucciones -> if .)
    SWITCH          reduce using rule 10 (instrucciones -> if .)
    WHILE           reduce using rule 10 (instrucciones -> if .)
    MAPLOWER        reduce using rule 10 (instrucciones -> if .)
    NUMBER          reduce using rule 10 (instrucciones -> if .)
    IZQPAREN        reduce using rule 10 (instrucciones -> if .)
    $end            reduce using rule 10 (instrucciones -> if .)
    DERLLAVE        reduce using rule 10 (instrucciones -> if .)


state 11

    (11) instrucciones -> switch .

    VARIABLE        reduce using rule 11 (instrucciones -> switch .)
    FUNCTION        reduce using rule 11 (instrucciones -> switch .)
    VAR             reduce using rule 11 (instrucciones -> switch .)
    LET             reduce using rule 11 (instrucciones -> switch .)
    CONST           reduce using rule 11 (instrucciones -> switch .)
    IF              reduce using rule 11 (instrucciones -> switch .)
    SWITCH          reduce using rule 11 (instrucciones -> switch .)
    WHILE           reduce using rule 11 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 11 (instrucciones -> switch .)
    NUMBER          reduce using rule 11 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 11 (instrucciones -> switch .)
    $end            reduce using rule 11 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 11 (instrucciones -> switch .)


state 12

    (12) instrucciones -> while .

    VARIABLE        reduce using rule 12 (instrucciones -> while .)
    FUNCTION        reduce using rule 12 (instrucciones -> while .)
    VAR             reduce using rule 12 (instrucciones -> while .)
    LET             reduce using rule 12 (instrucciones -> while .)
    CONST           reduce using rule 12 (instrucciones -> while .)
    IF              reduce using rule 12 (instrucciones -> while .)
    SWITCH          reduce using rule 12 (instrucciones -> while .)
    WHILE           reduce using rule 12 (instrucciones -> while .)
    MAPLOWER        reduce using rule 12 (instrucciones -> while .)
    NUMBER          reduce using rule 12 (instrucciones -> while .)
    IZQPAREN        reduce using rule 12 (instrucciones -> while .)
    $end            reduce using rule 12 (instrucciones -> while .)
    DERLLAVE        reduce using rule 12 (instrucciones -> while .)


state 13

    (13) instrucciones -> pop .

    VARIABLE        reduce using rule 13 (instrucciones -> pop .)
    FUNCTION        reduce using rule 13 (instrucciones -> pop .)
    VAR             reduce using rule 13 (instrucciones -> pop .)
    LET             reduce using rule 13 (instrucciones -> pop .)
    CONST           reduce using rule 13 (instrucciones -> pop .)
    IF              reduce using rule 13 (instrucciones -> pop .)
    SWITCH          reduce using rule 13 (instrucciones -> pop .)
    WHILE           reduce using rule 13 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 13 (instrucciones -> pop .)
    NUMBER          reduce using rule 13 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 13 (instrucciones -> pop .)
    $end            reduce using rule 13 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 13 (instrucciones -> pop .)


state 14

    (14) instrucciones -> push .

    VARIABLE        reduce using rule 14 (instrucciones -> push .)
    FUNCTION        reduce using rule 14 (instrucciones -> push .)
    VAR             reduce using rule 14 (instrucciones -> push .)
    LET             reduce using rule 14 (instrucciones -> push .)
    CONST           reduce using rule 14 (instrucciones -> push .)
    IF              reduce using rule 14 (instrucciones -> push .)
    SWITCH          reduce using rule 14 (instrucciones -> push .)
    WHILE           reduce using rule 14 (instrucciones -> push .)
    MAPLOWER        reduce using rule 14 (instrucciones -> push .)
    NUMBER          reduce using rule 14 (instrucciones -> push .)
    IZQPAREN        reduce using rule 14 (instrucciones -> push .)
    $end            reduce using rule 14 (instrucciones -> push .)
    DERLLAVE        reduce using rule 14 (instrucciones -> push .)


state 15

    (15) instrucciones -> mapSet .

    VARIABLE        reduce using rule 15 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 15 (instrucciones -> mapSet .)
    VAR             reduce using rule 15 (instrucciones -> mapSet .)
    LET             reduce using rule 15 (instrucciones -> mapSet .)
    CONST           reduce using rule 15 (instrucciones -> mapSet .)
    IF              reduce using rule 15 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 15 (instrucciones -> mapSet .)
    WHILE           reduce using rule 15 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 15 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 15 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 15 (instrucciones -> mapSet .)
    $end            reduce using rule 15 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 15 (instrucciones -> mapSet .)


state 16

    (16) declaracion -> declarador . VARIABLE final_linea
    (17) declaracion -> declarador . VARIABLE operadores_asig tipos_datos final_linea

    VARIABLE        shift and go to state 40


state 17

    (18) asignacion -> VARIABLE . operadores_asig tipos_datos final_linea
    (19) asignacion -> VARIABLE . IGUAL comparacion final_linea
    (20) asignacion -> VARIABLE . IGUAL expresion final_linea
    (24) comparacion -> VARIABLE . operadores_comp VARIABLE
    (53) factor -> VARIABLE .
    (32) operadores_asig -> . IGUAL
    (33) operadores_asig -> . MASIGUAL
    (34) operadores_asig -> . MENOSIGUAL
    (35) operadores_asig -> . DIVIGUAL
    (36) operadores_asig -> . MODIGUAL
    (37) operadores_asig -> . MULTIGUAL
    (38) operadores_comp -> . MAYORQUE
    (39) operadores_comp -> . MENORQUE
    (40) operadores_comp -> . MAYORIGUALQUE
    (41) operadores_comp -> . MENORIGUALQUE
    (42) operadores_comp -> . NOIGUALQUE
    (43) operadores_comp -> . IGUALIGUAL

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUALQUE resolved as shift
  ! shift/reduce conflict for NOIGUALQUE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
    IGUAL           shift and go to state 42
    MULT            reduce using rule 53 (factor -> VARIABLE .)
    DIV             reduce using rule 53 (factor -> VARIABLE .)
    MAS             reduce using rule 53 (factor -> VARIABLE .)
    MENOS           reduce using rule 53 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 53 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 53 (factor -> VARIABLE .)
    VAR             reduce using rule 53 (factor -> VARIABLE .)
    LET             reduce using rule 53 (factor -> VARIABLE .)
    CONST           reduce using rule 53 (factor -> VARIABLE .)
    IF              reduce using rule 53 (factor -> VARIABLE .)
    SWITCH          reduce using rule 53 (factor -> VARIABLE .)
    WHILE           reduce using rule 53 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 53 (factor -> VARIABLE .)
    NUMBER          reduce using rule 53 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 53 (factor -> VARIABLE .)
    $end            reduce using rule 53 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 53 (factor -> VARIABLE .)
    MASIGUAL        shift and go to state 44
    MENOSIGUAL      shift and go to state 45
    DIVIGUAL        shift and go to state 46
    MODIGUAL        shift and go to state 47
    MULTIGUAL       shift and go to state 48
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38
    IGUALIGUAL      shift and go to state 39

  ! MAYORQUE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! IGUALIGUAL      [ reduce using rule 53 (factor -> VARIABLE .) ]

    operadores_asig                shift and go to state 41
    operadores_comp                shift and go to state 43

state 18

    (59) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 49


state 19

    (55) factor -> IZQPAREN . expresion DERPAREN
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 51
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 50
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 20

    (48) expresion -> term .
    (49) term -> term . MULT factor
    (50) term -> term . MULT VARIABLE
    (51) term -> term . DIV factor

    MAS             reduce using rule 48 (expresion -> term .)
    MENOS           reduce using rule 48 (expresion -> term .)
    MAYORQUE        reduce using rule 48 (expresion -> term .)
    MENORQUE        reduce using rule 48 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 48 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 48 (expresion -> term .)
    NOIGUALQUE      reduce using rule 48 (expresion -> term .)
    IGUALIGUAL      reduce using rule 48 (expresion -> term .)
    VARIABLE        reduce using rule 48 (expresion -> term .)
    FUNCTION        reduce using rule 48 (expresion -> term .)
    VAR             reduce using rule 48 (expresion -> term .)
    LET             reduce using rule 48 (expresion -> term .)
    CONST           reduce using rule 48 (expresion -> term .)
    IF              reduce using rule 48 (expresion -> term .)
    SWITCH          reduce using rule 48 (expresion -> term .)
    WHILE           reduce using rule 48 (expresion -> term .)
    MAPLOWER        reduce using rule 48 (expresion -> term .)
    NUMBER          reduce using rule 48 (expresion -> term .)
    IZQPAREN        reduce using rule 48 (expresion -> term .)
    $end            reduce using rule 48 (expresion -> term .)
    DERLLAVE        reduce using rule 48 (expresion -> term .)
    DERPAREN        reduce using rule 48 (expresion -> term .)
    FINALDELINEA    reduce using rule 48 (expresion -> term .)
    BREAK           reduce using rule 48 (expresion -> term .)
    MULT            shift and go to state 52
    DIV             shift and go to state 53


state 21

    (70) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (98) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (92) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (22) declarador -> VAR .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 54

  ! VARIABLE        [ reduce using rule 22 (declarador -> VAR .) ]


state 22

    (54) factor -> NUMBER .

    MULT            reduce using rule 54 (factor -> NUMBER .)
    DIV             reduce using rule 54 (factor -> NUMBER .)
    MAS             reduce using rule 54 (factor -> NUMBER .)
    MENOS           reduce using rule 54 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 54 (factor -> NUMBER .)
    MENORQUE        reduce using rule 54 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 54 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 54 (factor -> NUMBER .)
    NOIGUALQUE      reduce using rule 54 (factor -> NUMBER .)
    IGUALIGUAL      reduce using rule 54 (factor -> NUMBER .)
    VARIABLE        reduce using rule 54 (factor -> NUMBER .)
    FUNCTION        reduce using rule 54 (factor -> NUMBER .)
    VAR             reduce using rule 54 (factor -> NUMBER .)
    LET             reduce using rule 54 (factor -> NUMBER .)
    CONST           reduce using rule 54 (factor -> NUMBER .)
    IF              reduce using rule 54 (factor -> NUMBER .)
    SWITCH          reduce using rule 54 (factor -> NUMBER .)
    WHILE           reduce using rule 54 (factor -> NUMBER .)
    MAPLOWER        reduce using rule 54 (factor -> NUMBER .)
    NUMBER          reduce using rule 54 (factor -> NUMBER .)
    IZQPAREN        reduce using rule 54 (factor -> NUMBER .)
    $end            reduce using rule 54 (factor -> NUMBER .)
    DERLLAVE        reduce using rule 54 (factor -> NUMBER .)
    DERPAREN        reduce using rule 54 (factor -> NUMBER .)
    FINALDELINEA    reduce using rule 54 (factor -> NUMBER .)
    BREAK           reduce using rule 54 (factor -> NUMBER .)


state 23

    (75) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (21) declarador -> LET .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 55

  ! VARIABLE        [ reduce using rule 21 (declarador -> LET .) ]


state 24

    (100) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (23) declarador -> CONST .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 56

  ! VARIABLE        [ reduce using rule 23 (declarador -> CONST .) ]


state 25

    (61) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 57


state 26

    (64) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 58


state 27

    (69) while -> WHILE . IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE

    IZQPAREN        shift and go to state 59


state 28

    (102) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

    PUNTO           shift and go to state 60


state 29

    (52) term -> factor .

    MULT            reduce using rule 52 (term -> factor .)
    DIV             reduce using rule 52 (term -> factor .)
    MAS             reduce using rule 52 (term -> factor .)
    MENOS           reduce using rule 52 (term -> factor .)
    MAYORQUE        reduce using rule 52 (term -> factor .)
    MENORQUE        reduce using rule 52 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 52 (term -> factor .)
    MENORIGUALQUE   reduce using rule 52 (term -> factor .)
    NOIGUALQUE      reduce using rule 52 (term -> factor .)
    IGUALIGUAL      reduce using rule 52 (term -> factor .)
    VARIABLE        reduce using rule 52 (term -> factor .)
    FUNCTION        reduce using rule 52 (term -> factor .)
    VAR             reduce using rule 52 (term -> factor .)
    LET             reduce using rule 52 (term -> factor .)
    CONST           reduce using rule 52 (term -> factor .)
    IF              reduce using rule 52 (term -> factor .)
    SWITCH          reduce using rule 52 (term -> factor .)
    WHILE           reduce using rule 52 (term -> factor .)
    MAPLOWER        reduce using rule 52 (term -> factor .)
    NUMBER          reduce using rule 52 (term -> factor .)
    IZQPAREN        reduce using rule 52 (term -> factor .)
    $end            reduce using rule 52 (term -> factor .)
    DERLLAVE        reduce using rule 52 (term -> factor .)
    DERPAREN        reduce using rule 52 (term -> factor .)
    FINALDELINEA    reduce using rule 52 (term -> factor .)
    BREAK           reduce using rule 52 (term -> factor .)


state 30

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 31

    (46) expresion -> expresion MAS . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 51
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    term                           shift and go to state 61
    factor                         shift and go to state 29

state 32

    (47) expresion -> expresion MENOS . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 51
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    term                           shift and go to state 62
    factor                         shift and go to state 29

state 33

    (25) comparacion -> expresion operadores_comp . expresion
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 51
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 63
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 34

    (38) operadores_comp -> MAYORQUE .

    VARIABLE        reduce using rule 38 (operadores_comp -> MAYORQUE .)
    NUMBER          reduce using rule 38 (operadores_comp -> MAYORQUE .)
    IZQPAREN        reduce using rule 38 (operadores_comp -> MAYORQUE .)


state 35

    (39) operadores_comp -> MENORQUE .

    VARIABLE        reduce using rule 39 (operadores_comp -> MENORQUE .)
    NUMBER          reduce using rule 39 (operadores_comp -> MENORQUE .)
    IZQPAREN        reduce using rule 39 (operadores_comp -> MENORQUE .)


state 36

    (40) operadores_comp -> MAYORIGUALQUE .

    VARIABLE        reduce using rule 40 (operadores_comp -> MAYORIGUALQUE .)
    NUMBER          reduce using rule 40 (operadores_comp -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 40 (operadores_comp -> MAYORIGUALQUE .)


state 37

    (41) operadores_comp -> MENORIGUALQUE .

    VARIABLE        reduce using rule 41 (operadores_comp -> MENORIGUALQUE .)
    NUMBER          reduce using rule 41 (operadores_comp -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 41 (operadores_comp -> MENORIGUALQUE .)


state 38

    (42) operadores_comp -> NOIGUALQUE .

    VARIABLE        reduce using rule 42 (operadores_comp -> NOIGUALQUE .)
    NUMBER          reduce using rule 42 (operadores_comp -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 42 (operadores_comp -> NOIGUALQUE .)


state 39

    (43) operadores_comp -> IGUALIGUAL .

    VARIABLE        reduce using rule 43 (operadores_comp -> IGUALIGUAL .)
    NUMBER          reduce using rule 43 (operadores_comp -> IGUALIGUAL .)
    IZQPAREN        reduce using rule 43 (operadores_comp -> IGUALIGUAL .)


state 40

    (16) declaracion -> declarador VARIABLE . final_linea
    (17) declaracion -> declarador VARIABLE . operadores_asig tipos_datos final_linea
    (56) final_linea -> . FINALDELINEA
    (57) final_linea -> . empty
    (32) operadores_asig -> . IGUAL
    (33) operadores_asig -> . MASIGUAL
    (34) operadores_asig -> . MENOSIGUAL
    (35) operadores_asig -> . DIVIGUAL
    (36) operadores_asig -> . MODIGUAL
    (37) operadores_asig -> . MULTIGUAL
    (58) empty -> .

    FINALDELINEA    shift and go to state 66
    IGUAL           shift and go to state 68
    MASIGUAL        shift and go to state 44
    MENOSIGUAL      shift and go to state 45
    DIVIGUAL        shift and go to state 46
    MODIGUAL        shift and go to state 47
    MULTIGUAL       shift and go to state 48
    VARIABLE        reduce using rule 58 (empty -> .)
    FUNCTION        reduce using rule 58 (empty -> .)
    VAR             reduce using rule 58 (empty -> .)
    LET             reduce using rule 58 (empty -> .)
    CONST           reduce using rule 58 (empty -> .)
    IF              reduce using rule 58 (empty -> .)
    SWITCH          reduce using rule 58 (empty -> .)
    WHILE           reduce using rule 58 (empty -> .)
    MAPLOWER        reduce using rule 58 (empty -> .)
    NUMBER          reduce using rule 58 (empty -> .)
    IZQPAREN        reduce using rule 58 (empty -> .)
    $end            reduce using rule 58 (empty -> .)
    DERLLAVE        reduce using rule 58 (empty -> .)

    final_linea                    shift and go to state 64
    operadores_asig                shift and go to state 65
    empty                          shift and go to state 67

state 41

    (18) asignacion -> VARIABLE operadores_asig . tipos_datos final_linea
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    tipos_datos                    shift and go to state 69

state 42

    (19) asignacion -> VARIABLE IGUAL . comparacion final_linea
    (20) asignacion -> VARIABLE IGUAL . expresion final_linea
    (32) operadores_asig -> IGUAL .
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
    STRING          reduce using rule 32 (operadores_asig -> IGUAL .)
    BOOLEAN         reduce using rule 32 (operadores_asig -> IGUAL .)
    BIGINT          reduce using rule 32 (operadores_asig -> IGUAL .)
    NULL            reduce using rule 32 (operadores_asig -> IGUAL .)
    SYMBOL          reduce using rule 32 (operadores_asig -> IGUAL .)
    VARIABLE        shift and go to state 76
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

  ! NUMBER          [ reduce using rule 32 (operadores_asig -> IGUAL .) ]

    comparacion                    shift and go to state 77
    expresion                      shift and go to state 78
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 43

    (24) comparacion -> VARIABLE operadores_comp . VARIABLE

    VARIABLE        shift and go to state 79


state 44

    (33) operadores_asig -> MASIGUAL .

    NUMBER          reduce using rule 33 (operadores_asig -> MASIGUAL .)
    STRING          reduce using rule 33 (operadores_asig -> MASIGUAL .)
    BOOLEAN         reduce using rule 33 (operadores_asig -> MASIGUAL .)
    BIGINT          reduce using rule 33 (operadores_asig -> MASIGUAL .)
    NULL            reduce using rule 33 (operadores_asig -> MASIGUAL .)
    SYMBOL          reduce using rule 33 (operadores_asig -> MASIGUAL .)


state 45

    (34) operadores_asig -> MENOSIGUAL .

    NUMBER          reduce using rule 34 (operadores_asig -> MENOSIGUAL .)
    STRING          reduce using rule 34 (operadores_asig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 34 (operadores_asig -> MENOSIGUAL .)
    BIGINT          reduce using rule 34 (operadores_asig -> MENOSIGUAL .)
    NULL            reduce using rule 34 (operadores_asig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 34 (operadores_asig -> MENOSIGUAL .)


state 46

    (35) operadores_asig -> DIVIGUAL .

    NUMBER          reduce using rule 35 (operadores_asig -> DIVIGUAL .)
    STRING          reduce using rule 35 (operadores_asig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 35 (operadores_asig -> DIVIGUAL .)
    BIGINT          reduce using rule 35 (operadores_asig -> DIVIGUAL .)
    NULL            reduce using rule 35 (operadores_asig -> DIVIGUAL .)
    SYMBOL          reduce using rule 35 (operadores_asig -> DIVIGUAL .)


state 47

    (36) operadores_asig -> MODIGUAL .

    NUMBER          reduce using rule 36 (operadores_asig -> MODIGUAL .)
    STRING          reduce using rule 36 (operadores_asig -> MODIGUAL .)
    BOOLEAN         reduce using rule 36 (operadores_asig -> MODIGUAL .)
    BIGINT          reduce using rule 36 (operadores_asig -> MODIGUAL .)
    NULL            reduce using rule 36 (operadores_asig -> MODIGUAL .)
    SYMBOL          reduce using rule 36 (operadores_asig -> MODIGUAL .)


state 48

    (37) operadores_asig -> MULTIGUAL .

    NUMBER          reduce using rule 37 (operadores_asig -> MULTIGUAL .)
    STRING          reduce using rule 37 (operadores_asig -> MULTIGUAL .)
    BOOLEAN         reduce using rule 37 (operadores_asig -> MULTIGUAL .)
    BIGINT          reduce using rule 37 (operadores_asig -> MULTIGUAL .)
    NULL            reduce using rule 37 (operadores_asig -> MULTIGUAL .)
    SYMBOL          reduce using rule 37 (operadores_asig -> MULTIGUAL .)


state 49

    (59) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 80


state 50

    (55) factor -> IZQPAREN expresion . DERPAREN
    (46) expresion -> expresion . MAS term
    (47) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 81
    MAS             shift and go to state 31
    MENOS           shift and go to state 32


state 51

    (53) factor -> VARIABLE .

    MULT            reduce using rule 53 (factor -> VARIABLE .)
    DIV             reduce using rule 53 (factor -> VARIABLE .)
    DERPAREN        reduce using rule 53 (factor -> VARIABLE .)
    MAS             reduce using rule 53 (factor -> VARIABLE .)
    MENOS           reduce using rule 53 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 53 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 53 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 53 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 53 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 53 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 53 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 53 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 53 (factor -> VARIABLE .)
    VAR             reduce using rule 53 (factor -> VARIABLE .)
    LET             reduce using rule 53 (factor -> VARIABLE .)
    CONST           reduce using rule 53 (factor -> VARIABLE .)
    IF              reduce using rule 53 (factor -> VARIABLE .)
    SWITCH          reduce using rule 53 (factor -> VARIABLE .)
    WHILE           reduce using rule 53 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 53 (factor -> VARIABLE .)
    NUMBER          reduce using rule 53 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 53 (factor -> VARIABLE .)
    $end            reduce using rule 53 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 53 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 53 (factor -> VARIABLE .)
    BREAK           reduce using rule 53 (factor -> VARIABLE .)


state 52

    (49) term -> term MULT . factor
    (50) term -> term MULT . VARIABLE
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 83
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    factor                         shift and go to state 82

state 53

    (51) term -> term DIV . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 51
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    factor                         shift and go to state 84

state 54

    (70) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (98) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (92) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    IGUAL           shift and go to state 85


state 55

    (75) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 86


state 56

    (100) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IGUAL           shift and go to state 87


state 57

    (61) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 76
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 88
    expresion                      shift and go to state 89
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 58

    (64) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 90


state 59

    (69) while -> WHILE IZQPAREN . comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 76
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 91
    expresion                      shift and go to state 89
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 60

    (102) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

    SET             shift and go to state 92


state 61

    (46) expresion -> expresion MAS term .
    (49) term -> term . MULT factor
    (50) term -> term . MULT VARIABLE
    (51) term -> term . DIV factor

    MAS             reduce using rule 46 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 46 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 46 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 46 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 46 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 46 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 46 (expresion -> expresion MAS term .)
    IGUALIGUAL      reduce using rule 46 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 46 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 46 (expresion -> expresion MAS term .)
    VAR             reduce using rule 46 (expresion -> expresion MAS term .)
    LET             reduce using rule 46 (expresion -> expresion MAS term .)
    CONST           reduce using rule 46 (expresion -> expresion MAS term .)
    IF              reduce using rule 46 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 46 (expresion -> expresion MAS term .)
    WHILE           reduce using rule 46 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 46 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 46 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 46 (expresion -> expresion MAS term .)
    $end            reduce using rule 46 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 46 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 46 (expresion -> expresion MAS term .)
    FINALDELINEA    reduce using rule 46 (expresion -> expresion MAS term .)
    BREAK           reduce using rule 46 (expresion -> expresion MAS term .)
    MULT            shift and go to state 52
    DIV             shift and go to state 53


state 62

    (47) expresion -> expresion MENOS term .
    (49) term -> term . MULT factor
    (50) term -> term . MULT VARIABLE
    (51) term -> term . DIV factor

    MAS             reduce using rule 47 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 47 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 47 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 47 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 47 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 47 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 47 (expresion -> expresion MENOS term .)
    IGUALIGUAL      reduce using rule 47 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 47 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 47 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 47 (expresion -> expresion MENOS term .)
    LET             reduce using rule 47 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 47 (expresion -> expresion MENOS term .)
    IF              reduce using rule 47 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 47 (expresion -> expresion MENOS term .)
    WHILE           reduce using rule 47 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 47 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 47 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 47 (expresion -> expresion MENOS term .)
    $end            reduce using rule 47 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 47 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 47 (expresion -> expresion MENOS term .)
    FINALDELINEA    reduce using rule 47 (expresion -> expresion MENOS term .)
    BREAK           reduce using rule 47 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 52
    DIV             shift and go to state 53


state 63

    (25) comparacion -> expresion operadores_comp expresion .
    (46) expresion -> expresion . MAS term
    (47) expresion -> expresion . MENOS term

    VARIABLE        reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    FUNCTION        reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    VAR             reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    LET             reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    CONST           reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    IF              reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    SWITCH          reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    WHILE           reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    MAPLOWER        reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    NUMBER          reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    IZQPAREN        reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    $end            reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    DERLLAVE        reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    FINALDELINEA    reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    BREAK           reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    DERPAREN        reduce using rule 25 (comparacion -> expresion operadores_comp expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32


state 64

    (16) declaracion -> declarador VARIABLE final_linea .

    VARIABLE        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    FUNCTION        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    VAR             reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    LET             reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    CONST           reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    IF              reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    SWITCH          reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    WHILE           reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    MAPLOWER        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    NUMBER          reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    IZQPAREN        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    $end            reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)
    DERLLAVE        reduce using rule 16 (declaracion -> declarador VARIABLE final_linea .)


state 65

    (17) declaracion -> declarador VARIABLE operadores_asig . tipos_datos final_linea
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    tipos_datos                    shift and go to state 93

state 66

    (56) final_linea -> FINALDELINEA .

    VARIABLE        reduce using rule 56 (final_linea -> FINALDELINEA .)
    FUNCTION        reduce using rule 56 (final_linea -> FINALDELINEA .)
    VAR             reduce using rule 56 (final_linea -> FINALDELINEA .)
    LET             reduce using rule 56 (final_linea -> FINALDELINEA .)
    CONST           reduce using rule 56 (final_linea -> FINALDELINEA .)
    IF              reduce using rule 56 (final_linea -> FINALDELINEA .)
    SWITCH          reduce using rule 56 (final_linea -> FINALDELINEA .)
    WHILE           reduce using rule 56 (final_linea -> FINALDELINEA .)
    MAPLOWER        reduce using rule 56 (final_linea -> FINALDELINEA .)
    NUMBER          reduce using rule 56 (final_linea -> FINALDELINEA .)
    IZQPAREN        reduce using rule 56 (final_linea -> FINALDELINEA .)
    $end            reduce using rule 56 (final_linea -> FINALDELINEA .)
    DERLLAVE        reduce using rule 56 (final_linea -> FINALDELINEA .)
    BREAK           reduce using rule 56 (final_linea -> FINALDELINEA .)


state 67

    (57) final_linea -> empty .

    VARIABLE        reduce using rule 57 (final_linea -> empty .)
    FUNCTION        reduce using rule 57 (final_linea -> empty .)
    VAR             reduce using rule 57 (final_linea -> empty .)
    LET             reduce using rule 57 (final_linea -> empty .)
    CONST           reduce using rule 57 (final_linea -> empty .)
    IF              reduce using rule 57 (final_linea -> empty .)
    SWITCH          reduce using rule 57 (final_linea -> empty .)
    WHILE           reduce using rule 57 (final_linea -> empty .)
    MAPLOWER        reduce using rule 57 (final_linea -> empty .)
    NUMBER          reduce using rule 57 (final_linea -> empty .)
    IZQPAREN        reduce using rule 57 (final_linea -> empty .)
    $end            reduce using rule 57 (final_linea -> empty .)
    DERLLAVE        reduce using rule 57 (final_linea -> empty .)
    BREAK           reduce using rule 57 (final_linea -> empty .)


state 68

    (32) operadores_asig -> IGUAL .

    NUMBER          reduce using rule 32 (operadores_asig -> IGUAL .)
    STRING          reduce using rule 32 (operadores_asig -> IGUAL .)
    BOOLEAN         reduce using rule 32 (operadores_asig -> IGUAL .)
    BIGINT          reduce using rule 32 (operadores_asig -> IGUAL .)
    NULL            reduce using rule 32 (operadores_asig -> IGUAL .)
    SYMBOL          reduce using rule 32 (operadores_asig -> IGUAL .)


state 69

    (18) asignacion -> VARIABLE operadores_asig tipos_datos . final_linea
    (56) final_linea -> . FINALDELINEA
    (57) final_linea -> . empty
    (58) empty -> .

    FINALDELINEA    shift and go to state 66
    VARIABLE        reduce using rule 58 (empty -> .)
    FUNCTION        reduce using rule 58 (empty -> .)
    VAR             reduce using rule 58 (empty -> .)
    LET             reduce using rule 58 (empty -> .)
    CONST           reduce using rule 58 (empty -> .)
    IF              reduce using rule 58 (empty -> .)
    SWITCH          reduce using rule 58 (empty -> .)
    WHILE           reduce using rule 58 (empty -> .)
    MAPLOWER        reduce using rule 58 (empty -> .)
    NUMBER          reduce using rule 58 (empty -> .)
    IZQPAREN        reduce using rule 58 (empty -> .)
    $end            reduce using rule 58 (empty -> .)
    DERLLAVE        reduce using rule 58 (empty -> .)
    BREAK           reduce using rule 58 (empty -> .)

    final_linea                    shift and go to state 94
    empty                          shift and go to state 67

state 70

    (26) tipos_datos -> NUMBER .

    FINALDELINEA    reduce using rule 26 (tipos_datos -> NUMBER .)
    VARIABLE        reduce using rule 26 (tipos_datos -> NUMBER .)
    FUNCTION        reduce using rule 26 (tipos_datos -> NUMBER .)
    VAR             reduce using rule 26 (tipos_datos -> NUMBER .)
    LET             reduce using rule 26 (tipos_datos -> NUMBER .)
    CONST           reduce using rule 26 (tipos_datos -> NUMBER .)
    IF              reduce using rule 26 (tipos_datos -> NUMBER .)
    SWITCH          reduce using rule 26 (tipos_datos -> NUMBER .)
    WHILE           reduce using rule 26 (tipos_datos -> NUMBER .)
    MAPLOWER        reduce using rule 26 (tipos_datos -> NUMBER .)
    NUMBER          reduce using rule 26 (tipos_datos -> NUMBER .)
    IZQPAREN        reduce using rule 26 (tipos_datos -> NUMBER .)
    $end            reduce using rule 26 (tipos_datos -> NUMBER .)
    DERLLAVE        reduce using rule 26 (tipos_datos -> NUMBER .)
    BREAK           reduce using rule 26 (tipos_datos -> NUMBER .)
    DERCORCHETE     reduce using rule 26 (tipos_datos -> NUMBER .)
    COMA            reduce using rule 26 (tipos_datos -> NUMBER .)
    DERPAREN        reduce using rule 26 (tipos_datos -> NUMBER .)
    DOSPUNTOS       reduce using rule 26 (tipos_datos -> NUMBER .)


state 71

    (27) tipos_datos -> STRING .

    FINALDELINEA    reduce using rule 27 (tipos_datos -> STRING .)
    VARIABLE        reduce using rule 27 (tipos_datos -> STRING .)
    FUNCTION        reduce using rule 27 (tipos_datos -> STRING .)
    VAR             reduce using rule 27 (tipos_datos -> STRING .)
    LET             reduce using rule 27 (tipos_datos -> STRING .)
    CONST           reduce using rule 27 (tipos_datos -> STRING .)
    IF              reduce using rule 27 (tipos_datos -> STRING .)
    SWITCH          reduce using rule 27 (tipos_datos -> STRING .)
    WHILE           reduce using rule 27 (tipos_datos -> STRING .)
    MAPLOWER        reduce using rule 27 (tipos_datos -> STRING .)
    NUMBER          reduce using rule 27 (tipos_datos -> STRING .)
    IZQPAREN        reduce using rule 27 (tipos_datos -> STRING .)
    $end            reduce using rule 27 (tipos_datos -> STRING .)
    DERLLAVE        reduce using rule 27 (tipos_datos -> STRING .)
    BREAK           reduce using rule 27 (tipos_datos -> STRING .)
    DERCORCHETE     reduce using rule 27 (tipos_datos -> STRING .)
    COMA            reduce using rule 27 (tipos_datos -> STRING .)
    DERPAREN        reduce using rule 27 (tipos_datos -> STRING .)
    DOSPUNTOS       reduce using rule 27 (tipos_datos -> STRING .)


state 72

    (28) tipos_datos -> BOOLEAN .

    FINALDELINEA    reduce using rule 28 (tipos_datos -> BOOLEAN .)
    VARIABLE        reduce using rule 28 (tipos_datos -> BOOLEAN .)
    FUNCTION        reduce using rule 28 (tipos_datos -> BOOLEAN .)
    VAR             reduce using rule 28 (tipos_datos -> BOOLEAN .)
    LET             reduce using rule 28 (tipos_datos -> BOOLEAN .)
    CONST           reduce using rule 28 (tipos_datos -> BOOLEAN .)
    IF              reduce using rule 28 (tipos_datos -> BOOLEAN .)
    SWITCH          reduce using rule 28 (tipos_datos -> BOOLEAN .)
    WHILE           reduce using rule 28 (tipos_datos -> BOOLEAN .)
    MAPLOWER        reduce using rule 28 (tipos_datos -> BOOLEAN .)
    NUMBER          reduce using rule 28 (tipos_datos -> BOOLEAN .)
    IZQPAREN        reduce using rule 28 (tipos_datos -> BOOLEAN .)
    $end            reduce using rule 28 (tipos_datos -> BOOLEAN .)
    DERLLAVE        reduce using rule 28 (tipos_datos -> BOOLEAN .)
    BREAK           reduce using rule 28 (tipos_datos -> BOOLEAN .)
    DERCORCHETE     reduce using rule 28 (tipos_datos -> BOOLEAN .)
    COMA            reduce using rule 28 (tipos_datos -> BOOLEAN .)
    DERPAREN        reduce using rule 28 (tipos_datos -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 28 (tipos_datos -> BOOLEAN .)


state 73

    (29) tipos_datos -> BIGINT .

    FINALDELINEA    reduce using rule 29 (tipos_datos -> BIGINT .)
    VARIABLE        reduce using rule 29 (tipos_datos -> BIGINT .)
    FUNCTION        reduce using rule 29 (tipos_datos -> BIGINT .)
    VAR             reduce using rule 29 (tipos_datos -> BIGINT .)
    LET             reduce using rule 29 (tipos_datos -> BIGINT .)
    CONST           reduce using rule 29 (tipos_datos -> BIGINT .)
    IF              reduce using rule 29 (tipos_datos -> BIGINT .)
    SWITCH          reduce using rule 29 (tipos_datos -> BIGINT .)
    WHILE           reduce using rule 29 (tipos_datos -> BIGINT .)
    MAPLOWER        reduce using rule 29 (tipos_datos -> BIGINT .)
    NUMBER          reduce using rule 29 (tipos_datos -> BIGINT .)
    IZQPAREN        reduce using rule 29 (tipos_datos -> BIGINT .)
    $end            reduce using rule 29 (tipos_datos -> BIGINT .)
    DERLLAVE        reduce using rule 29 (tipos_datos -> BIGINT .)
    BREAK           reduce using rule 29 (tipos_datos -> BIGINT .)
    DERCORCHETE     reduce using rule 29 (tipos_datos -> BIGINT .)
    COMA            reduce using rule 29 (tipos_datos -> BIGINT .)
    DERPAREN        reduce using rule 29 (tipos_datos -> BIGINT .)
    DOSPUNTOS       reduce using rule 29 (tipos_datos -> BIGINT .)


state 74

    (30) tipos_datos -> NULL .

    FINALDELINEA    reduce using rule 30 (tipos_datos -> NULL .)
    VARIABLE        reduce using rule 30 (tipos_datos -> NULL .)
    FUNCTION        reduce using rule 30 (tipos_datos -> NULL .)
    VAR             reduce using rule 30 (tipos_datos -> NULL .)
    LET             reduce using rule 30 (tipos_datos -> NULL .)
    CONST           reduce using rule 30 (tipos_datos -> NULL .)
    IF              reduce using rule 30 (tipos_datos -> NULL .)
    SWITCH          reduce using rule 30 (tipos_datos -> NULL .)
    WHILE           reduce using rule 30 (tipos_datos -> NULL .)
    MAPLOWER        reduce using rule 30 (tipos_datos -> NULL .)
    NUMBER          reduce using rule 30 (tipos_datos -> NULL .)
    IZQPAREN        reduce using rule 30 (tipos_datos -> NULL .)
    $end            reduce using rule 30 (tipos_datos -> NULL .)
    DERLLAVE        reduce using rule 30 (tipos_datos -> NULL .)
    BREAK           reduce using rule 30 (tipos_datos -> NULL .)
    DERCORCHETE     reduce using rule 30 (tipos_datos -> NULL .)
    COMA            reduce using rule 30 (tipos_datos -> NULL .)
    DERPAREN        reduce using rule 30 (tipos_datos -> NULL .)
    DOSPUNTOS       reduce using rule 30 (tipos_datos -> NULL .)


state 75

    (31) tipos_datos -> SYMBOL .

    FINALDELINEA    reduce using rule 31 (tipos_datos -> SYMBOL .)
    VARIABLE        reduce using rule 31 (tipos_datos -> SYMBOL .)
    FUNCTION        reduce using rule 31 (tipos_datos -> SYMBOL .)
    VAR             reduce using rule 31 (tipos_datos -> SYMBOL .)
    LET             reduce using rule 31 (tipos_datos -> SYMBOL .)
    CONST           reduce using rule 31 (tipos_datos -> SYMBOL .)
    IF              reduce using rule 31 (tipos_datos -> SYMBOL .)
    SWITCH          reduce using rule 31 (tipos_datos -> SYMBOL .)
    WHILE           reduce using rule 31 (tipos_datos -> SYMBOL .)
    MAPLOWER        reduce using rule 31 (tipos_datos -> SYMBOL .)
    NUMBER          reduce using rule 31 (tipos_datos -> SYMBOL .)
    IZQPAREN        reduce using rule 31 (tipos_datos -> SYMBOL .)
    $end            reduce using rule 31 (tipos_datos -> SYMBOL .)
    DERLLAVE        reduce using rule 31 (tipos_datos -> SYMBOL .)
    BREAK           reduce using rule 31 (tipos_datos -> SYMBOL .)
    DERCORCHETE     reduce using rule 31 (tipos_datos -> SYMBOL .)
    COMA            reduce using rule 31 (tipos_datos -> SYMBOL .)
    DERPAREN        reduce using rule 31 (tipos_datos -> SYMBOL .)
    DOSPUNTOS       reduce using rule 31 (tipos_datos -> SYMBOL .)


state 76

    (24) comparacion -> VARIABLE . operadores_comp VARIABLE
    (53) factor -> VARIABLE .
    (38) operadores_comp -> . MAYORQUE
    (39) operadores_comp -> . MENORQUE
    (40) operadores_comp -> . MAYORIGUALQUE
    (41) operadores_comp -> . MENORIGUALQUE
    (42) operadores_comp -> . NOIGUALQUE
    (43) operadores_comp -> . IGUALIGUAL

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUALQUE resolved as shift
  ! shift/reduce conflict for MENORIGUALQUE resolved as shift
  ! shift/reduce conflict for NOIGUALQUE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
    MULT            reduce using rule 53 (factor -> VARIABLE .)
    DIV             reduce using rule 53 (factor -> VARIABLE .)
    MAS             reduce using rule 53 (factor -> VARIABLE .)
    MENOS           reduce using rule 53 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 53 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 53 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 53 (factor -> VARIABLE .)
    VAR             reduce using rule 53 (factor -> VARIABLE .)
    LET             reduce using rule 53 (factor -> VARIABLE .)
    CONST           reduce using rule 53 (factor -> VARIABLE .)
    IF              reduce using rule 53 (factor -> VARIABLE .)
    SWITCH          reduce using rule 53 (factor -> VARIABLE .)
    WHILE           reduce using rule 53 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 53 (factor -> VARIABLE .)
    NUMBER          reduce using rule 53 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 53 (factor -> VARIABLE .)
    $end            reduce using rule 53 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 53 (factor -> VARIABLE .)
    BREAK           reduce using rule 53 (factor -> VARIABLE .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38
    IGUALIGUAL      shift and go to state 39

  ! MAYORQUE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! IGUALIGUAL      [ reduce using rule 53 (factor -> VARIABLE .) ]

    operadores_comp                shift and go to state 43

state 77

    (19) asignacion -> VARIABLE IGUAL comparacion . final_linea
    (56) final_linea -> . FINALDELINEA
    (57) final_linea -> . empty
    (58) empty -> .

    FINALDELINEA    shift and go to state 66
    VARIABLE        reduce using rule 58 (empty -> .)
    FUNCTION        reduce using rule 58 (empty -> .)
    VAR             reduce using rule 58 (empty -> .)
    LET             reduce using rule 58 (empty -> .)
    CONST           reduce using rule 58 (empty -> .)
    IF              reduce using rule 58 (empty -> .)
    SWITCH          reduce using rule 58 (empty -> .)
    WHILE           reduce using rule 58 (empty -> .)
    MAPLOWER        reduce using rule 58 (empty -> .)
    NUMBER          reduce using rule 58 (empty -> .)
    IZQPAREN        reduce using rule 58 (empty -> .)
    $end            reduce using rule 58 (empty -> .)
    DERLLAVE        reduce using rule 58 (empty -> .)
    BREAK           reduce using rule 58 (empty -> .)

    final_linea                    shift and go to state 95
    empty                          shift and go to state 67

state 78

    (20) asignacion -> VARIABLE IGUAL expresion . final_linea
    (25) comparacion -> expresion . operadores_comp expresion
    (46) expresion -> expresion . MAS term
    (47) expresion -> expresion . MENOS term
    (56) final_linea -> . FINALDELINEA
    (57) final_linea -> . empty
    (38) operadores_comp -> . MAYORQUE
    (39) operadores_comp -> . MENORQUE
    (40) operadores_comp -> . MAYORIGUALQUE
    (41) operadores_comp -> . MENORIGUALQUE
    (42) operadores_comp -> . NOIGUALQUE
    (43) operadores_comp -> . IGUALIGUAL
    (58) empty -> .

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    FINALDELINEA    shift and go to state 66
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38
    IGUALIGUAL      shift and go to state 39
    VARIABLE        reduce using rule 58 (empty -> .)
    FUNCTION        reduce using rule 58 (empty -> .)
    VAR             reduce using rule 58 (empty -> .)
    LET             reduce using rule 58 (empty -> .)
    CONST           reduce using rule 58 (empty -> .)
    IF              reduce using rule 58 (empty -> .)
    SWITCH          reduce using rule 58 (empty -> .)
    WHILE           reduce using rule 58 (empty -> .)
    MAPLOWER        reduce using rule 58 (empty -> .)
    NUMBER          reduce using rule 58 (empty -> .)
    IZQPAREN        reduce using rule 58 (empty -> .)
    $end            reduce using rule 58 (empty -> .)
    DERLLAVE        reduce using rule 58 (empty -> .)
    BREAK           reduce using rule 58 (empty -> .)

    final_linea                    shift and go to state 96
    operadores_comp                shift and go to state 33
    empty                          shift and go to state 67

state 79

    (24) comparacion -> VARIABLE operadores_comp VARIABLE .

    VARIABLE        reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    FUNCTION        reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    VAR             reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    LET             reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    CONST           reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    IF              reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    SWITCH          reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    WHILE           reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    MAPLOWER        reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    NUMBER          reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    IZQPAREN        reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    $end            reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    DERLLAVE        reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    FINALDELINEA    reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    BREAK           reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)
    DERPAREN        reduce using rule 24 (comparacion -> VARIABLE operadores_comp VARIABLE .)


state 80

    (59) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 97
    DERPAREN        shift and go to state 98


state 81

    (55) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    IGUALIGUAL      reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    WHILE           reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    FINALDELINEA    reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)
    BREAK           reduce using rule 55 (factor -> IZQPAREN expresion DERPAREN .)


state 82

    (49) term -> term MULT factor .

    MULT            reduce using rule 49 (term -> term MULT factor .)
    DIV             reduce using rule 49 (term -> term MULT factor .)
    MAS             reduce using rule 49 (term -> term MULT factor .)
    MENOS           reduce using rule 49 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 49 (term -> term MULT factor .)
    MENORQUE        reduce using rule 49 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 49 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 49 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 49 (term -> term MULT factor .)
    IGUALIGUAL      reduce using rule 49 (term -> term MULT factor .)
    VARIABLE        reduce using rule 49 (term -> term MULT factor .)
    FUNCTION        reduce using rule 49 (term -> term MULT factor .)
    VAR             reduce using rule 49 (term -> term MULT factor .)
    LET             reduce using rule 49 (term -> term MULT factor .)
    CONST           reduce using rule 49 (term -> term MULT factor .)
    IF              reduce using rule 49 (term -> term MULT factor .)
    SWITCH          reduce using rule 49 (term -> term MULT factor .)
    WHILE           reduce using rule 49 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 49 (term -> term MULT factor .)
    NUMBER          reduce using rule 49 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 49 (term -> term MULT factor .)
    $end            reduce using rule 49 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 49 (term -> term MULT factor .)
    DERPAREN        reduce using rule 49 (term -> term MULT factor .)
    FINALDELINEA    reduce using rule 49 (term -> term MULT factor .)
    BREAK           reduce using rule 49 (term -> term MULT factor .)


state 83

    (50) term -> term MULT VARIABLE .
    (53) factor -> VARIABLE .

  ! reduce/reduce conflict for MULT resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAS resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENOS resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAYORQUE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAYORIGUALQUE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MENORIGUALQUE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for NOIGUALQUE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for LET resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for SWITCH resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for DERPAREN resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for FINALDELINEA resolved using rule 50 (term -> term MULT VARIABLE .)
  ! reduce/reduce conflict for BREAK resolved using rule 50 (term -> term MULT VARIABLE .)
    MULT            reduce using rule 50 (term -> term MULT VARIABLE .)
    DIV             reduce using rule 50 (term -> term MULT VARIABLE .)
    MAS             reduce using rule 50 (term -> term MULT VARIABLE .)
    MENOS           reduce using rule 50 (term -> term MULT VARIABLE .)
    MAYORQUE        reduce using rule 50 (term -> term MULT VARIABLE .)
    MENORQUE        reduce using rule 50 (term -> term MULT VARIABLE .)
    MAYORIGUALQUE   reduce using rule 50 (term -> term MULT VARIABLE .)
    MENORIGUALQUE   reduce using rule 50 (term -> term MULT VARIABLE .)
    NOIGUALQUE      reduce using rule 50 (term -> term MULT VARIABLE .)
    IGUALIGUAL      reduce using rule 50 (term -> term MULT VARIABLE .)
    VARIABLE        reduce using rule 50 (term -> term MULT VARIABLE .)
    FUNCTION        reduce using rule 50 (term -> term MULT VARIABLE .)
    VAR             reduce using rule 50 (term -> term MULT VARIABLE .)
    LET             reduce using rule 50 (term -> term MULT VARIABLE .)
    CONST           reduce using rule 50 (term -> term MULT VARIABLE .)
    IF              reduce using rule 50 (term -> term MULT VARIABLE .)
    SWITCH          reduce using rule 50 (term -> term MULT VARIABLE .)
    WHILE           reduce using rule 50 (term -> term MULT VARIABLE .)
    MAPLOWER        reduce using rule 50 (term -> term MULT VARIABLE .)
    NUMBER          reduce using rule 50 (term -> term MULT VARIABLE .)
    IZQPAREN        reduce using rule 50 (term -> term MULT VARIABLE .)
    $end            reduce using rule 50 (term -> term MULT VARIABLE .)
    DERLLAVE        reduce using rule 50 (term -> term MULT VARIABLE .)
    DERPAREN        reduce using rule 50 (term -> term MULT VARIABLE .)
    FINALDELINEA    reduce using rule 50 (term -> term MULT VARIABLE .)
    BREAK           reduce using rule 50 (term -> term MULT VARIABLE .)

  ! MULT            [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! DIV             [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MAS             [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MENOS           [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MAYORQUE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MAYORIGUALQUE   [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MENORIGUALQUE   [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! NOIGUALQUE      [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! IGUALIGUAL      [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! FUNCTION        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! VAR             [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! LET             [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! CONST           [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! IF              [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! SWITCH          [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! MAPLOWER        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! IZQPAREN        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! $end            [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! DERLLAVE        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! DERPAREN        [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! FINALDELINEA    [ reduce using rule 53 (factor -> VARIABLE .) ]
  ! BREAK           [ reduce using rule 53 (factor -> VARIABLE .) ]


state 84

    (51) term -> term DIV factor .

    MULT            reduce using rule 51 (term -> term DIV factor .)
    DIV             reduce using rule 51 (term -> term DIV factor .)
    MAS             reduce using rule 51 (term -> term DIV factor .)
    MENOS           reduce using rule 51 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 51 (term -> term DIV factor .)
    MENORQUE        reduce using rule 51 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 51 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 51 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 51 (term -> term DIV factor .)
    IGUALIGUAL      reduce using rule 51 (term -> term DIV factor .)
    VARIABLE        reduce using rule 51 (term -> term DIV factor .)
    FUNCTION        reduce using rule 51 (term -> term DIV factor .)
    VAR             reduce using rule 51 (term -> term DIV factor .)
    LET             reduce using rule 51 (term -> term DIV factor .)
    CONST           reduce using rule 51 (term -> term DIV factor .)
    IF              reduce using rule 51 (term -> term DIV factor .)
    SWITCH          reduce using rule 51 (term -> term DIV factor .)
    WHILE           reduce using rule 51 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 51 (term -> term DIV factor .)
    NUMBER          reduce using rule 51 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 51 (term -> term DIV factor .)
    $end            reduce using rule 51 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 51 (term -> term DIV factor .)
    DERPAREN        reduce using rule 51 (term -> term DIV factor .)
    FINALDELINEA    reduce using rule 51 (term -> term DIV factor .)
    BREAK           reduce using rule 51 (term -> term DIV factor .)


state 85

    (70) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (98) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (99) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (92) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    IZQCORCHETE     shift and go to state 100
    NEW             shift and go to state 101
    VARIABLE        shift and go to state 99


state 86

    (75) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (96) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (97) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    IZQCORCHETE     shift and go to state 102
    NEW             shift and go to state 103


state 87

    (100) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN
    (101) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN FINALDELINEA

    NEW             shift and go to state 104


state 88

    (61) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 105


state 89

    (25) comparacion -> expresion . operadores_comp expresion
    (46) expresion -> expresion . MAS term
    (47) expresion -> expresion . MENOS term
    (38) operadores_comp -> . MAYORQUE
    (39) operadores_comp -> . MENORQUE
    (40) operadores_comp -> . MAYORIGUALQUE
    (41) operadores_comp -> . MENORIGUALQUE
    (42) operadores_comp -> . NOIGUALQUE
    (43) operadores_comp -> . IGUALIGUAL

    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    MAYORIGUALQUE   shift and go to state 36
    MENORIGUALQUE   shift and go to state 37
    NOIGUALQUE      shift and go to state 38
    IGUALIGUAL      shift and go to state 39

    operadores_comp                shift and go to state 33

state 90

    (64) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 106


state 91

    (69) while -> WHILE IZQPAREN comparacion . DERPAREN IZQLLAVE expresion DERLLAVE

    DERPAREN        shift and go to state 107


state 92

    (102) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 108


state 93

    (17) declaracion -> declarador VARIABLE operadores_asig tipos_datos . final_linea
    (56) final_linea -> . FINALDELINEA
    (57) final_linea -> . empty
    (58) empty -> .

    FINALDELINEA    shift and go to state 66
    VARIABLE        reduce using rule 58 (empty -> .)
    FUNCTION        reduce using rule 58 (empty -> .)
    VAR             reduce using rule 58 (empty -> .)
    LET             reduce using rule 58 (empty -> .)
    CONST           reduce using rule 58 (empty -> .)
    IF              reduce using rule 58 (empty -> .)
    SWITCH          reduce using rule 58 (empty -> .)
    WHILE           reduce using rule 58 (empty -> .)
    MAPLOWER        reduce using rule 58 (empty -> .)
    NUMBER          reduce using rule 58 (empty -> .)
    IZQPAREN        reduce using rule 58 (empty -> .)
    $end            reduce using rule 58 (empty -> .)
    DERLLAVE        reduce using rule 58 (empty -> .)

    final_linea                    shift and go to state 109
    empty                          shift and go to state 67

state 94

    (18) asignacion -> VARIABLE operadores_asig tipos_datos final_linea .

    VARIABLE        reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    FUNCTION        reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    VAR             reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    LET             reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    CONST           reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    IF              reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    SWITCH          reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    WHILE           reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    MAPLOWER        reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    NUMBER          reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    IZQPAREN        reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    $end            reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    DERLLAVE        reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    BREAK           reduce using rule 18 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)


state 95

    (19) asignacion -> VARIABLE IGUAL comparacion final_linea .

    VARIABLE        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    FUNCTION        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    VAR             reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    LET             reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    CONST           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    IF              reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    SWITCH          reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    WHILE           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    MAPLOWER        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    NUMBER          reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    IZQPAREN        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    $end            reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    DERLLAVE        reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    BREAK           reduce using rule 19 (asignacion -> VARIABLE IGUAL comparacion final_linea .)


state 96

    (20) asignacion -> VARIABLE IGUAL expresion final_linea .

    VARIABLE        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    FUNCTION        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    VAR             reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    LET             reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    CONST           reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    IF              reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    SWITCH          reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    WHILE           reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    MAPLOWER        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    NUMBER          reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    IZQPAREN        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    $end            reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    DERLLAVE        reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    BREAK           reduce using rule 20 (asignacion -> VARIABLE IGUAL expresion final_linea .)


state 97

    (59) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 110


state 98

    (60) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 111


state 99

    (92) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN
    (94) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN

    PUNTO           shift and go to state 112


state 100

    (70) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (74) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (84) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (90) lista -> . lista COMA lista
    (91) lista -> . tipos_datos
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 114
    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    lista                          shift and go to state 113
    tipos_datos                    shift and go to state 115

state 101

    (71) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (82) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (98) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (99) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    ARRAY           shift and go to state 116
    MAP             shift and go to state 117


state 102

    (75) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (79) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (89) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (90) lista -> . lista COMA lista
    (91) lista -> . tipos_datos
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 119
    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    lista                          shift and go to state 118
    tipos_datos                    shift and go to state 115

state 103

    (76) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (87) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (96) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (97) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    ARRAY           shift and go to state 120
    MAP             shift and go to state 121


state 104

    (100) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN
    (101) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN FINALDELINEA

    MAP             shift and go to state 122


state 105

    (61) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (62) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (63) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 123


state 106

    (64) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 124


state 107

    (69) while -> WHILE IZQPAREN comparacion DERPAREN . IZQLLAVE expresion DERLLAVE

    IZQLLAVE        shift and go to state 125


state 108

    (102) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    tipos_datos                    shift and go to state 126

state 109

    (17) declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .

    VARIABLE        reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    FUNCTION        reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    VAR             reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    LET             reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    CONST           reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    IF              reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    SWITCH          reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    WHILE           reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    MAPLOWER        reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    NUMBER          reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    IZQPAREN        reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    $end            reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)
    DERLLAVE        reduce using rule 17 (declaracion -> declarador VARIABLE operadores_asig tipos_datos final_linea .)


state 110

    (59) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 127


state 111

    (60) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadores_asig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (59) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (70) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (98) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (100) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (64) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (69) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (92) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (102) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 128
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 112

    (92) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN
    (94) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN

    POP             shift and go to state 129
    PUSH            shift and go to state 130


state 113

    (70) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (90) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 131
    COMA            shift and go to state 132


state 114

    (74) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (84) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 133
    VARIABLE        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VAR             reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 115

    (91) lista -> tipos_datos .

    DERCORCHETE     reduce using rule 91 (lista -> tipos_datos .)
    COMA            reduce using rule 91 (lista -> tipos_datos .)
    DERPAREN        reduce using rule 91 (lista -> tipos_datos .)


state 116

    (71) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 134


state 117

    (98) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (99) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 135


state 118

    (75) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (90) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 136
    COMA            shift and go to state 132


state 119

    (79) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (89) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 137
    VARIABLE        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VAR             reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 120

    (76) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 138


state 121

    (96) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (97) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 139


state 122

    (100) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN
    (101) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN FINALDELINEA

    IZQPAREN        shift and go to state 140


state 123

    (61) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (62) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (63) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadores_asig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (59) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (70) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (98) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (100) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (64) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (69) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (92) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (102) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 7
    js                             shift and go to state 141
    if                             shift and go to state 10
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 124

    (64) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (67) ncasos -> . casos
    (68) ncasos -> . casos ncasos
    (65) casos -> . CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (66) casos -> . CASE tipos_datos DOSPUNTOS

    CASE            shift and go to state 144

    ncasos                         shift and go to state 142
    casos                          shift and go to state 143

state 125

    (69) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE . expresion DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 51
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    expresion                      shift and go to state 145
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 126

    (102) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos . COMA tipos_datos DERPAREN
    (103) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos . COMA tipos_datos DERPAREN FINALDELINEA

    COMA            shift and go to state 146


state 127

    (59) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadores_asig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (59) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (70) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (98) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (100) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (64) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (69) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (92) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (102) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 147
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 128

    (60) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 148


state 129

    (92) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN

    IZQPAREN        shift and go to state 149


state 130

    (94) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 150


state 131

    (70) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 151
    VARIABLE        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 132

    (90) lista -> lista COMA . lista
    (90) lista -> . lista COMA lista
    (91) lista -> . tipos_datos
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    lista                          shift and go to state 152
    tipos_datos                    shift and go to state 115

state 133

    (74) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 74 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 134

    (71) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (72) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (81) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (90) lista -> . lista COMA lista
    (91) lista -> . tipos_datos
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 153
    NUMBER          shift and go to state 154
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    lista                          shift and go to state 155
    tipos_datos                    shift and go to state 115

state 135

    (98) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (99) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 156


state 136

    (75) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 157
    VARIABLE        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VAR             reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 137

    (79) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 79 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 138

    (76) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (77) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (86) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (90) lista -> . lista COMA lista
    (91) lista -> . tipos_datos
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 158
    NUMBER          shift and go to state 159
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    lista                          shift and go to state 160
    tipos_datos                    shift and go to state 115

state 139

    (96) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (97) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 161


state 140

    (100) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN
    (101) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 162


state 141

    (61) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (62) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (63) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 163


state 142

    (64) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 164


state 143

    (67) ncasos -> casos .
    (68) ncasos -> casos . ncasos
    (67) ncasos -> . casos
    (68) ncasos -> . casos ncasos
    (65) casos -> . CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (66) casos -> . CASE tipos_datos DOSPUNTOS

    DEFAULT         reduce using rule 67 (ncasos -> casos .)
    CASE            shift and go to state 144

    casos                          shift and go to state 143
    ncasos                         shift and go to state 165

state 144

    (65) casos -> CASE . tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (66) casos -> CASE . tipos_datos DOSPUNTOS
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    tipos_datos                    shift and go to state 166

state 145

    (69) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion . DERLLAVE
    (46) expresion -> expresion . MAS term
    (47) expresion -> expresion . MENOS term

    DERLLAVE        shift and go to state 167
    MAS             shift and go to state 31
    MENOS           shift and go to state 32


state 146

    (102) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA . tipos_datos DERPAREN
    (103) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA . tipos_datos DERPAREN FINALDELINEA
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    tipos_datos                    shift and go to state 168

state 147

    (59) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 169


state 148

    (60) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 60 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 149

    (92) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA
    (93) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN

    DERPAREN        shift and go to state 170


state 150

    (94) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN
    (90) lista -> . lista COMA lista
    (91) lista -> . tipos_datos
    (26) tipos_datos -> . NUMBER
    (27) tipos_datos -> . STRING
    (28) tipos_datos -> . BOOLEAN
    (29) tipos_datos -> . BIGINT
    (30) tipos_datos -> . NULL
    (31) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 70
    STRING          shift and go to state 71
    BOOLEAN         shift and go to state 72
    BIGINT          shift and go to state 73
    NULL            shift and go to state 74
    SYMBOL          shift and go to state 75

    lista                          shift and go to state 171
    tipos_datos                    shift and go to state 115

state 151

    (70) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 70 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 152

    (90) lista -> lista COMA lista .
    (90) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 90 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 90 (lista -> lista COMA lista .)
    COMA            shift and go to state 132

  ! COMA            [ reduce using rule 90 (lista -> lista COMA lista .) ]


state 153

    (71) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (81) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 172
    VARIABLE        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VAR             reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 154

    (72) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (26) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 173
    COMA            reduce using rule 26 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 26 (tipos_datos -> NUMBER .) ]


state 155

    (73) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (90) lista -> lista . COMA lista

    DERPAREN        shift and go to state 174
    COMA            shift and go to state 132


state 156

    (98) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (99) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 98 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 175


state 157

    (75) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VARIABLE        reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VAR             reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 75 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 158

    (76) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (86) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 176
    VARIABLE        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VAR             reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 159

    (77) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (26) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 177
    COMA            reduce using rule 26 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 26 (tipos_datos -> NUMBER .) ]


state 160

    (78) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (90) lista -> lista . COMA lista

    DERPAREN        shift and go to state 178
    COMA            shift and go to state 132


state 161

    (96) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (97) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 96 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 179


state 162

    (100) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .
    (101) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    VAR             reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    LET             reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    CONST           reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IF              reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    $end            reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 100 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN .)
    FINALDELINEA    shift and go to state 180


state 163

    (61) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (62) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (63) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VARIABLE        reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 182
    IF              shift and go to state 25

  ! IF              [ reduce using rule 61 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 181

state 164

    (64) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 183


state 165

    (68) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 68 (ncasos -> casos ncasos .)


state 166

    (65) casos -> CASE tipos_datos . DOSPUNTOS asignacion BREAK FINALDELINEA
    (66) casos -> CASE tipos_datos . DOSPUNTOS

    DOSPUNTOS       shift and go to state 184


state 167

    (69) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .

    VARIABLE        reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    FUNCTION        reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    VAR             reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    LET             reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    CONST           reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    IF              reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    SWITCH          reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    WHILE           reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    MAPLOWER        reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    NUMBER          reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    IZQPAREN        reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    $end            reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)
    DERLLAVE        reduce using rule 69 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE .)


state 168

    (102) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos . DERPAREN
    (103) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos . DERPAREN FINALDELINEA

    DERPAREN        shift and go to state 185


state 169

    (59) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 59 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 170

    (92) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA
    (93) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 186
    VARIABLE        reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    VAR             reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    LET             reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    CONST           reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IF              reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    $end            reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 93 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)


state 171

    (94) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN
    (90) lista -> lista . COMA lista

    DERPAREN        shift and go to state 187
    COMA            shift and go to state 132


state 172

    (71) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 71 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 173

    (72) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 188
    VARIABLE        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VAR             reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 174

    (73) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 189
    VARIABLE        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 175

    (99) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 99 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 176

    (76) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 76 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 177

    (77) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 190
    VARIABLE        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VAR             reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 178

    (78) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 191
    VARIABLE        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 179

    (97) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 97 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 180

    (101) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 101 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA .)


state 181

    (62) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VARIABLE        reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VAR             reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    WHILE           reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 62 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 182

    (63) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 192


state 183

    (64) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadores_asig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (59) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (70) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (98) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (100) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (64) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (69) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (92) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (102) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    js                             shift and go to state 193
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 184

    (65) casos -> CASE tipos_datos DOSPUNTOS . asignacion BREAK FINALDELINEA
    (66) casos -> CASE tipos_datos DOSPUNTOS .
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea

    CASE            reduce using rule 66 (casos -> CASE tipos_datos DOSPUNTOS .)
    DEFAULT         reduce using rule 66 (casos -> CASE tipos_datos DOSPUNTOS .)
    VARIABLE        shift and go to state 195

    asignacion                     shift and go to state 194

state 185

    (102) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .
    (103) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN . FINALDELINEA

    VARIABLE        reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    FUNCTION        reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    VAR             reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    LET             reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    CONST           reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    IF              reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    SWITCH          reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    WHILE           reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    MAPLOWER        reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    NUMBER          reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    IZQPAREN        reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    $end            reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    DERLLAVE        reduce using rule 102 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN .)
    FINALDELINEA    shift and go to state 196


state 186

    (92) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VAR             reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 92 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 187

    (94) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA
    (95) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 197
    VARIABLE        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    VAR             reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    LET             reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IF              reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    $end            reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 95 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)


state 188

    (72) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VAR             reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 72 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 189

    (73) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 73 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 190

    (77) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VAR             reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 77 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 191

    (78) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 78 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 192

    (63) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . arreglo
    (9) instrucciones -> . map
    (10) instrucciones -> . if
    (11) instrucciones -> . switch
    (12) instrucciones -> . while
    (13) instrucciones -> . pop
    (14) instrucciones -> . push
    (15) instrucciones -> . mapSet
    (16) declaracion -> . declarador VARIABLE final_linea
    (17) declaracion -> . declarador VARIABLE operadores_asig tipos_datos final_linea
    (18) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (19) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (20) asignacion -> . VARIABLE IGUAL expresion final_linea
    (59) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (60) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (46) expresion -> . expresion MAS term
    (47) expresion -> . expresion MENOS term
    (48) expresion -> . term
    (24) comparacion -> . VARIABLE operadores_comp VARIABLE
    (25) comparacion -> . expresion operadores_comp expresion
    (70) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (71) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (72) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (73) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (74) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (75) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (76) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (77) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (78) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (79) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (96) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (97) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (98) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (99) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (100) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN
    (101) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA
    (61) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (62) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (63) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (64) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (69) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE expresion DERLLAVE
    (92) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (93) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (94) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (95) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (102) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN
    (103) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA
    (21) declarador -> . LET
    (22) declarador -> . VAR
    (23) declarador -> . CONST
    (49) term -> . term MULT factor
    (50) term -> . term MULT VARIABLE
    (51) term -> . term DIV factor
    (52) term -> . factor
    (53) factor -> . VARIABLE
    (54) factor -> . NUMBER
    (55) factor -> . IZQPAREN expresion DERPAREN

    VARIABLE        shift and go to state 17
    FUNCTION        shift and go to state 18
    VAR             shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    IF              shift and go to state 25
    SWITCH          shift and go to state 26
    WHILE           shift and go to state 27
    MAPLOWER        shift and go to state 28
    NUMBER          shift and go to state 22
    IZQPAREN        shift and go to state 19

    comparacion                    shift and go to state 7
    js                             shift and go to state 198
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    arreglo                        shift and go to state 8
    map                            shift and go to state 9
    if                             shift and go to state 10
    switch                         shift and go to state 11
    while                          shift and go to state 12
    pop                            shift and go to state 13
    push                           shift and go to state 14
    mapSet                         shift and go to state 15
    declarador                     shift and go to state 16
    term                           shift and go to state 20
    factor                         shift and go to state 29

state 193

    (64) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 199


state 194

    (65) casos -> CASE tipos_datos DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 200


state 195

    (18) asignacion -> VARIABLE . operadores_asig tipos_datos final_linea
    (19) asignacion -> VARIABLE . IGUAL comparacion final_linea
    (20) asignacion -> VARIABLE . IGUAL expresion final_linea
    (32) operadores_asig -> . IGUAL
    (33) operadores_asig -> . MASIGUAL
    (34) operadores_asig -> . MENOSIGUAL
    (35) operadores_asig -> . DIVIGUAL
    (36) operadores_asig -> . MODIGUAL
    (37) operadores_asig -> . MULTIGUAL

    IGUAL           shift and go to state 42
    MASIGUAL        shift and go to state 44
    MENOSIGUAL      shift and go to state 45
    DIVIGUAL        shift and go to state 46
    MODIGUAL        shift and go to state 47
    MULTIGUAL       shift and go to state 48

    operadores_asig                shift and go to state 41

state 196

    (103) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    VAR             reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    LET             reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    CONST           reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    IF              reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    $end            reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 103 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN FINALDELINEA .)


state 197

    (94) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VARIABLE        reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VAR             reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 94 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 198

    (63) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 201


state 199

    (64) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VARIABLE        reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VAR             reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    WHILE           reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 64 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 200

    (65) casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 202


state 201

    (63) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VARIABLE        reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VAR             reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 63 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 202

    (65) casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 65 (casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 65 (casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYORQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUALQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for MENORIGUALQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for NOIGUALQUE in state 17 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 21 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 23 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 24 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 42 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 76 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 76 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUALQUE in state 76 resolved as shift
WARNING: shift/reduce conflict for MENORIGUALQUE in state 76 resolved as shift
WARNING: shift/reduce conflict for NOIGUALQUE in state 76 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for COMA in state 152 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 154 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: reduce/reduce conflict in state 83 resolved using rule (term -> term MULT VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 83
