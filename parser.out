Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AWAIT
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FOR
    GET
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    SUPER
    UNDEFINED
    VOID

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracion final_linea
Rule 4     instrucciones -> asignacion final_linea
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> logica
Rule 9     instrucciones -> arreglo
Rule 10    instrucciones -> map
Rule 11    instrucciones -> if
Rule 12    instrucciones -> switch
Rule 13    instrucciones -> while
Rule 14    instrucciones -> pop
Rule 15    instrucciones -> push
Rule 16    instrucciones -> mapSet
Rule 17    declaracion -> VAR VARIABLE
Rule 18    declaracion -> LET VARIABLE
Rule 19    declaracion -> CONST VARIABLE
Rule 20    declaracion -> VAR VARIABLE IGUAL tipos_datos
Rule 21    declaracion -> LET VARIABLE IGUAL tipos_datos
Rule 22    declaracion -> CONST VARIABLE IGUAL tipos_datos
Rule 23    declaracion -> VAR VARIABLE IGUAL comparacion
Rule 24    declaracion -> LET VARIABLE IGUAL comparacion
Rule 25    declaracion -> CONST VARIABLE IGUAL comparacion
Rule 26    declaracion -> VAR VARIABLE IGUAL expresion
Rule 27    declaracion -> LET VARIABLE IGUAL expresion
Rule 28    declaracion -> CONST VARIABLE IGUAL expresion
Rule 29    asignacion -> VARIABLE operadores_asig tipos_datos
Rule 30    asignacion -> VARIABLE IGUAL comparacion
Rule 31    asignacion -> VARIABLE IGUAL expresion
Rule 32    expresion -> expresion MAS term
Rule 33    expresion -> expresion MENOS term
Rule 34    comparacion -> expresion operadores_comp term
Rule 35    logica -> expresion operadores_log term
Rule 36    expresion -> term
Rule 37    expresion -> RETURN expresion
Rule 38    term -> term MULT factor
Rule 39    term -> term DIV factor
Rule 40    term -> factor
Rule 41    factor -> VARIABLE
Rule 42    factor -> tipos_datos
Rule 43    factor -> IZQPAREN expresion DERPAREN
Rule 44    tipos_datos -> NUMBER
Rule 45    tipos_datos -> STRING
Rule 46    tipos_datos -> BOOLEAN
Rule 47    tipos_datos -> BIGINT
Rule 48    tipos_datos -> NULL
Rule 49    tipos_datos -> SYMBOL
Rule 50    operadores_asig -> IGUAL
Rule 51    operadores_asig -> MASIGUAL
Rule 52    operadores_asig -> MENOSIGUAL
Rule 53    operadores_asig -> DIVIGUAL
Rule 54    operadores_asig -> MODIGUAL
Rule 55    operadores_asig -> MULTIGUAL
Rule 56    operadores_comp -> MAYORQUE
Rule 57    operadores_comp -> MENORQUE
Rule 58    operadores_comp -> MAYORIGUALQUE
Rule 59    operadores_comp -> MENORIGUALQUE
Rule 60    operadores_comp -> NOIGUALQUE
Rule 61    operadores_comp -> IGUALIGUAL
Rule 62    operadores_log -> AND
Rule 63    operadores_log -> OR
Rule 64    final_linea -> FINALDELINEA
Rule 65    final_linea -> empty
Rule 66    empty -> <empty>
Rule 67    funcion_enc -> FUNCTION VARIABLE IZQPAREN
Rule 68    funcion_param -> VARIABLE
Rule 69    funcion_param -> empty
Rule 70    funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
Rule 71    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 72    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 73    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 74    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 75    ncasos -> casos
Rule 76    ncasos -> casos ncasos
Rule 77    casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea
Rule 78    casos -> CASE tipos_datos DOSPUNTOS
Rule 79    while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 80    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 81    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 82    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 83    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 84    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 85    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 86    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 87    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 88    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 89    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 90    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 91    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 92    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 93    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 94    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 95    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 96    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 97    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 98    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 99    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 100   lista -> lista COMA lista
Rule 101   lista -> tipos_datos
Rule 102   pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 103   pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
Rule 104   push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 105   push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
Rule 106   map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 107   map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 108   map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 109   mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

Terminals, with rules where they appear

AND                  : 62
ARRAY                : 81 82 83 86 87 88 91 92 93 96 97 98
AWAIT                : 
BIGINT               : 47
BOOLEAN              : 46
BREAK                : 77
CASE                 : 77 78
CATCH                : 
CLASS                : 
COMA                 : 100 109
CONST                : 19 22 25 28 108
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 74
DELETE               : 
DERCORCHETE          : 80 84 85 89 90 94 95 99
DERLLAVE             : 70 71 72 73 73 74 79
DERPAREN             : 43 70 71 72 73 74 79 81 82 83 86 87 88 91 92 93 96 97 98 102 103 104 105 106 107 108 109
DIV                  : 39
DIVIGUAL             : 53
DO                   : 
DOSPUNTOS            : 74 77 78
ELSE                 : 73
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 64 80 81 82 83 84 85 86 87 88 89 102 104
FOR                  : 
FUNCTION             : 67
GET                  : 
IF                   : 71 72 73
IGUAL                : 20 21 22 23 24 25 26 27 28 30 31 50 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 102 103 104 105 106 107 108
IGUALIGUAL           : 61
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 80 84 85 89 90 94 95 99
IZQLLAVE             : 70 71 72 73 73 74 79
IZQPAREN             : 43 67 71 72 73 74 79 81 82 83 86 87 88 91 92 93 96 97 98 102 103 104 105 106 107 108 109
LET                  : 18 21 24 27 85 86 87 88 89 95 96 97 98 99 106
MAP                  : 106 107 108
MAPLOWER             : 109
MAS                  : 32
MASIGUAL             : 51
MAYORIGUALQUE        : 58
MAYORQUE             : 56
MENORIGUALQUE        : 59
MENORQUE             : 57
MENOS                : 33
MENOSIGUAL           : 52
MODIGUAL             : 54
MULT                 : 38
MULTIGUAL            : 55
NEW                  : 81 82 83 86 87 88 91 92 93 96 97 98 106 107 108
NOIGUALQUE           : 60
NULL                 : 48
NUMBER               : 44 82 87 92 97
OR                   : 63
PACKAGE              : 
POP                  : 102 103
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 102 103 104 105 109
PUSH                 : 104 105
RETURN               : 37
SET                  : 109
STRING               : 45
SUPER                : 
SWITCH               : 74
SYMBOL               : 49
UNDEFINED            : 
VAR                  : 17 20 23 26 80 81 82 83 84 90 91 92 93 94 102 103 104 105 107
VARIABLE             : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 41 67 68 74 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 102 102 103 103 104 104 105 105 106 107 108
VOID                 : 
WHILE                : 79
error                : 

Nonterminals, with rules where they appear

arreglo              : 9
asignacion           : 4
casos                : 75 76
comparacion          : 7 23 24 25 30 71 72 73 79
declaracion          : 3
empty                : 65 69
expresion            : 6 26 27 28 31 32 33 34 35 37 43
factor               : 38 39 40
final_linea          : 3 4 77 106 107 108 109
funcion              : 5
funcion_enc          : 70
funcion_param        : 70
if                   : 11 72
instrucciones        : 1 2
js                   : 2 70 71 72 73 73 74 77 79 0
lista                : 80 83 85 88 90 93 95 98 100 100 104 105
logica               : 8
map                  : 10
mapSet               : 16
ncasos               : 74 76
operadores_asig      : 29
operadores_comp      : 34
operadores_log       : 35
pop                  : 14
push                 : 15
switch               : 12
term                 : 32 33 34 35 36 38 39
tipos_datos          : 20 21 22 29 42 77 78 101 109 109
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    BREAK           reduce using rule 1 (js -> instrucciones .)
    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    instrucciones                  shift and go to state 2
    js                             shift and go to state 38
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 3

    (3) instrucciones -> declaracion . final_linea
    (64) final_linea -> . FINALDELINEA
    (65) final_linea -> . empty
    (66) empty -> .

    FINALDELINEA    shift and go to state 40
    VAR             reduce using rule 66 (empty -> .)
    LET             reduce using rule 66 (empty -> .)
    CONST           reduce using rule 66 (empty -> .)
    VARIABLE        reduce using rule 66 (empty -> .)
    RETURN          reduce using rule 66 (empty -> .)
    IF              reduce using rule 66 (empty -> .)
    SWITCH          reduce using rule 66 (empty -> .)
    WHILE           reduce using rule 66 (empty -> .)
    MAPLOWER        reduce using rule 66 (empty -> .)
    FUNCTION        reduce using rule 66 (empty -> .)
    IZQPAREN        reduce using rule 66 (empty -> .)
    NUMBER          reduce using rule 66 (empty -> .)
    STRING          reduce using rule 66 (empty -> .)
    BOOLEAN         reduce using rule 66 (empty -> .)
    BIGINT          reduce using rule 66 (empty -> .)
    NULL            reduce using rule 66 (empty -> .)
    SYMBOL          reduce using rule 66 (empty -> .)
    $end            reduce using rule 66 (empty -> .)
    DERLLAVE        reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    final_linea                    shift and go to state 39
    empty                          shift and go to state 41

state 4

    (4) instrucciones -> asignacion . final_linea
    (64) final_linea -> . FINALDELINEA
    (65) final_linea -> . empty
    (66) empty -> .

    FINALDELINEA    shift and go to state 40
    VAR             reduce using rule 66 (empty -> .)
    LET             reduce using rule 66 (empty -> .)
    CONST           reduce using rule 66 (empty -> .)
    VARIABLE        reduce using rule 66 (empty -> .)
    RETURN          reduce using rule 66 (empty -> .)
    IF              reduce using rule 66 (empty -> .)
    SWITCH          reduce using rule 66 (empty -> .)
    WHILE           reduce using rule 66 (empty -> .)
    MAPLOWER        reduce using rule 66 (empty -> .)
    FUNCTION        reduce using rule 66 (empty -> .)
    IZQPAREN        reduce using rule 66 (empty -> .)
    NUMBER          reduce using rule 66 (empty -> .)
    STRING          reduce using rule 66 (empty -> .)
    BOOLEAN         reduce using rule 66 (empty -> .)
    BIGINT          reduce using rule 66 (empty -> .)
    NULL            reduce using rule 66 (empty -> .)
    SYMBOL          reduce using rule 66 (empty -> .)
    $end            reduce using rule 66 (empty -> .)
    DERLLAVE        reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    final_linea                    shift and go to state 42
    empty                          shift and go to state 41

state 5

    (5) instrucciones -> funcion .

    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    RETURN          reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    WHILE           reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    STRING          reduce using rule 5 (instrucciones -> funcion .)
    BOOLEAN         reduce using rule 5 (instrucciones -> funcion .)
    BIGINT          reduce using rule 5 (instrucciones -> funcion .)
    NULL            reduce using rule 5 (instrucciones -> funcion .)
    SYMBOL          reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)
    BREAK           reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion .
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (34) comparacion -> expresion . operadores_comp term
    (35) logica -> expresion . operadores_log term
    (56) operadores_comp -> . MAYORQUE
    (57) operadores_comp -> . MENORQUE
    (58) operadores_comp -> . MAYORIGUALQUE
    (59) operadores_comp -> . MENORIGUALQUE
    (60) operadores_comp -> . NOIGUALQUE
    (61) operadores_comp -> . IGUALIGUAL
    (62) operadores_log -> . AND
    (63) operadores_log -> . OR

    VAR             reduce using rule 6 (instrucciones -> expresion .)
    LET             reduce using rule 6 (instrucciones -> expresion .)
    CONST           reduce using rule 6 (instrucciones -> expresion .)
    VARIABLE        reduce using rule 6 (instrucciones -> expresion .)
    RETURN          reduce using rule 6 (instrucciones -> expresion .)
    IF              reduce using rule 6 (instrucciones -> expresion .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion .)
    WHILE           reduce using rule 6 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion .)
    STRING          reduce using rule 6 (instrucciones -> expresion .)
    BOOLEAN         reduce using rule 6 (instrucciones -> expresion .)
    BIGINT          reduce using rule 6 (instrucciones -> expresion .)
    NULL            reduce using rule 6 (instrucciones -> expresion .)
    SYMBOL          reduce using rule 6 (instrucciones -> expresion .)
    $end            reduce using rule 6 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion .)
    BREAK           reduce using rule 6 (instrucciones -> expresion .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    NOIGUALQUE      shift and go to state 51
    IGUALIGUAL      shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadores_comp                shift and go to state 45
    operadores_log                 shift and go to state 46

state 7

    (7) instrucciones -> comparacion .

    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    RETURN          reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    WHILE           reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    STRING          reduce using rule 7 (instrucciones -> comparacion .)
    BOOLEAN         reduce using rule 7 (instrucciones -> comparacion .)
    BIGINT          reduce using rule 7 (instrucciones -> comparacion .)
    NULL            reduce using rule 7 (instrucciones -> comparacion .)
    SYMBOL          reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)
    BREAK           reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> logica .

    VAR             reduce using rule 8 (instrucciones -> logica .)
    LET             reduce using rule 8 (instrucciones -> logica .)
    CONST           reduce using rule 8 (instrucciones -> logica .)
    VARIABLE        reduce using rule 8 (instrucciones -> logica .)
    RETURN          reduce using rule 8 (instrucciones -> logica .)
    IF              reduce using rule 8 (instrucciones -> logica .)
    SWITCH          reduce using rule 8 (instrucciones -> logica .)
    WHILE           reduce using rule 8 (instrucciones -> logica .)
    MAPLOWER        reduce using rule 8 (instrucciones -> logica .)
    FUNCTION        reduce using rule 8 (instrucciones -> logica .)
    IZQPAREN        reduce using rule 8 (instrucciones -> logica .)
    NUMBER          reduce using rule 8 (instrucciones -> logica .)
    STRING          reduce using rule 8 (instrucciones -> logica .)
    BOOLEAN         reduce using rule 8 (instrucciones -> logica .)
    BIGINT          reduce using rule 8 (instrucciones -> logica .)
    NULL            reduce using rule 8 (instrucciones -> logica .)
    SYMBOL          reduce using rule 8 (instrucciones -> logica .)
    $end            reduce using rule 8 (instrucciones -> logica .)
    DERLLAVE        reduce using rule 8 (instrucciones -> logica .)
    BREAK           reduce using rule 8 (instrucciones -> logica .)


state 9

    (9) instrucciones -> arreglo .

    VAR             reduce using rule 9 (instrucciones -> arreglo .)
    LET             reduce using rule 9 (instrucciones -> arreglo .)
    CONST           reduce using rule 9 (instrucciones -> arreglo .)
    VARIABLE        reduce using rule 9 (instrucciones -> arreglo .)
    RETURN          reduce using rule 9 (instrucciones -> arreglo .)
    IF              reduce using rule 9 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 9 (instrucciones -> arreglo .)
    WHILE           reduce using rule 9 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 9 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 9 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 9 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 9 (instrucciones -> arreglo .)
    STRING          reduce using rule 9 (instrucciones -> arreglo .)
    BOOLEAN         reduce using rule 9 (instrucciones -> arreglo .)
    BIGINT          reduce using rule 9 (instrucciones -> arreglo .)
    NULL            reduce using rule 9 (instrucciones -> arreglo .)
    SYMBOL          reduce using rule 9 (instrucciones -> arreglo .)
    $end            reduce using rule 9 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 9 (instrucciones -> arreglo .)
    BREAK           reduce using rule 9 (instrucciones -> arreglo .)


state 10

    (10) instrucciones -> map .

    VAR             reduce using rule 10 (instrucciones -> map .)
    LET             reduce using rule 10 (instrucciones -> map .)
    CONST           reduce using rule 10 (instrucciones -> map .)
    VARIABLE        reduce using rule 10 (instrucciones -> map .)
    RETURN          reduce using rule 10 (instrucciones -> map .)
    IF              reduce using rule 10 (instrucciones -> map .)
    SWITCH          reduce using rule 10 (instrucciones -> map .)
    WHILE           reduce using rule 10 (instrucciones -> map .)
    MAPLOWER        reduce using rule 10 (instrucciones -> map .)
    FUNCTION        reduce using rule 10 (instrucciones -> map .)
    IZQPAREN        reduce using rule 10 (instrucciones -> map .)
    NUMBER          reduce using rule 10 (instrucciones -> map .)
    STRING          reduce using rule 10 (instrucciones -> map .)
    BOOLEAN         reduce using rule 10 (instrucciones -> map .)
    BIGINT          reduce using rule 10 (instrucciones -> map .)
    NULL            reduce using rule 10 (instrucciones -> map .)
    SYMBOL          reduce using rule 10 (instrucciones -> map .)
    $end            reduce using rule 10 (instrucciones -> map .)
    DERLLAVE        reduce using rule 10 (instrucciones -> map .)
    BREAK           reduce using rule 10 (instrucciones -> map .)


state 11

    (11) instrucciones -> if .

    VAR             reduce using rule 11 (instrucciones -> if .)
    LET             reduce using rule 11 (instrucciones -> if .)
    CONST           reduce using rule 11 (instrucciones -> if .)
    VARIABLE        reduce using rule 11 (instrucciones -> if .)
    RETURN          reduce using rule 11 (instrucciones -> if .)
    IF              reduce using rule 11 (instrucciones -> if .)
    SWITCH          reduce using rule 11 (instrucciones -> if .)
    WHILE           reduce using rule 11 (instrucciones -> if .)
    MAPLOWER        reduce using rule 11 (instrucciones -> if .)
    FUNCTION        reduce using rule 11 (instrucciones -> if .)
    IZQPAREN        reduce using rule 11 (instrucciones -> if .)
    NUMBER          reduce using rule 11 (instrucciones -> if .)
    STRING          reduce using rule 11 (instrucciones -> if .)
    BOOLEAN         reduce using rule 11 (instrucciones -> if .)
    BIGINT          reduce using rule 11 (instrucciones -> if .)
    NULL            reduce using rule 11 (instrucciones -> if .)
    SYMBOL          reduce using rule 11 (instrucciones -> if .)
    $end            reduce using rule 11 (instrucciones -> if .)
    DERLLAVE        reduce using rule 11 (instrucciones -> if .)
    BREAK           reduce using rule 11 (instrucciones -> if .)


state 12

    (12) instrucciones -> switch .

    VAR             reduce using rule 12 (instrucciones -> switch .)
    LET             reduce using rule 12 (instrucciones -> switch .)
    CONST           reduce using rule 12 (instrucciones -> switch .)
    VARIABLE        reduce using rule 12 (instrucciones -> switch .)
    RETURN          reduce using rule 12 (instrucciones -> switch .)
    IF              reduce using rule 12 (instrucciones -> switch .)
    SWITCH          reduce using rule 12 (instrucciones -> switch .)
    WHILE           reduce using rule 12 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 12 (instrucciones -> switch .)
    FUNCTION        reduce using rule 12 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 12 (instrucciones -> switch .)
    NUMBER          reduce using rule 12 (instrucciones -> switch .)
    STRING          reduce using rule 12 (instrucciones -> switch .)
    BOOLEAN         reduce using rule 12 (instrucciones -> switch .)
    BIGINT          reduce using rule 12 (instrucciones -> switch .)
    NULL            reduce using rule 12 (instrucciones -> switch .)
    SYMBOL          reduce using rule 12 (instrucciones -> switch .)
    $end            reduce using rule 12 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 12 (instrucciones -> switch .)
    BREAK           reduce using rule 12 (instrucciones -> switch .)


state 13

    (13) instrucciones -> while .

    VAR             reduce using rule 13 (instrucciones -> while .)
    LET             reduce using rule 13 (instrucciones -> while .)
    CONST           reduce using rule 13 (instrucciones -> while .)
    VARIABLE        reduce using rule 13 (instrucciones -> while .)
    RETURN          reduce using rule 13 (instrucciones -> while .)
    IF              reduce using rule 13 (instrucciones -> while .)
    SWITCH          reduce using rule 13 (instrucciones -> while .)
    WHILE           reduce using rule 13 (instrucciones -> while .)
    MAPLOWER        reduce using rule 13 (instrucciones -> while .)
    FUNCTION        reduce using rule 13 (instrucciones -> while .)
    IZQPAREN        reduce using rule 13 (instrucciones -> while .)
    NUMBER          reduce using rule 13 (instrucciones -> while .)
    STRING          reduce using rule 13 (instrucciones -> while .)
    BOOLEAN         reduce using rule 13 (instrucciones -> while .)
    BIGINT          reduce using rule 13 (instrucciones -> while .)
    NULL            reduce using rule 13 (instrucciones -> while .)
    SYMBOL          reduce using rule 13 (instrucciones -> while .)
    $end            reduce using rule 13 (instrucciones -> while .)
    DERLLAVE        reduce using rule 13 (instrucciones -> while .)
    BREAK           reduce using rule 13 (instrucciones -> while .)


state 14

    (14) instrucciones -> pop .

    VAR             reduce using rule 14 (instrucciones -> pop .)
    LET             reduce using rule 14 (instrucciones -> pop .)
    CONST           reduce using rule 14 (instrucciones -> pop .)
    VARIABLE        reduce using rule 14 (instrucciones -> pop .)
    RETURN          reduce using rule 14 (instrucciones -> pop .)
    IF              reduce using rule 14 (instrucciones -> pop .)
    SWITCH          reduce using rule 14 (instrucciones -> pop .)
    WHILE           reduce using rule 14 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 14 (instrucciones -> pop .)
    FUNCTION        reduce using rule 14 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 14 (instrucciones -> pop .)
    NUMBER          reduce using rule 14 (instrucciones -> pop .)
    STRING          reduce using rule 14 (instrucciones -> pop .)
    BOOLEAN         reduce using rule 14 (instrucciones -> pop .)
    BIGINT          reduce using rule 14 (instrucciones -> pop .)
    NULL            reduce using rule 14 (instrucciones -> pop .)
    SYMBOL          reduce using rule 14 (instrucciones -> pop .)
    $end            reduce using rule 14 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 14 (instrucciones -> pop .)
    BREAK           reduce using rule 14 (instrucciones -> pop .)


state 15

    (15) instrucciones -> push .

    VAR             reduce using rule 15 (instrucciones -> push .)
    LET             reduce using rule 15 (instrucciones -> push .)
    CONST           reduce using rule 15 (instrucciones -> push .)
    VARIABLE        reduce using rule 15 (instrucciones -> push .)
    RETURN          reduce using rule 15 (instrucciones -> push .)
    IF              reduce using rule 15 (instrucciones -> push .)
    SWITCH          reduce using rule 15 (instrucciones -> push .)
    WHILE           reduce using rule 15 (instrucciones -> push .)
    MAPLOWER        reduce using rule 15 (instrucciones -> push .)
    FUNCTION        reduce using rule 15 (instrucciones -> push .)
    IZQPAREN        reduce using rule 15 (instrucciones -> push .)
    NUMBER          reduce using rule 15 (instrucciones -> push .)
    STRING          reduce using rule 15 (instrucciones -> push .)
    BOOLEAN         reduce using rule 15 (instrucciones -> push .)
    BIGINT          reduce using rule 15 (instrucciones -> push .)
    NULL            reduce using rule 15 (instrucciones -> push .)
    SYMBOL          reduce using rule 15 (instrucciones -> push .)
    $end            reduce using rule 15 (instrucciones -> push .)
    DERLLAVE        reduce using rule 15 (instrucciones -> push .)
    BREAK           reduce using rule 15 (instrucciones -> push .)


state 16

    (16) instrucciones -> mapSet .

    VAR             reduce using rule 16 (instrucciones -> mapSet .)
    LET             reduce using rule 16 (instrucciones -> mapSet .)
    CONST           reduce using rule 16 (instrucciones -> mapSet .)
    VARIABLE        reduce using rule 16 (instrucciones -> mapSet .)
    RETURN          reduce using rule 16 (instrucciones -> mapSet .)
    IF              reduce using rule 16 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 16 (instrucciones -> mapSet .)
    WHILE           reduce using rule 16 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 16 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 16 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 16 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 16 (instrucciones -> mapSet .)
    STRING          reduce using rule 16 (instrucciones -> mapSet .)
    BOOLEAN         reduce using rule 16 (instrucciones -> mapSet .)
    BIGINT          reduce using rule 16 (instrucciones -> mapSet .)
    NULL            reduce using rule 16 (instrucciones -> mapSet .)
    SYMBOL          reduce using rule 16 (instrucciones -> mapSet .)
    $end            reduce using rule 16 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 16 (instrucciones -> mapSet .)
    BREAK           reduce using rule 16 (instrucciones -> mapSet .)


state 17

    (17) declaracion -> VAR . VARIABLE
    (20) declaracion -> VAR . VARIABLE IGUAL tipos_datos
    (23) declaracion -> VAR . VARIABLE IGUAL comparacion
    (26) declaracion -> VAR . VARIABLE IGUAL expresion
    (80) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (107) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (102) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 55


state 18

    (29) asignacion -> VARIABLE . operadores_asig tipos_datos
    (30) asignacion -> VARIABLE . IGUAL comparacion
    (31) asignacion -> VARIABLE . IGUAL expresion
    (41) factor -> VARIABLE .
    (50) operadores_asig -> . IGUAL
    (51) operadores_asig -> . MASIGUAL
    (52) operadores_asig -> . MENOSIGUAL
    (53) operadores_asig -> . DIVIGUAL
    (54) operadores_asig -> . MODIGUAL
    (55) operadores_asig -> . MULTIGUAL

    IGUAL           shift and go to state 57
    MULT            reduce using rule 41 (factor -> VARIABLE .)
    DIV             reduce using rule 41 (factor -> VARIABLE .)
    MAS             reduce using rule 41 (factor -> VARIABLE .)
    MENOS           reduce using rule 41 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 41 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 41 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 41 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 41 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 41 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 41 (factor -> VARIABLE .)
    AND             reduce using rule 41 (factor -> VARIABLE .)
    OR              reduce using rule 41 (factor -> VARIABLE .)
    VAR             reduce using rule 41 (factor -> VARIABLE .)
    LET             reduce using rule 41 (factor -> VARIABLE .)
    CONST           reduce using rule 41 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 41 (factor -> VARIABLE .)
    RETURN          reduce using rule 41 (factor -> VARIABLE .)
    IF              reduce using rule 41 (factor -> VARIABLE .)
    SWITCH          reduce using rule 41 (factor -> VARIABLE .)
    WHILE           reduce using rule 41 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 41 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 41 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 41 (factor -> VARIABLE .)
    NUMBER          reduce using rule 41 (factor -> VARIABLE .)
    STRING          reduce using rule 41 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 41 (factor -> VARIABLE .)
    BIGINT          reduce using rule 41 (factor -> VARIABLE .)
    NULL            reduce using rule 41 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 41 (factor -> VARIABLE .)
    $end            reduce using rule 41 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 41 (factor -> VARIABLE .)
    BREAK           reduce using rule 41 (factor -> VARIABLE .)
    MASIGUAL        shift and go to state 58
    MENOSIGUAL      shift and go to state 59
    DIVIGUAL        shift and go to state 60
    MODIGUAL        shift and go to state 61
    MULTIGUAL       shift and go to state 62

    operadores_asig                shift and go to state 56

state 19

    (18) declaracion -> LET . VARIABLE
    (21) declaracion -> LET . VARIABLE IGUAL tipos_datos
    (24) declaracion -> LET . VARIABLE IGUAL comparacion
    (27) declaracion -> LET . VARIABLE IGUAL expresion
    (85) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (95) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 63


state 20

    (19) declaracion -> CONST . VARIABLE
    (22) declaracion -> CONST . VARIABLE IGUAL tipos_datos
    (25) declaracion -> CONST . VARIABLE IGUAL comparacion
    (28) declaracion -> CONST . VARIABLE IGUAL expresion
    (108) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 64


state 21

    (42) factor -> tipos_datos .

    MULT            reduce using rule 42 (factor -> tipos_datos .)
    DIV             reduce using rule 42 (factor -> tipos_datos .)
    MAS             reduce using rule 42 (factor -> tipos_datos .)
    MENOS           reduce using rule 42 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 42 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 42 (factor -> tipos_datos .)
    AND             reduce using rule 42 (factor -> tipos_datos .)
    OR              reduce using rule 42 (factor -> tipos_datos .)
    VAR             reduce using rule 42 (factor -> tipos_datos .)
    LET             reduce using rule 42 (factor -> tipos_datos .)
    CONST           reduce using rule 42 (factor -> tipos_datos .)
    VARIABLE        reduce using rule 42 (factor -> tipos_datos .)
    RETURN          reduce using rule 42 (factor -> tipos_datos .)
    IF              reduce using rule 42 (factor -> tipos_datos .)
    SWITCH          reduce using rule 42 (factor -> tipos_datos .)
    WHILE           reduce using rule 42 (factor -> tipos_datos .)
    MAPLOWER        reduce using rule 42 (factor -> tipos_datos .)
    FUNCTION        reduce using rule 42 (factor -> tipos_datos .)
    IZQPAREN        reduce using rule 42 (factor -> tipos_datos .)
    NUMBER          reduce using rule 42 (factor -> tipos_datos .)
    STRING          reduce using rule 42 (factor -> tipos_datos .)
    BOOLEAN         reduce using rule 42 (factor -> tipos_datos .)
    BIGINT          reduce using rule 42 (factor -> tipos_datos .)
    NULL            reduce using rule 42 (factor -> tipos_datos .)
    SYMBOL          reduce using rule 42 (factor -> tipos_datos .)
    $end            reduce using rule 42 (factor -> tipos_datos .)
    DERLLAVE        reduce using rule 42 (factor -> tipos_datos .)
    BREAK           reduce using rule 42 (factor -> tipos_datos .)
    DERPAREN        reduce using rule 42 (factor -> tipos_datos .)
    FINALDELINEA    reduce using rule 42 (factor -> tipos_datos .)


state 22

    (70) funcion -> funcion_enc . funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (68) funcion_param -> . VARIABLE
    (69) funcion_param -> . empty
    (66) empty -> .

    VARIABLE        shift and go to state 66
    DERPAREN        reduce using rule 66 (empty -> .)

    funcion_param                  shift and go to state 65
    empty                          shift and go to state 67

state 23

    (36) expresion -> term .
    (38) term -> term . MULT factor
    (39) term -> term . DIV factor

    MAS             reduce using rule 36 (expresion -> term .)
    MENOS           reduce using rule 36 (expresion -> term .)
    MAYORQUE        reduce using rule 36 (expresion -> term .)
    MENORQUE        reduce using rule 36 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 36 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 36 (expresion -> term .)
    NOIGUALQUE      reduce using rule 36 (expresion -> term .)
    IGUALIGUAL      reduce using rule 36 (expresion -> term .)
    AND             reduce using rule 36 (expresion -> term .)
    OR              reduce using rule 36 (expresion -> term .)
    VAR             reduce using rule 36 (expresion -> term .)
    LET             reduce using rule 36 (expresion -> term .)
    CONST           reduce using rule 36 (expresion -> term .)
    VARIABLE        reduce using rule 36 (expresion -> term .)
    RETURN          reduce using rule 36 (expresion -> term .)
    IF              reduce using rule 36 (expresion -> term .)
    SWITCH          reduce using rule 36 (expresion -> term .)
    WHILE           reduce using rule 36 (expresion -> term .)
    MAPLOWER        reduce using rule 36 (expresion -> term .)
    FUNCTION        reduce using rule 36 (expresion -> term .)
    IZQPAREN        reduce using rule 36 (expresion -> term .)
    NUMBER          reduce using rule 36 (expresion -> term .)
    STRING          reduce using rule 36 (expresion -> term .)
    BOOLEAN         reduce using rule 36 (expresion -> term .)
    BIGINT          reduce using rule 36 (expresion -> term .)
    NULL            reduce using rule 36 (expresion -> term .)
    SYMBOL          reduce using rule 36 (expresion -> term .)
    $end            reduce using rule 36 (expresion -> term .)
    DERLLAVE        reduce using rule 36 (expresion -> term .)
    BREAK           reduce using rule 36 (expresion -> term .)
    DERPAREN        reduce using rule 36 (expresion -> term .)
    FINALDELINEA    reduce using rule 36 (expresion -> term .)
    MULT            shift and go to state 68
    DIV             shift and go to state 69


state 24

    (37) expresion -> RETURN . expresion
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    expresion                      shift and go to state 70
    term                           shift and go to state 23
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 25

    (43) factor -> IZQPAREN . expresion DERPAREN
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    expresion                      shift and go to state 72
    term                           shift and go to state 23
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 26

    (44) tipos_datos -> NUMBER .

    MULT            reduce using rule 44 (tipos_datos -> NUMBER .)
    DIV             reduce using rule 44 (tipos_datos -> NUMBER .)
    MAS             reduce using rule 44 (tipos_datos -> NUMBER .)
    MENOS           reduce using rule 44 (tipos_datos -> NUMBER .)
    MAYORQUE        reduce using rule 44 (tipos_datos -> NUMBER .)
    MENORQUE        reduce using rule 44 (tipos_datos -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 44 (tipos_datos -> NUMBER .)
    MENORIGUALQUE   reduce using rule 44 (tipos_datos -> NUMBER .)
    NOIGUALQUE      reduce using rule 44 (tipos_datos -> NUMBER .)
    IGUALIGUAL      reduce using rule 44 (tipos_datos -> NUMBER .)
    AND             reduce using rule 44 (tipos_datos -> NUMBER .)
    OR              reduce using rule 44 (tipos_datos -> NUMBER .)
    VAR             reduce using rule 44 (tipos_datos -> NUMBER .)
    LET             reduce using rule 44 (tipos_datos -> NUMBER .)
    CONST           reduce using rule 44 (tipos_datos -> NUMBER .)
    VARIABLE        reduce using rule 44 (tipos_datos -> NUMBER .)
    RETURN          reduce using rule 44 (tipos_datos -> NUMBER .)
    IF              reduce using rule 44 (tipos_datos -> NUMBER .)
    SWITCH          reduce using rule 44 (tipos_datos -> NUMBER .)
    WHILE           reduce using rule 44 (tipos_datos -> NUMBER .)
    MAPLOWER        reduce using rule 44 (tipos_datos -> NUMBER .)
    FUNCTION        reduce using rule 44 (tipos_datos -> NUMBER .)
    IZQPAREN        reduce using rule 44 (tipos_datos -> NUMBER .)
    NUMBER          reduce using rule 44 (tipos_datos -> NUMBER .)
    STRING          reduce using rule 44 (tipos_datos -> NUMBER .)
    BOOLEAN         reduce using rule 44 (tipos_datos -> NUMBER .)
    BIGINT          reduce using rule 44 (tipos_datos -> NUMBER .)
    NULL            reduce using rule 44 (tipos_datos -> NUMBER .)
    SYMBOL          reduce using rule 44 (tipos_datos -> NUMBER .)
    $end            reduce using rule 44 (tipos_datos -> NUMBER .)
    DERLLAVE        reduce using rule 44 (tipos_datos -> NUMBER .)
    BREAK           reduce using rule 44 (tipos_datos -> NUMBER .)
    DERPAREN        reduce using rule 44 (tipos_datos -> NUMBER .)
    FINALDELINEA    reduce using rule 44 (tipos_datos -> NUMBER .)
    DERCORCHETE     reduce using rule 44 (tipos_datos -> NUMBER .)
    COMA            reduce using rule 44 (tipos_datos -> NUMBER .)
    DOSPUNTOS       reduce using rule 44 (tipos_datos -> NUMBER .)


state 27

    (71) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 73


state 28

    (74) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 74


state 29

    (79) while -> WHILE . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 75


state 30

    (109) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    PUNTO           shift and go to state 76


state 31

    (67) funcion_enc -> FUNCTION . VARIABLE IZQPAREN

    VARIABLE        shift and go to state 77


state 32

    (40) term -> factor .

    MULT            reduce using rule 40 (term -> factor .)
    DIV             reduce using rule 40 (term -> factor .)
    MAS             reduce using rule 40 (term -> factor .)
    MENOS           reduce using rule 40 (term -> factor .)
    MAYORQUE        reduce using rule 40 (term -> factor .)
    MENORQUE        reduce using rule 40 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 40 (term -> factor .)
    MENORIGUALQUE   reduce using rule 40 (term -> factor .)
    NOIGUALQUE      reduce using rule 40 (term -> factor .)
    IGUALIGUAL      reduce using rule 40 (term -> factor .)
    AND             reduce using rule 40 (term -> factor .)
    OR              reduce using rule 40 (term -> factor .)
    VAR             reduce using rule 40 (term -> factor .)
    LET             reduce using rule 40 (term -> factor .)
    CONST           reduce using rule 40 (term -> factor .)
    VARIABLE        reduce using rule 40 (term -> factor .)
    RETURN          reduce using rule 40 (term -> factor .)
    IF              reduce using rule 40 (term -> factor .)
    SWITCH          reduce using rule 40 (term -> factor .)
    WHILE           reduce using rule 40 (term -> factor .)
    MAPLOWER        reduce using rule 40 (term -> factor .)
    FUNCTION        reduce using rule 40 (term -> factor .)
    IZQPAREN        reduce using rule 40 (term -> factor .)
    NUMBER          reduce using rule 40 (term -> factor .)
    STRING          reduce using rule 40 (term -> factor .)
    BOOLEAN         reduce using rule 40 (term -> factor .)
    BIGINT          reduce using rule 40 (term -> factor .)
    NULL            reduce using rule 40 (term -> factor .)
    SYMBOL          reduce using rule 40 (term -> factor .)
    $end            reduce using rule 40 (term -> factor .)
    DERLLAVE        reduce using rule 40 (term -> factor .)
    BREAK           reduce using rule 40 (term -> factor .)
    DERPAREN        reduce using rule 40 (term -> factor .)
    FINALDELINEA    reduce using rule 40 (term -> factor .)


state 33

    (45) tipos_datos -> STRING .

    MULT            reduce using rule 45 (tipos_datos -> STRING .)
    DIV             reduce using rule 45 (tipos_datos -> STRING .)
    MAS             reduce using rule 45 (tipos_datos -> STRING .)
    MENOS           reduce using rule 45 (tipos_datos -> STRING .)
    MAYORQUE        reduce using rule 45 (tipos_datos -> STRING .)
    MENORQUE        reduce using rule 45 (tipos_datos -> STRING .)
    MAYORIGUALQUE   reduce using rule 45 (tipos_datos -> STRING .)
    MENORIGUALQUE   reduce using rule 45 (tipos_datos -> STRING .)
    NOIGUALQUE      reduce using rule 45 (tipos_datos -> STRING .)
    IGUALIGUAL      reduce using rule 45 (tipos_datos -> STRING .)
    AND             reduce using rule 45 (tipos_datos -> STRING .)
    OR              reduce using rule 45 (tipos_datos -> STRING .)
    VAR             reduce using rule 45 (tipos_datos -> STRING .)
    LET             reduce using rule 45 (tipos_datos -> STRING .)
    CONST           reduce using rule 45 (tipos_datos -> STRING .)
    VARIABLE        reduce using rule 45 (tipos_datos -> STRING .)
    RETURN          reduce using rule 45 (tipos_datos -> STRING .)
    IF              reduce using rule 45 (tipos_datos -> STRING .)
    SWITCH          reduce using rule 45 (tipos_datos -> STRING .)
    WHILE           reduce using rule 45 (tipos_datos -> STRING .)
    MAPLOWER        reduce using rule 45 (tipos_datos -> STRING .)
    FUNCTION        reduce using rule 45 (tipos_datos -> STRING .)
    IZQPAREN        reduce using rule 45 (tipos_datos -> STRING .)
    NUMBER          reduce using rule 45 (tipos_datos -> STRING .)
    STRING          reduce using rule 45 (tipos_datos -> STRING .)
    BOOLEAN         reduce using rule 45 (tipos_datos -> STRING .)
    BIGINT          reduce using rule 45 (tipos_datos -> STRING .)
    NULL            reduce using rule 45 (tipos_datos -> STRING .)
    SYMBOL          reduce using rule 45 (tipos_datos -> STRING .)
    $end            reduce using rule 45 (tipos_datos -> STRING .)
    DERLLAVE        reduce using rule 45 (tipos_datos -> STRING .)
    BREAK           reduce using rule 45 (tipos_datos -> STRING .)
    DERPAREN        reduce using rule 45 (tipos_datos -> STRING .)
    FINALDELINEA    reduce using rule 45 (tipos_datos -> STRING .)
    DERCORCHETE     reduce using rule 45 (tipos_datos -> STRING .)
    COMA            reduce using rule 45 (tipos_datos -> STRING .)
    DOSPUNTOS       reduce using rule 45 (tipos_datos -> STRING .)


state 34

    (46) tipos_datos -> BOOLEAN .

    MULT            reduce using rule 46 (tipos_datos -> BOOLEAN .)
    DIV             reduce using rule 46 (tipos_datos -> BOOLEAN .)
    MAS             reduce using rule 46 (tipos_datos -> BOOLEAN .)
    MENOS           reduce using rule 46 (tipos_datos -> BOOLEAN .)
    MAYORQUE        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    MENORQUE        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    MAYORIGUALQUE   reduce using rule 46 (tipos_datos -> BOOLEAN .)
    MENORIGUALQUE   reduce using rule 46 (tipos_datos -> BOOLEAN .)
    NOIGUALQUE      reduce using rule 46 (tipos_datos -> BOOLEAN .)
    IGUALIGUAL      reduce using rule 46 (tipos_datos -> BOOLEAN .)
    AND             reduce using rule 46 (tipos_datos -> BOOLEAN .)
    OR              reduce using rule 46 (tipos_datos -> BOOLEAN .)
    VAR             reduce using rule 46 (tipos_datos -> BOOLEAN .)
    LET             reduce using rule 46 (tipos_datos -> BOOLEAN .)
    CONST           reduce using rule 46 (tipos_datos -> BOOLEAN .)
    VARIABLE        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    RETURN          reduce using rule 46 (tipos_datos -> BOOLEAN .)
    IF              reduce using rule 46 (tipos_datos -> BOOLEAN .)
    SWITCH          reduce using rule 46 (tipos_datos -> BOOLEAN .)
    WHILE           reduce using rule 46 (tipos_datos -> BOOLEAN .)
    MAPLOWER        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    FUNCTION        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    IZQPAREN        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    NUMBER          reduce using rule 46 (tipos_datos -> BOOLEAN .)
    STRING          reduce using rule 46 (tipos_datos -> BOOLEAN .)
    BOOLEAN         reduce using rule 46 (tipos_datos -> BOOLEAN .)
    BIGINT          reduce using rule 46 (tipos_datos -> BOOLEAN .)
    NULL            reduce using rule 46 (tipos_datos -> BOOLEAN .)
    SYMBOL          reduce using rule 46 (tipos_datos -> BOOLEAN .)
    $end            reduce using rule 46 (tipos_datos -> BOOLEAN .)
    DERLLAVE        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    BREAK           reduce using rule 46 (tipos_datos -> BOOLEAN .)
    DERPAREN        reduce using rule 46 (tipos_datos -> BOOLEAN .)
    FINALDELINEA    reduce using rule 46 (tipos_datos -> BOOLEAN .)
    DERCORCHETE     reduce using rule 46 (tipos_datos -> BOOLEAN .)
    COMA            reduce using rule 46 (tipos_datos -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 46 (tipos_datos -> BOOLEAN .)


state 35

    (47) tipos_datos -> BIGINT .

    MULT            reduce using rule 47 (tipos_datos -> BIGINT .)
    DIV             reduce using rule 47 (tipos_datos -> BIGINT .)
    MAS             reduce using rule 47 (tipos_datos -> BIGINT .)
    MENOS           reduce using rule 47 (tipos_datos -> BIGINT .)
    MAYORQUE        reduce using rule 47 (tipos_datos -> BIGINT .)
    MENORQUE        reduce using rule 47 (tipos_datos -> BIGINT .)
    MAYORIGUALQUE   reduce using rule 47 (tipos_datos -> BIGINT .)
    MENORIGUALQUE   reduce using rule 47 (tipos_datos -> BIGINT .)
    NOIGUALQUE      reduce using rule 47 (tipos_datos -> BIGINT .)
    IGUALIGUAL      reduce using rule 47 (tipos_datos -> BIGINT .)
    AND             reduce using rule 47 (tipos_datos -> BIGINT .)
    OR              reduce using rule 47 (tipos_datos -> BIGINT .)
    VAR             reduce using rule 47 (tipos_datos -> BIGINT .)
    LET             reduce using rule 47 (tipos_datos -> BIGINT .)
    CONST           reduce using rule 47 (tipos_datos -> BIGINT .)
    VARIABLE        reduce using rule 47 (tipos_datos -> BIGINT .)
    RETURN          reduce using rule 47 (tipos_datos -> BIGINT .)
    IF              reduce using rule 47 (tipos_datos -> BIGINT .)
    SWITCH          reduce using rule 47 (tipos_datos -> BIGINT .)
    WHILE           reduce using rule 47 (tipos_datos -> BIGINT .)
    MAPLOWER        reduce using rule 47 (tipos_datos -> BIGINT .)
    FUNCTION        reduce using rule 47 (tipos_datos -> BIGINT .)
    IZQPAREN        reduce using rule 47 (tipos_datos -> BIGINT .)
    NUMBER          reduce using rule 47 (tipos_datos -> BIGINT .)
    STRING          reduce using rule 47 (tipos_datos -> BIGINT .)
    BOOLEAN         reduce using rule 47 (tipos_datos -> BIGINT .)
    BIGINT          reduce using rule 47 (tipos_datos -> BIGINT .)
    NULL            reduce using rule 47 (tipos_datos -> BIGINT .)
    SYMBOL          reduce using rule 47 (tipos_datos -> BIGINT .)
    $end            reduce using rule 47 (tipos_datos -> BIGINT .)
    DERLLAVE        reduce using rule 47 (tipos_datos -> BIGINT .)
    BREAK           reduce using rule 47 (tipos_datos -> BIGINT .)
    DERPAREN        reduce using rule 47 (tipos_datos -> BIGINT .)
    FINALDELINEA    reduce using rule 47 (tipos_datos -> BIGINT .)
    DERCORCHETE     reduce using rule 47 (tipos_datos -> BIGINT .)
    COMA            reduce using rule 47 (tipos_datos -> BIGINT .)
    DOSPUNTOS       reduce using rule 47 (tipos_datos -> BIGINT .)


state 36

    (48) tipos_datos -> NULL .

    MULT            reduce using rule 48 (tipos_datos -> NULL .)
    DIV             reduce using rule 48 (tipos_datos -> NULL .)
    MAS             reduce using rule 48 (tipos_datos -> NULL .)
    MENOS           reduce using rule 48 (tipos_datos -> NULL .)
    MAYORQUE        reduce using rule 48 (tipos_datos -> NULL .)
    MENORQUE        reduce using rule 48 (tipos_datos -> NULL .)
    MAYORIGUALQUE   reduce using rule 48 (tipos_datos -> NULL .)
    MENORIGUALQUE   reduce using rule 48 (tipos_datos -> NULL .)
    NOIGUALQUE      reduce using rule 48 (tipos_datos -> NULL .)
    IGUALIGUAL      reduce using rule 48 (tipos_datos -> NULL .)
    AND             reduce using rule 48 (tipos_datos -> NULL .)
    OR              reduce using rule 48 (tipos_datos -> NULL .)
    VAR             reduce using rule 48 (tipos_datos -> NULL .)
    LET             reduce using rule 48 (tipos_datos -> NULL .)
    CONST           reduce using rule 48 (tipos_datos -> NULL .)
    VARIABLE        reduce using rule 48 (tipos_datos -> NULL .)
    RETURN          reduce using rule 48 (tipos_datos -> NULL .)
    IF              reduce using rule 48 (tipos_datos -> NULL .)
    SWITCH          reduce using rule 48 (tipos_datos -> NULL .)
    WHILE           reduce using rule 48 (tipos_datos -> NULL .)
    MAPLOWER        reduce using rule 48 (tipos_datos -> NULL .)
    FUNCTION        reduce using rule 48 (tipos_datos -> NULL .)
    IZQPAREN        reduce using rule 48 (tipos_datos -> NULL .)
    NUMBER          reduce using rule 48 (tipos_datos -> NULL .)
    STRING          reduce using rule 48 (tipos_datos -> NULL .)
    BOOLEAN         reduce using rule 48 (tipos_datos -> NULL .)
    BIGINT          reduce using rule 48 (tipos_datos -> NULL .)
    NULL            reduce using rule 48 (tipos_datos -> NULL .)
    SYMBOL          reduce using rule 48 (tipos_datos -> NULL .)
    $end            reduce using rule 48 (tipos_datos -> NULL .)
    DERLLAVE        reduce using rule 48 (tipos_datos -> NULL .)
    BREAK           reduce using rule 48 (tipos_datos -> NULL .)
    DERPAREN        reduce using rule 48 (tipos_datos -> NULL .)
    FINALDELINEA    reduce using rule 48 (tipos_datos -> NULL .)
    DERCORCHETE     reduce using rule 48 (tipos_datos -> NULL .)
    COMA            reduce using rule 48 (tipos_datos -> NULL .)
    DOSPUNTOS       reduce using rule 48 (tipos_datos -> NULL .)


state 37

    (49) tipos_datos -> SYMBOL .

    MULT            reduce using rule 49 (tipos_datos -> SYMBOL .)
    DIV             reduce using rule 49 (tipos_datos -> SYMBOL .)
    MAS             reduce using rule 49 (tipos_datos -> SYMBOL .)
    MENOS           reduce using rule 49 (tipos_datos -> SYMBOL .)
    MAYORQUE        reduce using rule 49 (tipos_datos -> SYMBOL .)
    MENORQUE        reduce using rule 49 (tipos_datos -> SYMBOL .)
    MAYORIGUALQUE   reduce using rule 49 (tipos_datos -> SYMBOL .)
    MENORIGUALQUE   reduce using rule 49 (tipos_datos -> SYMBOL .)
    NOIGUALQUE      reduce using rule 49 (tipos_datos -> SYMBOL .)
    IGUALIGUAL      reduce using rule 49 (tipos_datos -> SYMBOL .)
    AND             reduce using rule 49 (tipos_datos -> SYMBOL .)
    OR              reduce using rule 49 (tipos_datos -> SYMBOL .)
    VAR             reduce using rule 49 (tipos_datos -> SYMBOL .)
    LET             reduce using rule 49 (tipos_datos -> SYMBOL .)
    CONST           reduce using rule 49 (tipos_datos -> SYMBOL .)
    VARIABLE        reduce using rule 49 (tipos_datos -> SYMBOL .)
    RETURN          reduce using rule 49 (tipos_datos -> SYMBOL .)
    IF              reduce using rule 49 (tipos_datos -> SYMBOL .)
    SWITCH          reduce using rule 49 (tipos_datos -> SYMBOL .)
    WHILE           reduce using rule 49 (tipos_datos -> SYMBOL .)
    MAPLOWER        reduce using rule 49 (tipos_datos -> SYMBOL .)
    FUNCTION        reduce using rule 49 (tipos_datos -> SYMBOL .)
    IZQPAREN        reduce using rule 49 (tipos_datos -> SYMBOL .)
    NUMBER          reduce using rule 49 (tipos_datos -> SYMBOL .)
    STRING          reduce using rule 49 (tipos_datos -> SYMBOL .)
    BOOLEAN         reduce using rule 49 (tipos_datos -> SYMBOL .)
    BIGINT          reduce using rule 49 (tipos_datos -> SYMBOL .)
    NULL            reduce using rule 49 (tipos_datos -> SYMBOL .)
    SYMBOL          reduce using rule 49 (tipos_datos -> SYMBOL .)
    $end            reduce using rule 49 (tipos_datos -> SYMBOL .)
    DERLLAVE        reduce using rule 49 (tipos_datos -> SYMBOL .)
    BREAK           reduce using rule 49 (tipos_datos -> SYMBOL .)
    DERPAREN        reduce using rule 49 (tipos_datos -> SYMBOL .)
    FINALDELINEA    reduce using rule 49 (tipos_datos -> SYMBOL .)
    DERCORCHETE     reduce using rule 49 (tipos_datos -> SYMBOL .)
    COMA            reduce using rule 49 (tipos_datos -> SYMBOL .)
    DOSPUNTOS       reduce using rule 49 (tipos_datos -> SYMBOL .)


state 38

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)
    BREAK           reduce using rule 2 (js -> instrucciones js .)


state 39

    (3) instrucciones -> declaracion final_linea .

    VAR             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    LET             reduce using rule 3 (instrucciones -> declaracion final_linea .)
    CONST           reduce using rule 3 (instrucciones -> declaracion final_linea .)
    VARIABLE        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    RETURN          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IF              reduce using rule 3 (instrucciones -> declaracion final_linea .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    WHILE           reduce using rule 3 (instrucciones -> declaracion final_linea .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    STRING          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BOOLEAN         reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BIGINT          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    NULL            reduce using rule 3 (instrucciones -> declaracion final_linea .)
    SYMBOL          reduce using rule 3 (instrucciones -> declaracion final_linea .)
    $end            reduce using rule 3 (instrucciones -> declaracion final_linea .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracion final_linea .)
    BREAK           reduce using rule 3 (instrucciones -> declaracion final_linea .)


state 40

    (64) final_linea -> FINALDELINEA .

    VAR             reduce using rule 64 (final_linea -> FINALDELINEA .)
    LET             reduce using rule 64 (final_linea -> FINALDELINEA .)
    CONST           reduce using rule 64 (final_linea -> FINALDELINEA .)
    VARIABLE        reduce using rule 64 (final_linea -> FINALDELINEA .)
    RETURN          reduce using rule 64 (final_linea -> FINALDELINEA .)
    IF              reduce using rule 64 (final_linea -> FINALDELINEA .)
    SWITCH          reduce using rule 64 (final_linea -> FINALDELINEA .)
    WHILE           reduce using rule 64 (final_linea -> FINALDELINEA .)
    MAPLOWER        reduce using rule 64 (final_linea -> FINALDELINEA .)
    FUNCTION        reduce using rule 64 (final_linea -> FINALDELINEA .)
    IZQPAREN        reduce using rule 64 (final_linea -> FINALDELINEA .)
    NUMBER          reduce using rule 64 (final_linea -> FINALDELINEA .)
    STRING          reduce using rule 64 (final_linea -> FINALDELINEA .)
    BOOLEAN         reduce using rule 64 (final_linea -> FINALDELINEA .)
    BIGINT          reduce using rule 64 (final_linea -> FINALDELINEA .)
    NULL            reduce using rule 64 (final_linea -> FINALDELINEA .)
    SYMBOL          reduce using rule 64 (final_linea -> FINALDELINEA .)
    $end            reduce using rule 64 (final_linea -> FINALDELINEA .)
    DERLLAVE        reduce using rule 64 (final_linea -> FINALDELINEA .)
    BREAK           reduce using rule 64 (final_linea -> FINALDELINEA .)
    CASE            reduce using rule 64 (final_linea -> FINALDELINEA .)
    DEFAULT         reduce using rule 64 (final_linea -> FINALDELINEA .)


state 41

    (65) final_linea -> empty .

    VAR             reduce using rule 65 (final_linea -> empty .)
    LET             reduce using rule 65 (final_linea -> empty .)
    CONST           reduce using rule 65 (final_linea -> empty .)
    VARIABLE        reduce using rule 65 (final_linea -> empty .)
    RETURN          reduce using rule 65 (final_linea -> empty .)
    IF              reduce using rule 65 (final_linea -> empty .)
    SWITCH          reduce using rule 65 (final_linea -> empty .)
    WHILE           reduce using rule 65 (final_linea -> empty .)
    MAPLOWER        reduce using rule 65 (final_linea -> empty .)
    FUNCTION        reduce using rule 65 (final_linea -> empty .)
    IZQPAREN        reduce using rule 65 (final_linea -> empty .)
    NUMBER          reduce using rule 65 (final_linea -> empty .)
    STRING          reduce using rule 65 (final_linea -> empty .)
    BOOLEAN         reduce using rule 65 (final_linea -> empty .)
    BIGINT          reduce using rule 65 (final_linea -> empty .)
    NULL            reduce using rule 65 (final_linea -> empty .)
    SYMBOL          reduce using rule 65 (final_linea -> empty .)
    $end            reduce using rule 65 (final_linea -> empty .)
    DERLLAVE        reduce using rule 65 (final_linea -> empty .)
    BREAK           reduce using rule 65 (final_linea -> empty .)
    CASE            reduce using rule 65 (final_linea -> empty .)
    DEFAULT         reduce using rule 65 (final_linea -> empty .)


state 42

    (4) instrucciones -> asignacion final_linea .

    VAR             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    LET             reduce using rule 4 (instrucciones -> asignacion final_linea .)
    CONST           reduce using rule 4 (instrucciones -> asignacion final_linea .)
    VARIABLE        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    RETURN          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IF              reduce using rule 4 (instrucciones -> asignacion final_linea .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion final_linea .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    STRING          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BOOLEAN         reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BIGINT          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    NULL            reduce using rule 4 (instrucciones -> asignacion final_linea .)
    SYMBOL          reduce using rule 4 (instrucciones -> asignacion final_linea .)
    $end            reduce using rule 4 (instrucciones -> asignacion final_linea .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion final_linea .)
    BREAK           reduce using rule 4 (instrucciones -> asignacion final_linea .)


state 43

    (32) expresion -> expresion MAS . term
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    term                           shift and go to state 78
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 44

    (33) expresion -> expresion MENOS . term
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    term                           shift and go to state 79
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 45

    (34) comparacion -> expresion operadores_comp . term
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    term                           shift and go to state 80
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 46

    (35) logica -> expresion operadores_log . term
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    term                           shift and go to state 81
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 47

    (56) operadores_comp -> MAYORQUE .

    VARIABLE        reduce using rule 56 (operadores_comp -> MAYORQUE .)
    IZQPAREN        reduce using rule 56 (operadores_comp -> MAYORQUE .)
    NUMBER          reduce using rule 56 (operadores_comp -> MAYORQUE .)
    STRING          reduce using rule 56 (operadores_comp -> MAYORQUE .)
    BOOLEAN         reduce using rule 56 (operadores_comp -> MAYORQUE .)
    BIGINT          reduce using rule 56 (operadores_comp -> MAYORQUE .)
    NULL            reduce using rule 56 (operadores_comp -> MAYORQUE .)
    SYMBOL          reduce using rule 56 (operadores_comp -> MAYORQUE .)


state 48

    (57) operadores_comp -> MENORQUE .

    VARIABLE        reduce using rule 57 (operadores_comp -> MENORQUE .)
    IZQPAREN        reduce using rule 57 (operadores_comp -> MENORQUE .)
    NUMBER          reduce using rule 57 (operadores_comp -> MENORQUE .)
    STRING          reduce using rule 57 (operadores_comp -> MENORQUE .)
    BOOLEAN         reduce using rule 57 (operadores_comp -> MENORQUE .)
    BIGINT          reduce using rule 57 (operadores_comp -> MENORQUE .)
    NULL            reduce using rule 57 (operadores_comp -> MENORQUE .)
    SYMBOL          reduce using rule 57 (operadores_comp -> MENORQUE .)


state 49

    (58) operadores_comp -> MAYORIGUALQUE .

    VARIABLE        reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)
    NUMBER          reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)
    STRING          reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)
    BIGINT          reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)
    NULL            reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)
    SYMBOL          reduce using rule 58 (operadores_comp -> MAYORIGUALQUE .)


state 50

    (59) operadores_comp -> MENORIGUALQUE .

    VARIABLE        reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)
    NUMBER          reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)
    STRING          reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)
    BIGINT          reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)
    NULL            reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)
    SYMBOL          reduce using rule 59 (operadores_comp -> MENORIGUALQUE .)


state 51

    (60) operadores_comp -> NOIGUALQUE .

    VARIABLE        reduce using rule 60 (operadores_comp -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 60 (operadores_comp -> NOIGUALQUE .)
    NUMBER          reduce using rule 60 (operadores_comp -> NOIGUALQUE .)
    STRING          reduce using rule 60 (operadores_comp -> NOIGUALQUE .)
    BOOLEAN         reduce using rule 60 (operadores_comp -> NOIGUALQUE .)
    BIGINT          reduce using rule 60 (operadores_comp -> NOIGUALQUE .)
    NULL            reduce using rule 60 (operadores_comp -> NOIGUALQUE .)
    SYMBOL          reduce using rule 60 (operadores_comp -> NOIGUALQUE .)


state 52

    (61) operadores_comp -> IGUALIGUAL .

    VARIABLE        reduce using rule 61 (operadores_comp -> IGUALIGUAL .)
    IZQPAREN        reduce using rule 61 (operadores_comp -> IGUALIGUAL .)
    NUMBER          reduce using rule 61 (operadores_comp -> IGUALIGUAL .)
    STRING          reduce using rule 61 (operadores_comp -> IGUALIGUAL .)
    BOOLEAN         reduce using rule 61 (operadores_comp -> IGUALIGUAL .)
    BIGINT          reduce using rule 61 (operadores_comp -> IGUALIGUAL .)
    NULL            reduce using rule 61 (operadores_comp -> IGUALIGUAL .)
    SYMBOL          reduce using rule 61 (operadores_comp -> IGUALIGUAL .)


state 53

    (62) operadores_log -> AND .

    VARIABLE        reduce using rule 62 (operadores_log -> AND .)
    IZQPAREN        reduce using rule 62 (operadores_log -> AND .)
    NUMBER          reduce using rule 62 (operadores_log -> AND .)
    STRING          reduce using rule 62 (operadores_log -> AND .)
    BOOLEAN         reduce using rule 62 (operadores_log -> AND .)
    BIGINT          reduce using rule 62 (operadores_log -> AND .)
    NULL            reduce using rule 62 (operadores_log -> AND .)
    SYMBOL          reduce using rule 62 (operadores_log -> AND .)


state 54

    (63) operadores_log -> OR .

    VARIABLE        reduce using rule 63 (operadores_log -> OR .)
    IZQPAREN        reduce using rule 63 (operadores_log -> OR .)
    NUMBER          reduce using rule 63 (operadores_log -> OR .)
    STRING          reduce using rule 63 (operadores_log -> OR .)
    BOOLEAN         reduce using rule 63 (operadores_log -> OR .)
    BIGINT          reduce using rule 63 (operadores_log -> OR .)
    NULL            reduce using rule 63 (operadores_log -> OR .)
    SYMBOL          reduce using rule 63 (operadores_log -> OR .)


state 55

    (17) declaracion -> VAR VARIABLE .
    (20) declaracion -> VAR VARIABLE . IGUAL tipos_datos
    (23) declaracion -> VAR VARIABLE . IGUAL comparacion
    (26) declaracion -> VAR VARIABLE . IGUAL expresion
    (80) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (107) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (102) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    FINALDELINEA    reduce using rule 17 (declaracion -> VAR VARIABLE .)
    VAR             reduce using rule 17 (declaracion -> VAR VARIABLE .)
    LET             reduce using rule 17 (declaracion -> VAR VARIABLE .)
    CONST           reduce using rule 17 (declaracion -> VAR VARIABLE .)
    VARIABLE        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    RETURN          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    IF              reduce using rule 17 (declaracion -> VAR VARIABLE .)
    SWITCH          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    WHILE           reduce using rule 17 (declaracion -> VAR VARIABLE .)
    MAPLOWER        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    FUNCTION        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    IZQPAREN        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    NUMBER          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    STRING          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    BOOLEAN         reduce using rule 17 (declaracion -> VAR VARIABLE .)
    BIGINT          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    NULL            reduce using rule 17 (declaracion -> VAR VARIABLE .)
    SYMBOL          reduce using rule 17 (declaracion -> VAR VARIABLE .)
    $end            reduce using rule 17 (declaracion -> VAR VARIABLE .)
    DERLLAVE        reduce using rule 17 (declaracion -> VAR VARIABLE .)
    BREAK           reduce using rule 17 (declaracion -> VAR VARIABLE .)
    IGUAL           shift and go to state 82


state 56

    (29) asignacion -> VARIABLE operadores_asig . tipos_datos
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    tipos_datos                    shift and go to state 83

state 57

    (30) asignacion -> VARIABLE IGUAL . comparacion
    (31) asignacion -> VARIABLE IGUAL . expresion
    (50) operadores_asig -> IGUAL .
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BIGINT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SYMBOL resolved as shift
    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

  ! NUMBER          [ reduce using rule 50 (operadores_asig -> IGUAL .) ]
  ! STRING          [ reduce using rule 50 (operadores_asig -> IGUAL .) ]
  ! BOOLEAN         [ reduce using rule 50 (operadores_asig -> IGUAL .) ]
  ! BIGINT          [ reduce using rule 50 (operadores_asig -> IGUAL .) ]
  ! NULL            [ reduce using rule 50 (operadores_asig -> IGUAL .) ]
  ! SYMBOL          [ reduce using rule 50 (operadores_asig -> IGUAL .) ]

    comparacion                    shift and go to state 84
    expresion                      shift and go to state 85
    term                           shift and go to state 23
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 58

    (51) operadores_asig -> MASIGUAL .

    NUMBER          reduce using rule 51 (operadores_asig -> MASIGUAL .)
    STRING          reduce using rule 51 (operadores_asig -> MASIGUAL .)
    BOOLEAN         reduce using rule 51 (operadores_asig -> MASIGUAL .)
    BIGINT          reduce using rule 51 (operadores_asig -> MASIGUAL .)
    NULL            reduce using rule 51 (operadores_asig -> MASIGUAL .)
    SYMBOL          reduce using rule 51 (operadores_asig -> MASIGUAL .)


state 59

    (52) operadores_asig -> MENOSIGUAL .

    NUMBER          reduce using rule 52 (operadores_asig -> MENOSIGUAL .)
    STRING          reduce using rule 52 (operadores_asig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 52 (operadores_asig -> MENOSIGUAL .)
    BIGINT          reduce using rule 52 (operadores_asig -> MENOSIGUAL .)
    NULL            reduce using rule 52 (operadores_asig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 52 (operadores_asig -> MENOSIGUAL .)


state 60

    (53) operadores_asig -> DIVIGUAL .

    NUMBER          reduce using rule 53 (operadores_asig -> DIVIGUAL .)
    STRING          reduce using rule 53 (operadores_asig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 53 (operadores_asig -> DIVIGUAL .)
    BIGINT          reduce using rule 53 (operadores_asig -> DIVIGUAL .)
    NULL            reduce using rule 53 (operadores_asig -> DIVIGUAL .)
    SYMBOL          reduce using rule 53 (operadores_asig -> DIVIGUAL .)


state 61

    (54) operadores_asig -> MODIGUAL .

    NUMBER          reduce using rule 54 (operadores_asig -> MODIGUAL .)
    STRING          reduce using rule 54 (operadores_asig -> MODIGUAL .)
    BOOLEAN         reduce using rule 54 (operadores_asig -> MODIGUAL .)
    BIGINT          reduce using rule 54 (operadores_asig -> MODIGUAL .)
    NULL            reduce using rule 54 (operadores_asig -> MODIGUAL .)
    SYMBOL          reduce using rule 54 (operadores_asig -> MODIGUAL .)


state 62

    (55) operadores_asig -> MULTIGUAL .

    NUMBER          reduce using rule 55 (operadores_asig -> MULTIGUAL .)
    STRING          reduce using rule 55 (operadores_asig -> MULTIGUAL .)
    BOOLEAN         reduce using rule 55 (operadores_asig -> MULTIGUAL .)
    BIGINT          reduce using rule 55 (operadores_asig -> MULTIGUAL .)
    NULL            reduce using rule 55 (operadores_asig -> MULTIGUAL .)
    SYMBOL          reduce using rule 55 (operadores_asig -> MULTIGUAL .)


state 63

    (18) declaracion -> LET VARIABLE .
    (21) declaracion -> LET VARIABLE . IGUAL tipos_datos
    (24) declaracion -> LET VARIABLE . IGUAL comparacion
    (27) declaracion -> LET VARIABLE . IGUAL expresion
    (85) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (95) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    FINALDELINEA    reduce using rule 18 (declaracion -> LET VARIABLE .)
    VAR             reduce using rule 18 (declaracion -> LET VARIABLE .)
    LET             reduce using rule 18 (declaracion -> LET VARIABLE .)
    CONST           reduce using rule 18 (declaracion -> LET VARIABLE .)
    VARIABLE        reduce using rule 18 (declaracion -> LET VARIABLE .)
    RETURN          reduce using rule 18 (declaracion -> LET VARIABLE .)
    IF              reduce using rule 18 (declaracion -> LET VARIABLE .)
    SWITCH          reduce using rule 18 (declaracion -> LET VARIABLE .)
    WHILE           reduce using rule 18 (declaracion -> LET VARIABLE .)
    MAPLOWER        reduce using rule 18 (declaracion -> LET VARIABLE .)
    FUNCTION        reduce using rule 18 (declaracion -> LET VARIABLE .)
    IZQPAREN        reduce using rule 18 (declaracion -> LET VARIABLE .)
    NUMBER          reduce using rule 18 (declaracion -> LET VARIABLE .)
    STRING          reduce using rule 18 (declaracion -> LET VARIABLE .)
    BOOLEAN         reduce using rule 18 (declaracion -> LET VARIABLE .)
    BIGINT          reduce using rule 18 (declaracion -> LET VARIABLE .)
    NULL            reduce using rule 18 (declaracion -> LET VARIABLE .)
    SYMBOL          reduce using rule 18 (declaracion -> LET VARIABLE .)
    $end            reduce using rule 18 (declaracion -> LET VARIABLE .)
    DERLLAVE        reduce using rule 18 (declaracion -> LET VARIABLE .)
    BREAK           reduce using rule 18 (declaracion -> LET VARIABLE .)
    IGUAL           shift and go to state 86


state 64

    (19) declaracion -> CONST VARIABLE .
    (22) declaracion -> CONST VARIABLE . IGUAL tipos_datos
    (25) declaracion -> CONST VARIABLE . IGUAL comparacion
    (28) declaracion -> CONST VARIABLE . IGUAL expresion
    (108) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    FINALDELINEA    reduce using rule 19 (declaracion -> CONST VARIABLE .)
    VAR             reduce using rule 19 (declaracion -> CONST VARIABLE .)
    LET             reduce using rule 19 (declaracion -> CONST VARIABLE .)
    CONST           reduce using rule 19 (declaracion -> CONST VARIABLE .)
    VARIABLE        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    RETURN          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    IF              reduce using rule 19 (declaracion -> CONST VARIABLE .)
    SWITCH          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    WHILE           reduce using rule 19 (declaracion -> CONST VARIABLE .)
    MAPLOWER        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    FUNCTION        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    IZQPAREN        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    NUMBER          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    STRING          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    BOOLEAN         reduce using rule 19 (declaracion -> CONST VARIABLE .)
    BIGINT          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    NULL            reduce using rule 19 (declaracion -> CONST VARIABLE .)
    SYMBOL          reduce using rule 19 (declaracion -> CONST VARIABLE .)
    $end            reduce using rule 19 (declaracion -> CONST VARIABLE .)
    DERLLAVE        reduce using rule 19 (declaracion -> CONST VARIABLE .)
    BREAK           reduce using rule 19 (declaracion -> CONST VARIABLE .)
    IGUAL           shift and go to state 87


state 65

    (70) funcion -> funcion_enc funcion_param . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 88


state 66

    (68) funcion_param -> VARIABLE .

    DERPAREN        reduce using rule 68 (funcion_param -> VARIABLE .)


state 67

    (69) funcion_param -> empty .

    DERPAREN        reduce using rule 69 (funcion_param -> empty .)


state 68

    (38) term -> term MULT . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    factor                         shift and go to state 89
    tipos_datos                    shift and go to state 21

state 69

    (39) term -> term DIV . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    factor                         shift and go to state 90
    tipos_datos                    shift and go to state 21

state 70

    (37) expresion -> RETURN expresion .
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAYORQUE        reduce using rule 37 (expresion -> RETURN expresion .)
    MENORQUE        reduce using rule 37 (expresion -> RETURN expresion .)
    MAYORIGUALQUE   reduce using rule 37 (expresion -> RETURN expresion .)
    MENORIGUALQUE   reduce using rule 37 (expresion -> RETURN expresion .)
    NOIGUALQUE      reduce using rule 37 (expresion -> RETURN expresion .)
    IGUALIGUAL      reduce using rule 37 (expresion -> RETURN expresion .)
    AND             reduce using rule 37 (expresion -> RETURN expresion .)
    OR              reduce using rule 37 (expresion -> RETURN expresion .)
    VAR             reduce using rule 37 (expresion -> RETURN expresion .)
    LET             reduce using rule 37 (expresion -> RETURN expresion .)
    CONST           reduce using rule 37 (expresion -> RETURN expresion .)
    VARIABLE        reduce using rule 37 (expresion -> RETURN expresion .)
    RETURN          reduce using rule 37 (expresion -> RETURN expresion .)
    IF              reduce using rule 37 (expresion -> RETURN expresion .)
    SWITCH          reduce using rule 37 (expresion -> RETURN expresion .)
    WHILE           reduce using rule 37 (expresion -> RETURN expresion .)
    MAPLOWER        reduce using rule 37 (expresion -> RETURN expresion .)
    FUNCTION        reduce using rule 37 (expresion -> RETURN expresion .)
    IZQPAREN        reduce using rule 37 (expresion -> RETURN expresion .)
    NUMBER          reduce using rule 37 (expresion -> RETURN expresion .)
    STRING          reduce using rule 37 (expresion -> RETURN expresion .)
    BOOLEAN         reduce using rule 37 (expresion -> RETURN expresion .)
    BIGINT          reduce using rule 37 (expresion -> RETURN expresion .)
    NULL            reduce using rule 37 (expresion -> RETURN expresion .)
    SYMBOL          reduce using rule 37 (expresion -> RETURN expresion .)
    $end            reduce using rule 37 (expresion -> RETURN expresion .)
    DERLLAVE        reduce using rule 37 (expresion -> RETURN expresion .)
    BREAK           reduce using rule 37 (expresion -> RETURN expresion .)
    DERPAREN        reduce using rule 37 (expresion -> RETURN expresion .)
    FINALDELINEA    reduce using rule 37 (expresion -> RETURN expresion .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44

  ! MAS             [ reduce using rule 37 (expresion -> RETURN expresion .) ]
  ! MENOS           [ reduce using rule 37 (expresion -> RETURN expresion .) ]


state 71

    (41) factor -> VARIABLE .

    MULT            reduce using rule 41 (factor -> VARIABLE .)
    DIV             reduce using rule 41 (factor -> VARIABLE .)
    MAS             reduce using rule 41 (factor -> VARIABLE .)
    MENOS           reduce using rule 41 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 41 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 41 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 41 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 41 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 41 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 41 (factor -> VARIABLE .)
    AND             reduce using rule 41 (factor -> VARIABLE .)
    OR              reduce using rule 41 (factor -> VARIABLE .)
    VAR             reduce using rule 41 (factor -> VARIABLE .)
    LET             reduce using rule 41 (factor -> VARIABLE .)
    CONST           reduce using rule 41 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 41 (factor -> VARIABLE .)
    RETURN          reduce using rule 41 (factor -> VARIABLE .)
    IF              reduce using rule 41 (factor -> VARIABLE .)
    SWITCH          reduce using rule 41 (factor -> VARIABLE .)
    WHILE           reduce using rule 41 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 41 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 41 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 41 (factor -> VARIABLE .)
    NUMBER          reduce using rule 41 (factor -> VARIABLE .)
    STRING          reduce using rule 41 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 41 (factor -> VARIABLE .)
    BIGINT          reduce using rule 41 (factor -> VARIABLE .)
    NULL            reduce using rule 41 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 41 (factor -> VARIABLE .)
    $end            reduce using rule 41 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 41 (factor -> VARIABLE .)
    BREAK           reduce using rule 41 (factor -> VARIABLE .)
    DERPAREN        reduce using rule 41 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 41 (factor -> VARIABLE .)


state 72

    (43) factor -> IZQPAREN expresion . DERPAREN
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 91
    MAS             shift and go to state 43
    MENOS           shift and go to state 44


state 73

    (71) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    comparacion                    shift and go to state 92
    expresion                      shift and go to state 93
    term                           shift and go to state 23
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 74

    (74) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 94


state 75

    (79) while -> WHILE IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    comparacion                    shift and go to state 95
    expresion                      shift and go to state 93
    term                           shift and go to state 23
    factor                         shift and go to state 32
    tipos_datos                    shift and go to state 21

state 76

    (109) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    SET             shift and go to state 96


state 77

    (67) funcion_enc -> FUNCTION VARIABLE . IZQPAREN

    IZQPAREN        shift and go to state 97


state 78

    (32) expresion -> expresion MAS term .
    (38) term -> term . MULT factor
    (39) term -> term . DIV factor

    MAS             reduce using rule 32 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 32 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 32 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 32 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 32 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 32 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 32 (expresion -> expresion MAS term .)
    IGUALIGUAL      reduce using rule 32 (expresion -> expresion MAS term .)
    AND             reduce using rule 32 (expresion -> expresion MAS term .)
    OR              reduce using rule 32 (expresion -> expresion MAS term .)
    VAR             reduce using rule 32 (expresion -> expresion MAS term .)
    LET             reduce using rule 32 (expresion -> expresion MAS term .)
    CONST           reduce using rule 32 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 32 (expresion -> expresion MAS term .)
    RETURN          reduce using rule 32 (expresion -> expresion MAS term .)
    IF              reduce using rule 32 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 32 (expresion -> expresion MAS term .)
    WHILE           reduce using rule 32 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 32 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 32 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 32 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 32 (expresion -> expresion MAS term .)
    STRING          reduce using rule 32 (expresion -> expresion MAS term .)
    BOOLEAN         reduce using rule 32 (expresion -> expresion MAS term .)
    BIGINT          reduce using rule 32 (expresion -> expresion MAS term .)
    NULL            reduce using rule 32 (expresion -> expresion MAS term .)
    SYMBOL          reduce using rule 32 (expresion -> expresion MAS term .)
    $end            reduce using rule 32 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 32 (expresion -> expresion MAS term .)
    BREAK           reduce using rule 32 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 32 (expresion -> expresion MAS term .)
    FINALDELINEA    reduce using rule 32 (expresion -> expresion MAS term .)
    MULT            shift and go to state 68
    DIV             shift and go to state 69


state 79

    (33) expresion -> expresion MENOS term .
    (38) term -> term . MULT factor
    (39) term -> term . DIV factor

    MAS             reduce using rule 33 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 33 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 33 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 33 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 33 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 33 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 33 (expresion -> expresion MENOS term .)
    IGUALIGUAL      reduce using rule 33 (expresion -> expresion MENOS term .)
    AND             reduce using rule 33 (expresion -> expresion MENOS term .)
    OR              reduce using rule 33 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 33 (expresion -> expresion MENOS term .)
    LET             reduce using rule 33 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 33 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 33 (expresion -> expresion MENOS term .)
    RETURN          reduce using rule 33 (expresion -> expresion MENOS term .)
    IF              reduce using rule 33 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 33 (expresion -> expresion MENOS term .)
    WHILE           reduce using rule 33 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 33 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 33 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 33 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 33 (expresion -> expresion MENOS term .)
    STRING          reduce using rule 33 (expresion -> expresion MENOS term .)
    BOOLEAN         reduce using rule 33 (expresion -> expresion MENOS term .)
    BIGINT          reduce using rule 33 (expresion -> expresion MENOS term .)
    NULL            reduce using rule 33 (expresion -> expresion MENOS term .)
    SYMBOL          reduce using rule 33 (expresion -> expresion MENOS term .)
    $end            reduce using rule 33 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 33 (expresion -> expresion MENOS term .)
    BREAK           reduce using rule 33 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 33 (expresion -> expresion MENOS term .)
    FINALDELINEA    reduce using rule 33 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 68
    DIV             shift and go to state 69


state 80

    (34) comparacion -> expresion operadores_comp term .
    (38) term -> term . MULT factor
    (39) term -> term . DIV factor

    VAR             reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    LET             reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    CONST           reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    VARIABLE        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    RETURN          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    IF              reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    SWITCH          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    WHILE           reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    MAPLOWER        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    FUNCTION        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    IZQPAREN        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    NUMBER          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    STRING          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    BOOLEAN         reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    BIGINT          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    NULL            reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    SYMBOL          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    $end            reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    DERLLAVE        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    BREAK           reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    FINALDELINEA    reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    DERPAREN        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    MULT            shift and go to state 68
    DIV             shift and go to state 69


state 81

    (35) logica -> expresion operadores_log term .
    (38) term -> term . MULT factor
    (39) term -> term . DIV factor

    VAR             reduce using rule 35 (logica -> expresion operadores_log term .)
    LET             reduce using rule 35 (logica -> expresion operadores_log term .)
    CONST           reduce using rule 35 (logica -> expresion operadores_log term .)
    VARIABLE        reduce using rule 35 (logica -> expresion operadores_log term .)
    RETURN          reduce using rule 35 (logica -> expresion operadores_log term .)
    IF              reduce using rule 35 (logica -> expresion operadores_log term .)
    SWITCH          reduce using rule 35 (logica -> expresion operadores_log term .)
    WHILE           reduce using rule 35 (logica -> expresion operadores_log term .)
    MAPLOWER        reduce using rule 35 (logica -> expresion operadores_log term .)
    FUNCTION        reduce using rule 35 (logica -> expresion operadores_log term .)
    IZQPAREN        reduce using rule 35 (logica -> expresion operadores_log term .)
    NUMBER          reduce using rule 35 (logica -> expresion operadores_log term .)
    STRING          reduce using rule 35 (logica -> expresion operadores_log term .)
    BOOLEAN         reduce using rule 35 (logica -> expresion operadores_log term .)
    BIGINT          reduce using rule 35 (logica -> expresion operadores_log term .)
    NULL            reduce using rule 35 (logica -> expresion operadores_log term .)
    SYMBOL          reduce using rule 35 (logica -> expresion operadores_log term .)
    $end            reduce using rule 35 (logica -> expresion operadores_log term .)
    DERLLAVE        reduce using rule 35 (logica -> expresion operadores_log term .)
    BREAK           reduce using rule 35 (logica -> expresion operadores_log term .)
    MULT            shift and go to state 68
    DIV             shift and go to state 69


state 82

    (20) declaracion -> VAR VARIABLE IGUAL . tipos_datos
    (23) declaracion -> VAR VARIABLE IGUAL . comparacion
    (26) declaracion -> VAR VARIABLE IGUAL . expresion
    (80) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (107) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (102) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN

    IZQCORCHETE     shift and go to state 102
    NEW             shift and go to state 103
    VARIABLE        shift and go to state 98
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37
    RETURN          shift and go to state 24
    IZQPAREN        shift and go to state 25

    tipos_datos                    shift and go to state 99
    comparacion                    shift and go to state 100
    expresion                      shift and go to state 101
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 83

    (29) asignacion -> VARIABLE operadores_asig tipos_datos .

    FINALDELINEA    reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    VAR             reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    LET             reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    CONST           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    VARIABLE        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    RETURN          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IF              reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    SWITCH          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    WHILE           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    MAPLOWER        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    FUNCTION        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    IZQPAREN        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NUMBER          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    STRING          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BOOLEAN         reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BIGINT          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    NULL            reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    SYMBOL          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    $end            reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    DERLLAVE        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)
    BREAK           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos .)


state 84

    (30) asignacion -> VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    LET             reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    IF              reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    $end            reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion .)


state 85

    (31) asignacion -> VARIABLE IGUAL expresion .
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (56) operadores_comp -> . MAYORQUE
    (57) operadores_comp -> . MENORQUE
    (58) operadores_comp -> . MAYORIGUALQUE
    (59) operadores_comp -> . MENORIGUALQUE
    (60) operadores_comp -> . NOIGUALQUE
    (61) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    VAR             reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    LET             reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    CONST           reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    IF              reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    STRING          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    NULL            reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    $end            reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    NOIGUALQUE      shift and go to state 51
    IGUALIGUAL      shift and go to state 52

    operadores_comp                shift and go to state 45

state 86

    (21) declaracion -> LET VARIABLE IGUAL . tipos_datos
    (24) declaracion -> LET VARIABLE IGUAL . comparacion
    (27) declaracion -> LET VARIABLE IGUAL . expresion
    (85) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (95) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (106) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN

    IZQCORCHETE     shift and go to state 107
    NEW             shift and go to state 108
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37
    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25

    tipos_datos                    shift and go to state 104
    comparacion                    shift and go to state 105
    expresion                      shift and go to state 106
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 87

    (22) declaracion -> CONST VARIABLE IGUAL . tipos_datos
    (25) declaracion -> CONST VARIABLE IGUAL . comparacion
    (28) declaracion -> CONST VARIABLE IGUAL . expresion
    (108) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN

    NEW             shift and go to state 112
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37
    RETURN          shift and go to state 24
    VARIABLE        shift and go to state 71
    IZQPAREN        shift and go to state 25

    tipos_datos                    shift and go to state 109
    comparacion                    shift and go to state 110
    expresion                      shift and go to state 111
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 88

    (70) funcion -> funcion_enc funcion_param DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 113


state 89

    (38) term -> term MULT factor .

    MULT            reduce using rule 38 (term -> term MULT factor .)
    DIV             reduce using rule 38 (term -> term MULT factor .)
    MAS             reduce using rule 38 (term -> term MULT factor .)
    MENOS           reduce using rule 38 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 38 (term -> term MULT factor .)
    MENORQUE        reduce using rule 38 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 38 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 38 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 38 (term -> term MULT factor .)
    IGUALIGUAL      reduce using rule 38 (term -> term MULT factor .)
    AND             reduce using rule 38 (term -> term MULT factor .)
    OR              reduce using rule 38 (term -> term MULT factor .)
    VAR             reduce using rule 38 (term -> term MULT factor .)
    LET             reduce using rule 38 (term -> term MULT factor .)
    CONST           reduce using rule 38 (term -> term MULT factor .)
    VARIABLE        reduce using rule 38 (term -> term MULT factor .)
    RETURN          reduce using rule 38 (term -> term MULT factor .)
    IF              reduce using rule 38 (term -> term MULT factor .)
    SWITCH          reduce using rule 38 (term -> term MULT factor .)
    WHILE           reduce using rule 38 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 38 (term -> term MULT factor .)
    FUNCTION        reduce using rule 38 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 38 (term -> term MULT factor .)
    NUMBER          reduce using rule 38 (term -> term MULT factor .)
    STRING          reduce using rule 38 (term -> term MULT factor .)
    BOOLEAN         reduce using rule 38 (term -> term MULT factor .)
    BIGINT          reduce using rule 38 (term -> term MULT factor .)
    NULL            reduce using rule 38 (term -> term MULT factor .)
    SYMBOL          reduce using rule 38 (term -> term MULT factor .)
    $end            reduce using rule 38 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 38 (term -> term MULT factor .)
    BREAK           reduce using rule 38 (term -> term MULT factor .)
    DERPAREN        reduce using rule 38 (term -> term MULT factor .)
    FINALDELINEA    reduce using rule 38 (term -> term MULT factor .)


state 90

    (39) term -> term DIV factor .

    MULT            reduce using rule 39 (term -> term DIV factor .)
    DIV             reduce using rule 39 (term -> term DIV factor .)
    MAS             reduce using rule 39 (term -> term DIV factor .)
    MENOS           reduce using rule 39 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 39 (term -> term DIV factor .)
    MENORQUE        reduce using rule 39 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 39 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 39 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 39 (term -> term DIV factor .)
    IGUALIGUAL      reduce using rule 39 (term -> term DIV factor .)
    AND             reduce using rule 39 (term -> term DIV factor .)
    OR              reduce using rule 39 (term -> term DIV factor .)
    VAR             reduce using rule 39 (term -> term DIV factor .)
    LET             reduce using rule 39 (term -> term DIV factor .)
    CONST           reduce using rule 39 (term -> term DIV factor .)
    VARIABLE        reduce using rule 39 (term -> term DIV factor .)
    RETURN          reduce using rule 39 (term -> term DIV factor .)
    IF              reduce using rule 39 (term -> term DIV factor .)
    SWITCH          reduce using rule 39 (term -> term DIV factor .)
    WHILE           reduce using rule 39 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 39 (term -> term DIV factor .)
    FUNCTION        reduce using rule 39 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 39 (term -> term DIV factor .)
    NUMBER          reduce using rule 39 (term -> term DIV factor .)
    STRING          reduce using rule 39 (term -> term DIV factor .)
    BOOLEAN         reduce using rule 39 (term -> term DIV factor .)
    BIGINT          reduce using rule 39 (term -> term DIV factor .)
    NULL            reduce using rule 39 (term -> term DIV factor .)
    SYMBOL          reduce using rule 39 (term -> term DIV factor .)
    $end            reduce using rule 39 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 39 (term -> term DIV factor .)
    BREAK           reduce using rule 39 (term -> term DIV factor .)
    DERPAREN        reduce using rule 39 (term -> term DIV factor .)
    FINALDELINEA    reduce using rule 39 (term -> term DIV factor .)


state 91

    (43) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    IGUALIGUAL      reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    AND             reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    OR              reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    RETURN          reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    WHILE           reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    STRING          reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    BOOLEAN         reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    BIGINT          reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    NULL            reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    SYMBOL          reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    BREAK           reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)
    FINALDELINEA    reduce using rule 43 (factor -> IZQPAREN expresion DERPAREN .)


state 92

    (71) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 114


state 93

    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (56) operadores_comp -> . MAYORQUE
    (57) operadores_comp -> . MENORQUE
    (58) operadores_comp -> . MAYORIGUALQUE
    (59) operadores_comp -> . MENORIGUALQUE
    (60) operadores_comp -> . NOIGUALQUE
    (61) operadores_comp -> . IGUALIGUAL

    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    NOIGUALQUE      shift and go to state 51
    IGUALIGUAL      shift and go to state 52

    operadores_comp                shift and go to state 45

state 94

    (74) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 115


state 95

    (79) while -> WHILE IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 116


state 96

    (109) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    IZQPAREN        shift and go to state 117


state 97

    (67) funcion_enc -> FUNCTION VARIABLE IZQPAREN .

    VARIABLE        reduce using rule 67 (funcion_enc -> FUNCTION VARIABLE IZQPAREN .)
    DERPAREN        reduce using rule 67 (funcion_enc -> FUNCTION VARIABLE IZQPAREN .)


state 98

    (102) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN
    (104) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN
    (41) factor -> VARIABLE .

    PUNTO           shift and go to state 118
    MULT            reduce using rule 41 (factor -> VARIABLE .)
    DIV             reduce using rule 41 (factor -> VARIABLE .)
    MAS             reduce using rule 41 (factor -> VARIABLE .)
    MENOS           reduce using rule 41 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 41 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 41 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 41 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 41 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 41 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 41 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 41 (factor -> VARIABLE .)
    VAR             reduce using rule 41 (factor -> VARIABLE .)
    LET             reduce using rule 41 (factor -> VARIABLE .)
    CONST           reduce using rule 41 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 41 (factor -> VARIABLE .)
    RETURN          reduce using rule 41 (factor -> VARIABLE .)
    IF              reduce using rule 41 (factor -> VARIABLE .)
    SWITCH          reduce using rule 41 (factor -> VARIABLE .)
    WHILE           reduce using rule 41 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 41 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 41 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 41 (factor -> VARIABLE .)
    NUMBER          reduce using rule 41 (factor -> VARIABLE .)
    STRING          reduce using rule 41 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 41 (factor -> VARIABLE .)
    BIGINT          reduce using rule 41 (factor -> VARIABLE .)
    NULL            reduce using rule 41 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 41 (factor -> VARIABLE .)
    $end            reduce using rule 41 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 41 (factor -> VARIABLE .)
    BREAK           reduce using rule 41 (factor -> VARIABLE .)


state 99

    (20) declaracion -> VAR VARIABLE IGUAL tipos_datos .
    (42) factor -> tipos_datos .

  ! reduce/reduce conflict for FINALDELINEA resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VAR resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    FINALDELINEA    reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    VAR             reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    LET             reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    CONST           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    VARIABLE        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    RETURN          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    IF              reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    SWITCH          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    WHILE           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    MAPLOWER        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    FUNCTION        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    IZQPAREN        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    NUMBER          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    STRING          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    BOOLEAN         reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    BIGINT          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    NULL            reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    SYMBOL          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    $end            reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    DERLLAVE        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    BREAK           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos .)
    MULT            reduce using rule 42 (factor -> tipos_datos .)
    DIV             reduce using rule 42 (factor -> tipos_datos .)
    MAS             reduce using rule 42 (factor -> tipos_datos .)
    MENOS           reduce using rule 42 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 42 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 42 (factor -> tipos_datos .)

  ! FINALDELINEA    [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! LET             [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! CONST           [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! VARIABLE        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! RETURN          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! IF              [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! SWITCH          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! WHILE           [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! MAPLOWER        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! FUNCTION        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! IZQPAREN        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! NUMBER          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! STRING          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BOOLEAN         [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BIGINT          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! NULL            [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! SYMBOL          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! $end            [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! DERLLAVE        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BREAK           [ reduce using rule 42 (factor -> tipos_datos .) ]


state 100

    (23) declaracion -> VAR VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    LET             reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IF              reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    $end            reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion .)


state 101

    (26) declaracion -> VAR VARIABLE IGUAL expresion .
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (56) operadores_comp -> . MAYORQUE
    (57) operadores_comp -> . MENORQUE
    (58) operadores_comp -> . MAYORIGUALQUE
    (59) operadores_comp -> . MENORIGUALQUE
    (60) operadores_comp -> . NOIGUALQUE
    (61) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    VAR             reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    LET             reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    CONST           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IF              reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    STRING          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    NULL            reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    $end            reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    NOIGUALQUE      shift and go to state 51
    IGUALIGUAL      shift and go to state 52

    operadores_comp                shift and go to state 45

state 102

    (80) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (84) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (90) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (94) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (100) lista -> . lista COMA lista
    (101) lista -> . tipos_datos
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 120
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    lista                          shift and go to state 119
    tipos_datos                    shift and go to state 121

state 103

    (81) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (91) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (92) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (107) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    ARRAY           shift and go to state 122
    MAP             shift and go to state 123


state 104

    (21) declaracion -> LET VARIABLE IGUAL tipos_datos .
    (42) factor -> tipos_datos .

  ! reduce/reduce conflict for FINALDELINEA resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VAR resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for RETURN resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BREAK resolved using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    FINALDELINEA    reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    VAR             reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    LET             reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    CONST           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    VARIABLE        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    RETURN          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    IF              reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    SWITCH          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    WHILE           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    MAPLOWER        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    FUNCTION        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    IZQPAREN        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    NUMBER          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    STRING          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    BOOLEAN         reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    BIGINT          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    NULL            reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    SYMBOL          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    $end            reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    DERLLAVE        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    BREAK           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos .)
    MULT            reduce using rule 42 (factor -> tipos_datos .)
    DIV             reduce using rule 42 (factor -> tipos_datos .)
    MAS             reduce using rule 42 (factor -> tipos_datos .)
    MENOS           reduce using rule 42 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 42 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 42 (factor -> tipos_datos .)

  ! FINALDELINEA    [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! LET             [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! CONST           [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! VARIABLE        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! RETURN          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! IF              [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! SWITCH          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! WHILE           [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! MAPLOWER        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! FUNCTION        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! IZQPAREN        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! NUMBER          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! STRING          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BOOLEAN         [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BIGINT          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! NULL            [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! SYMBOL          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! $end            [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! DERLLAVE        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BREAK           [ reduce using rule 42 (factor -> tipos_datos .) ]


state 105

    (24) declaracion -> LET VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    LET             reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IF              reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    $end            reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion .)


state 106

    (27) declaracion -> LET VARIABLE IGUAL expresion .
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (56) operadores_comp -> . MAYORQUE
    (57) operadores_comp -> . MENORQUE
    (58) operadores_comp -> . MAYORIGUALQUE
    (59) operadores_comp -> . MENORIGUALQUE
    (60) operadores_comp -> . NOIGUALQUE
    (61) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    VAR             reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    LET             reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    CONST           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    IF              reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    STRING          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    NULL            reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    $end            reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    NOIGUALQUE      shift and go to state 51
    IGUALIGUAL      shift and go to state 52

    operadores_comp                shift and go to state 45

state 107

    (85) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (89) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (95) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (99) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (100) lista -> . lista COMA lista
    (101) lista -> . tipos_datos
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 125
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    lista                          shift and go to state 124
    tipos_datos                    shift and go to state 121

state 108

    (86) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (96) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (97) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (106) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    ARRAY           shift and go to state 126
    MAP             shift and go to state 127


state 109

    (22) declaracion -> CONST VARIABLE IGUAL tipos_datos .
    (42) factor -> tipos_datos .

  ! reduce/reduce conflict for FINALDELINEA resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VAR resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
  ! reduce/reduce conflict for BREAK resolved using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    FINALDELINEA    reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    VAR             reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    LET             reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    CONST           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    VARIABLE        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    RETURN          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    IF              reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    SWITCH          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    WHILE           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    MAPLOWER        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    FUNCTION        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    IZQPAREN        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    NUMBER          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    STRING          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    BOOLEAN         reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    BIGINT          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    NULL            reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    SYMBOL          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    $end            reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    DERLLAVE        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    BREAK           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos .)
    MULT            reduce using rule 42 (factor -> tipos_datos .)
    DIV             reduce using rule 42 (factor -> tipos_datos .)
    MAS             reduce using rule 42 (factor -> tipos_datos .)
    MENOS           reduce using rule 42 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 42 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 42 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 42 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 42 (factor -> tipos_datos .)

  ! FINALDELINEA    [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! LET             [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! CONST           [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! VARIABLE        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! RETURN          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! IF              [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! SWITCH          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! WHILE           [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! MAPLOWER        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! FUNCTION        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! IZQPAREN        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! NUMBER          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! STRING          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BOOLEAN         [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BIGINT          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! NULL            [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! SYMBOL          [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! $end            [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! DERLLAVE        [ reduce using rule 42 (factor -> tipos_datos .) ]
  ! BREAK           [ reduce using rule 42 (factor -> tipos_datos .) ]


state 110

    (25) declaracion -> CONST VARIABLE IGUAL comparacion .

    FINALDELINEA    reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    VAR             reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    LET             reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    CONST           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    VARIABLE        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    RETURN          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IF              reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    SWITCH          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    WHILE           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    MAPLOWER        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    FUNCTION        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    IZQPAREN        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NUMBER          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    STRING          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BOOLEAN         reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BIGINT          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    NULL            reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    SYMBOL          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    $end            reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    DERLLAVE        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)
    BREAK           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion .)


state 111

    (28) declaracion -> CONST VARIABLE IGUAL expresion .
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (56) operadores_comp -> . MAYORQUE
    (57) operadores_comp -> . MENORQUE
    (58) operadores_comp -> . MAYORIGUALQUE
    (59) operadores_comp -> . MENORIGUALQUE
    (60) operadores_comp -> . NOIGUALQUE
    (61) operadores_comp -> . IGUALIGUAL

    FINALDELINEA    reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    VAR             reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    LET             reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    CONST           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    VARIABLE        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    RETURN          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IF              reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    SWITCH          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    WHILE           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    MAPLOWER        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    FUNCTION        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    IZQPAREN        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NUMBER          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    STRING          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BOOLEAN         reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BIGINT          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    NULL            reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    SYMBOL          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    $end            reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    DERLLAVE        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    BREAK           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    NOIGUALQUE      shift and go to state 51
    IGUALIGUAL      shift and go to state 52

    operadores_comp                shift and go to state 45

state 112

    (108) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    MAP             shift and go to state 128


state 113

    (70) funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    funcion_enc                    shift and go to state 22
    js                             shift and go to state 129
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 114

    (71) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (72) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (73) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 130


state 115

    (74) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 131


state 116

    (79) while -> WHILE IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 132


state 117

    (109) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipos_datos COMA tipos_datos DERPAREN final_linea
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    tipos_datos                    shift and go to state 133

state 118

    (102) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN
    (104) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN

    POP             shift and go to state 134
    PUSH            shift and go to state 135


state 119

    (80) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (90) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (100) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 136
    COMA            shift and go to state 137


state 120

    (84) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (94) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 138
    VAR             reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VARIABLE        reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    RETURN          reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    STRING          reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BOOLEAN         reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BIGINT          reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NULL            reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SYMBOL          reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BREAK           reduce using rule 94 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 121

    (101) lista -> tipos_datos .

    DERCORCHETE     reduce using rule 101 (lista -> tipos_datos .)
    COMA            reduce using rule 101 (lista -> tipos_datos .)
    DERPAREN        reduce using rule 101 (lista -> tipos_datos .)


state 122

    (81) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (91) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (92) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (93) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 139


state 123

    (107) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 140


state 124

    (85) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (95) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (100) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 141
    COMA            shift and go to state 137


state 125

    (89) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (99) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 142
    VAR             reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VARIABLE        reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    RETURN          reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    STRING          reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BOOLEAN         reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BIGINT          reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NULL            reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SYMBOL          reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BREAK           reduce using rule 99 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 126

    (86) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (96) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (97) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (98) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 143


state 127

    (106) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 144


state 128

    (108) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 145


state 129

    (70) funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 146


state 130

    (71) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (73) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    comparacion                    shift and go to state 7
    js                             shift and go to state 147
    if                             shift and go to state 11
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 131

    (74) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (75) ncasos -> . casos
    (76) ncasos -> . casos ncasos
    (77) casos -> . CASE tipos_datos DOSPUNTOS js BREAK final_linea
    (78) casos -> . CASE tipos_datos DOSPUNTOS

    CASE            shift and go to state 150

    ncasos                         shift and go to state 148
    casos                          shift and go to state 149

state 132

    (79) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    comparacion                    shift and go to state 7
    js                             shift and go to state 151
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 133

    (109) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos . COMA tipos_datos DERPAREN final_linea

    COMA            shift and go to state 152


state 134

    (102) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN

    IZQPAREN        shift and go to state 153


state 135

    (104) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 154


state 136

    (80) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (90) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 155
    VAR             reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    RETURN          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    STRING          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BOOLEAN         reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BIGINT          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NULL            reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SYMBOL          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BREAK           reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 137

    (100) lista -> lista COMA . lista
    (100) lista -> . lista COMA lista
    (101) lista -> . tipos_datos
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    lista                          shift and go to state 156
    tipos_datos                    shift and go to state 121

state 138

    (84) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    RETURN          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BREAK           reduce using rule 84 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 139

    (81) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (91) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (92) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (93) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (100) lista -> . lista COMA lista
    (101) lista -> . tipos_datos
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 157
    NUMBER          shift and go to state 158
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    lista                          shift and go to state 159
    tipos_datos                    shift and go to state 121

state 140

    (107) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 160


state 141

    (85) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (95) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 161
    VAR             reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    RETURN          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    STRING          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BOOLEAN         reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BIGINT          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NULL            reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SYMBOL          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BREAK           reduce using rule 95 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 142

    (89) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    RETURN          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BREAK           reduce using rule 89 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 143

    (86) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (96) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (97) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (98) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (100) lista -> . lista COMA lista
    (101) lista -> . tipos_datos
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 162
    NUMBER          shift and go to state 163
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    lista                          shift and go to state 164
    tipos_datos                    shift and go to state 121

state 144

    (106) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 165


state 145

    (108) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 166


state 146

    (70) funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 70 (funcion -> funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE .)


state 147

    (71) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (73) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 167


state 148

    (74) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 168


state 149

    (75) ncasos -> casos .
    (76) ncasos -> casos . ncasos
    (75) ncasos -> . casos
    (76) ncasos -> . casos ncasos
    (77) casos -> . CASE tipos_datos DOSPUNTOS js BREAK final_linea
    (78) casos -> . CASE tipos_datos DOSPUNTOS

    DEFAULT         reduce using rule 75 (ncasos -> casos .)
    CASE            shift and go to state 150

    casos                          shift and go to state 149
    ncasos                         shift and go to state 169

state 150

    (77) casos -> CASE . tipos_datos DOSPUNTOS js BREAK final_linea
    (78) casos -> CASE . tipos_datos DOSPUNTOS
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    tipos_datos                    shift and go to state 170

state 151

    (79) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 171


state 152

    (109) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA . tipos_datos DERPAREN final_linea
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    tipos_datos                    shift and go to state 172

state 153

    (102) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA
    (103) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN

    DERPAREN        shift and go to state 173


state 154

    (104) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (105) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN
    (100) lista -> . lista COMA lista
    (101) lista -> . tipos_datos
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    lista                          shift and go to state 174
    tipos_datos                    shift and go to state 121

state 155

    (80) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    RETURN          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BREAK           reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 156

    (100) lista -> lista COMA lista .
    (100) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 100 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 100 (lista -> lista COMA lista .)
    COMA            shift and go to state 137

  ! COMA            [ reduce using rule 100 (lista -> lista COMA lista .) ]


state 157

    (81) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (91) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 175
    VAR             reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    RETURN          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    STRING          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NULL            reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BREAK           reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 158

    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (92) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (44) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 176
    COMA            reduce using rule 44 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 44 (tipos_datos -> NUMBER .) ]


state 159

    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (93) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (100) lista -> lista . COMA lista

    DERPAREN        shift and go to state 177
    COMA            shift and go to state 137


state 160

    (107) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (64) final_linea -> . FINALDELINEA
    (65) final_linea -> . empty
    (66) empty -> .

    FINALDELINEA    shift and go to state 40
    VAR             reduce using rule 66 (empty -> .)
    LET             reduce using rule 66 (empty -> .)
    CONST           reduce using rule 66 (empty -> .)
    VARIABLE        reduce using rule 66 (empty -> .)
    RETURN          reduce using rule 66 (empty -> .)
    IF              reduce using rule 66 (empty -> .)
    SWITCH          reduce using rule 66 (empty -> .)
    WHILE           reduce using rule 66 (empty -> .)
    MAPLOWER        reduce using rule 66 (empty -> .)
    FUNCTION        reduce using rule 66 (empty -> .)
    IZQPAREN        reduce using rule 66 (empty -> .)
    NUMBER          reduce using rule 66 (empty -> .)
    STRING          reduce using rule 66 (empty -> .)
    BOOLEAN         reduce using rule 66 (empty -> .)
    BIGINT          reduce using rule 66 (empty -> .)
    NULL            reduce using rule 66 (empty -> .)
    SYMBOL          reduce using rule 66 (empty -> .)
    $end            reduce using rule 66 (empty -> .)
    DERLLAVE        reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    final_linea                    shift and go to state 178
    empty                          shift and go to state 41

state 161

    (85) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    RETURN          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BREAK           reduce using rule 85 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 162

    (86) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (96) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 179
    VAR             reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    RETURN          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    STRING          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NULL            reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BREAK           reduce using rule 96 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 163

    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (97) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (44) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 180
    COMA            reduce using rule 44 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 44 (tipos_datos -> NUMBER .) ]


state 164

    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (98) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (100) lista -> lista . COMA lista

    DERPAREN        shift and go to state 181
    COMA            shift and go to state 137


state 165

    (106) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (64) final_linea -> . FINALDELINEA
    (65) final_linea -> . empty
    (66) empty -> .

    FINALDELINEA    shift and go to state 40
    VAR             reduce using rule 66 (empty -> .)
    LET             reduce using rule 66 (empty -> .)
    CONST           reduce using rule 66 (empty -> .)
    VARIABLE        reduce using rule 66 (empty -> .)
    RETURN          reduce using rule 66 (empty -> .)
    IF              reduce using rule 66 (empty -> .)
    SWITCH          reduce using rule 66 (empty -> .)
    WHILE           reduce using rule 66 (empty -> .)
    MAPLOWER        reduce using rule 66 (empty -> .)
    FUNCTION        reduce using rule 66 (empty -> .)
    IZQPAREN        reduce using rule 66 (empty -> .)
    NUMBER          reduce using rule 66 (empty -> .)
    STRING          reduce using rule 66 (empty -> .)
    BOOLEAN         reduce using rule 66 (empty -> .)
    BIGINT          reduce using rule 66 (empty -> .)
    NULL            reduce using rule 66 (empty -> .)
    SYMBOL          reduce using rule 66 (empty -> .)
    $end            reduce using rule 66 (empty -> .)
    DERLLAVE        reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    final_linea                    shift and go to state 182
    empty                          shift and go to state 41

state 166

    (108) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (64) final_linea -> . FINALDELINEA
    (65) final_linea -> . empty
    (66) empty -> .

    FINALDELINEA    shift and go to state 40
    VAR             reduce using rule 66 (empty -> .)
    LET             reduce using rule 66 (empty -> .)
    CONST           reduce using rule 66 (empty -> .)
    VARIABLE        reduce using rule 66 (empty -> .)
    RETURN          reduce using rule 66 (empty -> .)
    IF              reduce using rule 66 (empty -> .)
    SWITCH          reduce using rule 66 (empty -> .)
    WHILE           reduce using rule 66 (empty -> .)
    MAPLOWER        reduce using rule 66 (empty -> .)
    FUNCTION        reduce using rule 66 (empty -> .)
    IZQPAREN        reduce using rule 66 (empty -> .)
    NUMBER          reduce using rule 66 (empty -> .)
    STRING          reduce using rule 66 (empty -> .)
    BOOLEAN         reduce using rule 66 (empty -> .)
    BIGINT          reduce using rule 66 (empty -> .)
    NULL            reduce using rule 66 (empty -> .)
    SYMBOL          reduce using rule 66 (empty -> .)
    $end            reduce using rule 66 (empty -> .)
    DERLLAVE        reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    final_linea                    shift and go to state 183
    empty                          shift and go to state 41

state 167

    (71) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (73) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VAR             reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 185
    IF              shift and go to state 27

  ! IF              [ reduce using rule 71 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 184

state 168

    (74) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 186


state 169

    (76) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 76 (ncasos -> casos ncasos .)


state 170

    (77) casos -> CASE tipos_datos . DOSPUNTOS js BREAK final_linea
    (78) casos -> CASE tipos_datos . DOSPUNTOS

    DOSPUNTOS       shift and go to state 187


state 171

    (79) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 79 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)


state 172

    (109) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos . DERPAREN final_linea

    DERPAREN        shift and go to state 188


state 173

    (102) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA
    (103) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 189
    VAR             reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    LET             reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    CONST           reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    RETURN          reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IF              reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    STRING          reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    NULL            reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    $end            reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    BREAK           reduce using rule 103 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)


state 174

    (104) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (105) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN
    (100) lista -> lista . COMA lista

    DERPAREN        shift and go to state 190
    COMA            shift and go to state 137


state 175

    (81) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    STRING          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NULL            reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 176

    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (92) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 191
    VAR             reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VARIABLE        reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    RETURN          reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    STRING          reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BOOLEAN         reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BIGINT          reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NULL            reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SYMBOL          reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BREAK           reduce using rule 92 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 177

    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (93) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 192
    VAR             reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    RETURN          reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BREAK           reduce using rule 93 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 178

    (107) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 107 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 179

    (86) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    STRING          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NULL            reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 86 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 180

    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (97) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 193
    VAR             reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VARIABLE        reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    RETURN          reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    STRING          reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BOOLEAN         reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BIGINT          reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NULL            reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SYMBOL          reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BREAK           reduce using rule 97 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 181

    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (98) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 194
    VAR             reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    RETURN          reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BREAK           reduce using rule 98 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 182

    (106) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 106 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 183

    (108) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    RETURN          reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BREAK           reduce using rule 108 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 184

    (72) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VAR             reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VARIABLE        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    RETURN          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    WHILE           reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    STRING          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BOOLEAN         reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BIGINT          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NULL            reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SYMBOL          reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BREAK           reduce using rule 72 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 185

    (73) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 195


state 186

    (74) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    js                             shift and go to state 196
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 187

    (77) casos -> CASE tipos_datos DOSPUNTOS . js BREAK final_linea
    (78) casos -> CASE tipos_datos DOSPUNTOS .
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    CASE            reduce using rule 78 (casos -> CASE tipos_datos DOSPUNTOS .)
    DEFAULT         reduce using rule 78 (casos -> CASE tipos_datos DOSPUNTOS .)
    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    tipos_datos                    shift and go to state 21
    js                             shift and go to state 197
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 188

    (109) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN . final_linea
    (64) final_linea -> . FINALDELINEA
    (65) final_linea -> . empty
    (66) empty -> .

    FINALDELINEA    shift and go to state 40
    VAR             reduce using rule 66 (empty -> .)
    LET             reduce using rule 66 (empty -> .)
    CONST           reduce using rule 66 (empty -> .)
    VARIABLE        reduce using rule 66 (empty -> .)
    RETURN          reduce using rule 66 (empty -> .)
    IF              reduce using rule 66 (empty -> .)
    SWITCH          reduce using rule 66 (empty -> .)
    WHILE           reduce using rule 66 (empty -> .)
    MAPLOWER        reduce using rule 66 (empty -> .)
    FUNCTION        reduce using rule 66 (empty -> .)
    IZQPAREN        reduce using rule 66 (empty -> .)
    NUMBER          reduce using rule 66 (empty -> .)
    STRING          reduce using rule 66 (empty -> .)
    BOOLEAN         reduce using rule 66 (empty -> .)
    BIGINT          reduce using rule 66 (empty -> .)
    NULL            reduce using rule 66 (empty -> .)
    SYMBOL          reduce using rule 66 (empty -> .)
    $end            reduce using rule 66 (empty -> .)
    DERLLAVE        reduce using rule 66 (empty -> .)
    BREAK           reduce using rule 66 (empty -> .)

    final_linea                    shift and go to state 198
    empty                          shift and go to state 41

state 189

    (102) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    STRING          reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NULL            reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 102 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 190

    (104) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA
    (105) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 199
    VAR             reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    LET             reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    RETURN          reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IF              reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    $end            reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    BREAK           reduce using rule 105 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)


state 191

    (82) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VAR             reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    STRING          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NULL            reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 82 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 192

    (83) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    STRING          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NULL            reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 83 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 193

    (87) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VAR             reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    STRING          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NULL            reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 87 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 194

    (88) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    STRING          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NULL            reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 88 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 195

    (73) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion final_linea
    (4) instrucciones -> . asignacion final_linea
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE
    (18) declaracion -> . LET VARIABLE
    (19) declaracion -> . CONST VARIABLE
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion
    (24) declaracion -> . LET VARIABLE IGUAL comparacion
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion
    (26) declaracion -> . VAR VARIABLE IGUAL expresion
    (27) declaracion -> . LET VARIABLE IGUAL expresion
    (28) declaracion -> . CONST VARIABLE IGUAL expresion
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos
    (30) asignacion -> . VARIABLE IGUAL comparacion
    (31) asignacion -> . VARIABLE IGUAL expresion
    (70) funcion -> . funcion_enc funcion_param DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) expresion -> . RETURN expresion
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (80) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (82) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (83) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (84) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (87) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (88) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (89) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (90) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (91) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (92) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (93) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (94) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (95) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (96) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (97) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (98) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (99) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (106) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (107) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (108) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (71) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (72) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (73) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (74) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (79) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (102) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (103) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (104) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (105) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (109) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (67) funcion_enc -> . FUNCTION VARIABLE IZQPAREN
    (38) term -> . term MULT factor
    (39) term -> . term DIV factor
    (40) term -> . factor
    (41) factor -> . VARIABLE
    (42) factor -> . tipos_datos
    (43) factor -> . IZQPAREN expresion DERPAREN
    (44) tipos_datos -> . NUMBER
    (45) tipos_datos -> . STRING
    (46) tipos_datos -> . BOOLEAN
    (47) tipos_datos -> . BIGINT
    (48) tipos_datos -> . NULL
    (49) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    RETURN          shift and go to state 24
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    MAPLOWER        shift and go to state 30
    FUNCTION        shift and go to state 31
    IZQPAREN        shift and go to state 25
    NUMBER          shift and go to state 26
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 34
    BIGINT          shift and go to state 35
    NULL            shift and go to state 36
    SYMBOL          shift and go to state 37

    comparacion                    shift and go to state 7
    js                             shift and go to state 200
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    funcion_enc                    shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 32

state 196

    (74) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 201


state 197

    (77) casos -> CASE tipos_datos DOSPUNTOS js . BREAK final_linea

    BREAK           shift and go to state 202


state 198

    (109) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .

    VAR             reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    LET             reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    CONST           reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    VARIABLE        reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    RETURN          reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IF              reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SWITCH          reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    WHILE           reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    MAPLOWER        reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    FUNCTION        reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IZQPAREN        reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NUMBER          reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    STRING          reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BOOLEAN         reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BIGINT          reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NULL            reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SYMBOL          reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    $end            reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    DERLLAVE        reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BREAK           reduce using rule 109 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)


state 199

    (104) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    RETURN          reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    STRING          reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NULL            reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    BREAK           reduce using rule 104 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 200

    (73) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 203


state 201

    (74) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VAR             reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VARIABLE        reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    RETURN          reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    WHILE           reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    STRING          reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BOOLEAN         reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BIGINT          reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NULL            reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SYMBOL          reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BREAK           reduce using rule 74 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 202

    (77) casos -> CASE tipos_datos DOSPUNTOS js BREAK . final_linea
    (64) final_linea -> . FINALDELINEA
    (65) final_linea -> . empty
    (66) empty -> .

    FINALDELINEA    shift and go to state 40
    CASE            reduce using rule 66 (empty -> .)
    DEFAULT         reduce using rule 66 (empty -> .)

    final_linea                    shift and go to state 204
    empty                          shift and go to state 41

state 203

    (73) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    RETURN          reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BREAK           reduce using rule 73 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 204

    (77) casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .

    CASE            reduce using rule 77 (casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .)
    DEFAULT         reduce using rule 77 (casos -> CASE tipos_datos DOSPUNTOS js BREAK final_linea .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NUMBER in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 57 resolved as shift
WARNING: shift/reduce conflict for BIGINT in state 57 resolved as shift
WARNING: shift/reduce conflict for NULL in state 57 resolved as shift
WARNING: shift/reduce conflict for SYMBOL in state 57 resolved as shift
WARNING: shift/reduce conflict for MAS in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 70 resolved as shift
WARNING: shift/reduce conflict for COMA in state 156 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 158 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 167 resolved as shift
WARNING: reduce/reduce conflict in state 99 resolved using rule (declaracion -> VAR VARIABLE IGUAL tipos_datos)
WARNING: rejected rule (factor -> tipos_datos) in state 99
WARNING: reduce/reduce conflict in state 104 resolved using rule (declaracion -> LET VARIABLE IGUAL tipos_datos)
WARNING: rejected rule (factor -> tipos_datos) in state 104
WARNING: reduce/reduce conflict in state 109 resolved using rule (declaracion -> CONST VARIABLE IGUAL tipos_datos)
WARNING: rejected rule (factor -> tipos_datos) in state 109
