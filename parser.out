Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AWAIT
    CATCH
    CLASS
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DELETE
    DO
    EXPORT
    EXTENDS
    FOR
    GET
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SUPER
    UNDEFINED
    VOID

Grammar

Rule 0     S' -> js
Rule 1     js -> instrucciones
Rule 2     js -> instrucciones js
Rule 3     instrucciones -> declaracion
Rule 4     instrucciones -> asignacion
Rule 5     instrucciones -> funcion
Rule 6     instrucciones -> expresion
Rule 7     instrucciones -> comparacion
Rule 8     instrucciones -> logica
Rule 9     instrucciones -> arreglo
Rule 10    instrucciones -> map
Rule 11    instrucciones -> if
Rule 12    instrucciones -> switch
Rule 13    instrucciones -> while
Rule 14    instrucciones -> pop
Rule 15    instrucciones -> push
Rule 16    instrucciones -> mapSet
Rule 17    declaracion -> VAR VARIABLE final_linea
Rule 18    declaracion -> LET VARIABLE final_linea
Rule 19    declaracion -> CONST VARIABLE final_linea
Rule 20    declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea
Rule 21    declaracion -> LET VARIABLE IGUAL tipos_datos final_linea
Rule 22    declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea
Rule 23    declaracion -> VAR VARIABLE IGUAL comparacion final_linea
Rule 24    declaracion -> LET VARIABLE IGUAL comparacion final_linea
Rule 25    declaracion -> CONST VARIABLE IGUAL comparacion final_linea
Rule 26    declaracion -> VAR VARIABLE IGUAL expresion final_linea
Rule 27    declaracion -> LET VARIABLE IGUAL expresion final_linea
Rule 28    declaracion -> CONST VARIABLE IGUAL expresion final_linea
Rule 29    asignacion -> VARIABLE operadores_asig tipos_datos final_linea
Rule 30    asignacion -> VARIABLE IGUAL comparacion final_linea
Rule 31    asignacion -> VARIABLE IGUAL expresion final_linea
Rule 32    expresion -> expresion MAS term
Rule 33    expresion -> expresion MENOS term
Rule 34    comparacion -> expresion operadores_comp term
Rule 35    logica -> expresion operadores_log term
Rule 36    expresion -> term
Rule 37    term -> term MULT factor
Rule 38    term -> term DIV factor
Rule 39    term -> factor
Rule 40    factor -> VARIABLE
Rule 41    factor -> tipos_datos
Rule 42    factor -> IZQPAREN expresion DERPAREN
Rule 43    tipos_datos -> NUMBER
Rule 44    tipos_datos -> STRING
Rule 45    tipos_datos -> BOOLEAN
Rule 46    tipos_datos -> BIGINT
Rule 47    tipos_datos -> NULL
Rule 48    tipos_datos -> SYMBOL
Rule 49    operadores_asig -> IGUAL
Rule 50    operadores_asig -> MASIGUAL
Rule 51    operadores_asig -> MENOSIGUAL
Rule 52    operadores_asig -> DIVIGUAL
Rule 53    operadores_asig -> MODIGUAL
Rule 54    operadores_asig -> MULTIGUAL
Rule 55    operadores_comp -> MAYORQUE
Rule 56    operadores_comp -> MENORQUE
Rule 57    operadores_comp -> MAYORIGUALQUE
Rule 58    operadores_comp -> MENORIGUALQUE
Rule 59    operadores_comp -> NOIGUALQUE
Rule 60    operadores_comp -> IGUALIGUAL
Rule 61    operadores_log -> AND
Rule 62    operadores_log -> OR
Rule 63    final_linea -> FINALDELINEA
Rule 64    final_linea -> empty
Rule 65    empty -> <empty>
Rule 66    funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
Rule 67    funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
Rule 68    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 69    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
Rule 70    if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
Rule 71    switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
Rule 72    casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
Rule 73    casos -> CASE tipos_datos DOSPUNTOS
Rule 74    ncasos -> casos
Rule 75    ncasos -> casos ncasos
Rule 76    while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
Rule 77    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 78    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 79    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 80    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 81    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 82    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
Rule 83    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
Rule 84    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
Rule 85    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
Rule 86    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
Rule 87    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 88    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 89    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 90    arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 91    arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 92    arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
Rule 93    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
Rule 94    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
Rule 95    arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
Rule 96    arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
Rule 97    lista -> lista COMA lista
Rule 98    lista -> tipos_datos
Rule 99    pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
Rule 100   pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
Rule 101   push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
Rule 102   push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
Rule 103   map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 104   map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 105   map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
Rule 106   mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

Terminals, with rules where they appear

AND                  : 61
ARRAY                : 78 79 80 83 84 85 88 89 90 93 94 95
AWAIT                : 
BIGINT               : 46
BOOLEAN              : 45
BREAK                : 72
CASE                 : 72 73
CATCH                : 
CLASS                : 
COMA                 : 97 106
CONST                : 19 22 25 28 105
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 71
DELETE               : 
DERCORCHETE          : 77 81 82 86 87 91 92 96
DERLLAVE             : 66 67 68 69 70 70 71 76
DERPAREN             : 42 66 67 68 69 70 71 76 78 79 80 83 84 85 88 89 90 93 94 95 99 100 101 102 103 104 105 106
DIV                  : 38
DIVIGUAL             : 52
DO                   : 
DOSPUNTOS            : 71 72 73
ELSE                 : 70
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 63 72 77 78 79 80 81 82 83 84 85 86 99 101
FOR                  : 
FUNCTION             : 66 67
GET                  : 
IF                   : 68 69 70
IGUAL                : 20 21 22 23 24 25 26 27 28 30 31 49 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 99 100 101 102 103 104 105
IGUALIGUAL           : 60
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 77 81 82 86 87 91 92 96
IZQLLAVE             : 66 67 68 69 70 70 71 76
IZQPAREN             : 42 66 67 68 69 70 71 76 78 79 80 83 84 85 88 89 90 93 94 95 99 100 101 102 103 104 105 106
LET                  : 18 21 24 27 82 83 84 85 86 92 93 94 95 96 103
MAP                  : 103 104 105
MAPLOWER             : 106
MAS                  : 32
MASIGUAL             : 50
MAYORIGUALQUE        : 57
MAYORQUE             : 55
MENORIGUALQUE        : 58
MENORQUE             : 56
MENOS                : 33
MENOSIGUAL           : 51
MODIGUAL             : 53
MULT                 : 37
MULTIGUAL            : 54
NEW                  : 78 79 80 83 84 85 88 89 90 93 94 95 103 104 105
NOIGUALQUE           : 59
NULL                 : 47
NUMBER               : 43 79 84 89 94
OR                   : 62
PACKAGE              : 
POP                  : 99 100
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 99 100 101 102 106
PUSH                 : 101 102
RETURN               : 
SET                  : 106
STRING               : 44
SUPER                : 
SWITCH               : 71
SYMBOL               : 48
UNDEFINED            : 
VAR                  : 17 20 23 26 77 78 79 80 81 87 88 89 90 91 99 100 101 102 104
VARIABLE             : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 40 66 66 67 71 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 99 99 100 100 101 101 102 102 103 104 105
VOID                 : 
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

arreglo              : 9
asignacion           : 4 72
casos                : 74 75
comparacion          : 7 23 24 25 30 68 69 70 76
declaracion          : 3
empty                : 64
expresion            : 6 26 27 28 31 32 33 34 35 42
factor               : 37 38 39
final_linea          : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 103 104 105 106
funcion              : 5
if                   : 11 69
instrucciones        : 1 2
js                   : 2 66 67 68 69 70 70 71 76 0
lista                : 77 80 82 85 87 90 92 95 97 97 101 102
logica               : 8
map                  : 10
mapSet               : 16
ncasos               : 71 75
operadores_asig      : 29
operadores_comp      : 34
operadores_log       : 35
pop                  : 14
push                 : 15
switch               : 12
term                 : 32 33 34 35 36 37 38
tipos_datos          : 20 21 22 29 41 72 73 98 106 106
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    js                             shift and go to state 1
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 1

    (0) S' -> js .



state 2

    (1) js -> instrucciones .
    (2) js -> instrucciones . js
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    $end            reduce using rule 1 (js -> instrucciones .)
    DERLLAVE        reduce using rule 1 (js -> instrucciones .)
    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    instrucciones                  shift and go to state 2
    js                             shift and go to state 36
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 3

    (3) instrucciones -> declaracion .

    VAR             reduce using rule 3 (instrucciones -> declaracion .)
    LET             reduce using rule 3 (instrucciones -> declaracion .)
    CONST           reduce using rule 3 (instrucciones -> declaracion .)
    VARIABLE        reduce using rule 3 (instrucciones -> declaracion .)
    FUNCTION        reduce using rule 3 (instrucciones -> declaracion .)
    IF              reduce using rule 3 (instrucciones -> declaracion .)
    SWITCH          reduce using rule 3 (instrucciones -> declaracion .)
    WHILE           reduce using rule 3 (instrucciones -> declaracion .)
    MAPLOWER        reduce using rule 3 (instrucciones -> declaracion .)
    IZQPAREN        reduce using rule 3 (instrucciones -> declaracion .)
    NUMBER          reduce using rule 3 (instrucciones -> declaracion .)
    STRING          reduce using rule 3 (instrucciones -> declaracion .)
    BOOLEAN         reduce using rule 3 (instrucciones -> declaracion .)
    BIGINT          reduce using rule 3 (instrucciones -> declaracion .)
    NULL            reduce using rule 3 (instrucciones -> declaracion .)
    SYMBOL          reduce using rule 3 (instrucciones -> declaracion .)
    $end            reduce using rule 3 (instrucciones -> declaracion .)
    DERLLAVE        reduce using rule 3 (instrucciones -> declaracion .)


state 4

    (4) instrucciones -> asignacion .

    VAR             reduce using rule 4 (instrucciones -> asignacion .)
    LET             reduce using rule 4 (instrucciones -> asignacion .)
    CONST           reduce using rule 4 (instrucciones -> asignacion .)
    VARIABLE        reduce using rule 4 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion .)
    IF              reduce using rule 4 (instrucciones -> asignacion .)
    SWITCH          reduce using rule 4 (instrucciones -> asignacion .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion .)
    MAPLOWER        reduce using rule 4 (instrucciones -> asignacion .)
    IZQPAREN        reduce using rule 4 (instrucciones -> asignacion .)
    NUMBER          reduce using rule 4 (instrucciones -> asignacion .)
    STRING          reduce using rule 4 (instrucciones -> asignacion .)
    BOOLEAN         reduce using rule 4 (instrucciones -> asignacion .)
    BIGINT          reduce using rule 4 (instrucciones -> asignacion .)
    NULL            reduce using rule 4 (instrucciones -> asignacion .)
    SYMBOL          reduce using rule 4 (instrucciones -> asignacion .)
    $end            reduce using rule 4 (instrucciones -> asignacion .)
    DERLLAVE        reduce using rule 4 (instrucciones -> asignacion .)


state 5

    (5) instrucciones -> funcion .

    VAR             reduce using rule 5 (instrucciones -> funcion .)
    LET             reduce using rule 5 (instrucciones -> funcion .)
    CONST           reduce using rule 5 (instrucciones -> funcion .)
    VARIABLE        reduce using rule 5 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 5 (instrucciones -> funcion .)
    IF              reduce using rule 5 (instrucciones -> funcion .)
    SWITCH          reduce using rule 5 (instrucciones -> funcion .)
    WHILE           reduce using rule 5 (instrucciones -> funcion .)
    MAPLOWER        reduce using rule 5 (instrucciones -> funcion .)
    IZQPAREN        reduce using rule 5 (instrucciones -> funcion .)
    NUMBER          reduce using rule 5 (instrucciones -> funcion .)
    STRING          reduce using rule 5 (instrucciones -> funcion .)
    BOOLEAN         reduce using rule 5 (instrucciones -> funcion .)
    BIGINT          reduce using rule 5 (instrucciones -> funcion .)
    NULL            reduce using rule 5 (instrucciones -> funcion .)
    SYMBOL          reduce using rule 5 (instrucciones -> funcion .)
    $end            reduce using rule 5 (instrucciones -> funcion .)
    DERLLAVE        reduce using rule 5 (instrucciones -> funcion .)


state 6

    (6) instrucciones -> expresion .
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (34) comparacion -> expresion . operadores_comp term
    (35) logica -> expresion . operadores_log term
    (55) operadores_comp -> . MAYORQUE
    (56) operadores_comp -> . MENORQUE
    (57) operadores_comp -> . MAYORIGUALQUE
    (58) operadores_comp -> . MENORIGUALQUE
    (59) operadores_comp -> . NOIGUALQUE
    (60) operadores_comp -> . IGUALIGUAL
    (61) operadores_log -> . AND
    (62) operadores_log -> . OR

    VAR             reduce using rule 6 (instrucciones -> expresion .)
    LET             reduce using rule 6 (instrucciones -> expresion .)
    CONST           reduce using rule 6 (instrucciones -> expresion .)
    VARIABLE        reduce using rule 6 (instrucciones -> expresion .)
    FUNCTION        reduce using rule 6 (instrucciones -> expresion .)
    IF              reduce using rule 6 (instrucciones -> expresion .)
    SWITCH          reduce using rule 6 (instrucciones -> expresion .)
    WHILE           reduce using rule 6 (instrucciones -> expresion .)
    MAPLOWER        reduce using rule 6 (instrucciones -> expresion .)
    IZQPAREN        reduce using rule 6 (instrucciones -> expresion .)
    NUMBER          reduce using rule 6 (instrucciones -> expresion .)
    STRING          reduce using rule 6 (instrucciones -> expresion .)
    BOOLEAN         reduce using rule 6 (instrucciones -> expresion .)
    BIGINT          reduce using rule 6 (instrucciones -> expresion .)
    NULL            reduce using rule 6 (instrucciones -> expresion .)
    SYMBOL          reduce using rule 6 (instrucciones -> expresion .)
    $end            reduce using rule 6 (instrucciones -> expresion .)
    DERLLAVE        reduce using rule 6 (instrucciones -> expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MAYORQUE        shift and go to state 41
    MENORQUE        shift and go to state 42
    MAYORIGUALQUE   shift and go to state 43
    MENORIGUALQUE   shift and go to state 44
    NOIGUALQUE      shift and go to state 45
    IGUALIGUAL      shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

    operadores_comp                shift and go to state 39
    operadores_log                 shift and go to state 40

state 7

    (7) instrucciones -> comparacion .

    VAR             reduce using rule 7 (instrucciones -> comparacion .)
    LET             reduce using rule 7 (instrucciones -> comparacion .)
    CONST           reduce using rule 7 (instrucciones -> comparacion .)
    VARIABLE        reduce using rule 7 (instrucciones -> comparacion .)
    FUNCTION        reduce using rule 7 (instrucciones -> comparacion .)
    IF              reduce using rule 7 (instrucciones -> comparacion .)
    SWITCH          reduce using rule 7 (instrucciones -> comparacion .)
    WHILE           reduce using rule 7 (instrucciones -> comparacion .)
    MAPLOWER        reduce using rule 7 (instrucciones -> comparacion .)
    IZQPAREN        reduce using rule 7 (instrucciones -> comparacion .)
    NUMBER          reduce using rule 7 (instrucciones -> comparacion .)
    STRING          reduce using rule 7 (instrucciones -> comparacion .)
    BOOLEAN         reduce using rule 7 (instrucciones -> comparacion .)
    BIGINT          reduce using rule 7 (instrucciones -> comparacion .)
    NULL            reduce using rule 7 (instrucciones -> comparacion .)
    SYMBOL          reduce using rule 7 (instrucciones -> comparacion .)
    $end            reduce using rule 7 (instrucciones -> comparacion .)
    DERLLAVE        reduce using rule 7 (instrucciones -> comparacion .)


state 8

    (8) instrucciones -> logica .

    VAR             reduce using rule 8 (instrucciones -> logica .)
    LET             reduce using rule 8 (instrucciones -> logica .)
    CONST           reduce using rule 8 (instrucciones -> logica .)
    VARIABLE        reduce using rule 8 (instrucciones -> logica .)
    FUNCTION        reduce using rule 8 (instrucciones -> logica .)
    IF              reduce using rule 8 (instrucciones -> logica .)
    SWITCH          reduce using rule 8 (instrucciones -> logica .)
    WHILE           reduce using rule 8 (instrucciones -> logica .)
    MAPLOWER        reduce using rule 8 (instrucciones -> logica .)
    IZQPAREN        reduce using rule 8 (instrucciones -> logica .)
    NUMBER          reduce using rule 8 (instrucciones -> logica .)
    STRING          reduce using rule 8 (instrucciones -> logica .)
    BOOLEAN         reduce using rule 8 (instrucciones -> logica .)
    BIGINT          reduce using rule 8 (instrucciones -> logica .)
    NULL            reduce using rule 8 (instrucciones -> logica .)
    SYMBOL          reduce using rule 8 (instrucciones -> logica .)
    $end            reduce using rule 8 (instrucciones -> logica .)
    DERLLAVE        reduce using rule 8 (instrucciones -> logica .)


state 9

    (9) instrucciones -> arreglo .

    VAR             reduce using rule 9 (instrucciones -> arreglo .)
    LET             reduce using rule 9 (instrucciones -> arreglo .)
    CONST           reduce using rule 9 (instrucciones -> arreglo .)
    VARIABLE        reduce using rule 9 (instrucciones -> arreglo .)
    FUNCTION        reduce using rule 9 (instrucciones -> arreglo .)
    IF              reduce using rule 9 (instrucciones -> arreglo .)
    SWITCH          reduce using rule 9 (instrucciones -> arreglo .)
    WHILE           reduce using rule 9 (instrucciones -> arreglo .)
    MAPLOWER        reduce using rule 9 (instrucciones -> arreglo .)
    IZQPAREN        reduce using rule 9 (instrucciones -> arreglo .)
    NUMBER          reduce using rule 9 (instrucciones -> arreglo .)
    STRING          reduce using rule 9 (instrucciones -> arreglo .)
    BOOLEAN         reduce using rule 9 (instrucciones -> arreglo .)
    BIGINT          reduce using rule 9 (instrucciones -> arreglo .)
    NULL            reduce using rule 9 (instrucciones -> arreglo .)
    SYMBOL          reduce using rule 9 (instrucciones -> arreglo .)
    $end            reduce using rule 9 (instrucciones -> arreglo .)
    DERLLAVE        reduce using rule 9 (instrucciones -> arreglo .)


state 10

    (10) instrucciones -> map .

    VAR             reduce using rule 10 (instrucciones -> map .)
    LET             reduce using rule 10 (instrucciones -> map .)
    CONST           reduce using rule 10 (instrucciones -> map .)
    VARIABLE        reduce using rule 10 (instrucciones -> map .)
    FUNCTION        reduce using rule 10 (instrucciones -> map .)
    IF              reduce using rule 10 (instrucciones -> map .)
    SWITCH          reduce using rule 10 (instrucciones -> map .)
    WHILE           reduce using rule 10 (instrucciones -> map .)
    MAPLOWER        reduce using rule 10 (instrucciones -> map .)
    IZQPAREN        reduce using rule 10 (instrucciones -> map .)
    NUMBER          reduce using rule 10 (instrucciones -> map .)
    STRING          reduce using rule 10 (instrucciones -> map .)
    BOOLEAN         reduce using rule 10 (instrucciones -> map .)
    BIGINT          reduce using rule 10 (instrucciones -> map .)
    NULL            reduce using rule 10 (instrucciones -> map .)
    SYMBOL          reduce using rule 10 (instrucciones -> map .)
    $end            reduce using rule 10 (instrucciones -> map .)
    DERLLAVE        reduce using rule 10 (instrucciones -> map .)


state 11

    (11) instrucciones -> if .

    VAR             reduce using rule 11 (instrucciones -> if .)
    LET             reduce using rule 11 (instrucciones -> if .)
    CONST           reduce using rule 11 (instrucciones -> if .)
    VARIABLE        reduce using rule 11 (instrucciones -> if .)
    FUNCTION        reduce using rule 11 (instrucciones -> if .)
    IF              reduce using rule 11 (instrucciones -> if .)
    SWITCH          reduce using rule 11 (instrucciones -> if .)
    WHILE           reduce using rule 11 (instrucciones -> if .)
    MAPLOWER        reduce using rule 11 (instrucciones -> if .)
    IZQPAREN        reduce using rule 11 (instrucciones -> if .)
    NUMBER          reduce using rule 11 (instrucciones -> if .)
    STRING          reduce using rule 11 (instrucciones -> if .)
    BOOLEAN         reduce using rule 11 (instrucciones -> if .)
    BIGINT          reduce using rule 11 (instrucciones -> if .)
    NULL            reduce using rule 11 (instrucciones -> if .)
    SYMBOL          reduce using rule 11 (instrucciones -> if .)
    $end            reduce using rule 11 (instrucciones -> if .)
    DERLLAVE        reduce using rule 11 (instrucciones -> if .)


state 12

    (12) instrucciones -> switch .

    VAR             reduce using rule 12 (instrucciones -> switch .)
    LET             reduce using rule 12 (instrucciones -> switch .)
    CONST           reduce using rule 12 (instrucciones -> switch .)
    VARIABLE        reduce using rule 12 (instrucciones -> switch .)
    FUNCTION        reduce using rule 12 (instrucciones -> switch .)
    IF              reduce using rule 12 (instrucciones -> switch .)
    SWITCH          reduce using rule 12 (instrucciones -> switch .)
    WHILE           reduce using rule 12 (instrucciones -> switch .)
    MAPLOWER        reduce using rule 12 (instrucciones -> switch .)
    IZQPAREN        reduce using rule 12 (instrucciones -> switch .)
    NUMBER          reduce using rule 12 (instrucciones -> switch .)
    STRING          reduce using rule 12 (instrucciones -> switch .)
    BOOLEAN         reduce using rule 12 (instrucciones -> switch .)
    BIGINT          reduce using rule 12 (instrucciones -> switch .)
    NULL            reduce using rule 12 (instrucciones -> switch .)
    SYMBOL          reduce using rule 12 (instrucciones -> switch .)
    $end            reduce using rule 12 (instrucciones -> switch .)
    DERLLAVE        reduce using rule 12 (instrucciones -> switch .)


state 13

    (13) instrucciones -> while .

    VAR             reduce using rule 13 (instrucciones -> while .)
    LET             reduce using rule 13 (instrucciones -> while .)
    CONST           reduce using rule 13 (instrucciones -> while .)
    VARIABLE        reduce using rule 13 (instrucciones -> while .)
    FUNCTION        reduce using rule 13 (instrucciones -> while .)
    IF              reduce using rule 13 (instrucciones -> while .)
    SWITCH          reduce using rule 13 (instrucciones -> while .)
    WHILE           reduce using rule 13 (instrucciones -> while .)
    MAPLOWER        reduce using rule 13 (instrucciones -> while .)
    IZQPAREN        reduce using rule 13 (instrucciones -> while .)
    NUMBER          reduce using rule 13 (instrucciones -> while .)
    STRING          reduce using rule 13 (instrucciones -> while .)
    BOOLEAN         reduce using rule 13 (instrucciones -> while .)
    BIGINT          reduce using rule 13 (instrucciones -> while .)
    NULL            reduce using rule 13 (instrucciones -> while .)
    SYMBOL          reduce using rule 13 (instrucciones -> while .)
    $end            reduce using rule 13 (instrucciones -> while .)
    DERLLAVE        reduce using rule 13 (instrucciones -> while .)


state 14

    (14) instrucciones -> pop .

    VAR             reduce using rule 14 (instrucciones -> pop .)
    LET             reduce using rule 14 (instrucciones -> pop .)
    CONST           reduce using rule 14 (instrucciones -> pop .)
    VARIABLE        reduce using rule 14 (instrucciones -> pop .)
    FUNCTION        reduce using rule 14 (instrucciones -> pop .)
    IF              reduce using rule 14 (instrucciones -> pop .)
    SWITCH          reduce using rule 14 (instrucciones -> pop .)
    WHILE           reduce using rule 14 (instrucciones -> pop .)
    MAPLOWER        reduce using rule 14 (instrucciones -> pop .)
    IZQPAREN        reduce using rule 14 (instrucciones -> pop .)
    NUMBER          reduce using rule 14 (instrucciones -> pop .)
    STRING          reduce using rule 14 (instrucciones -> pop .)
    BOOLEAN         reduce using rule 14 (instrucciones -> pop .)
    BIGINT          reduce using rule 14 (instrucciones -> pop .)
    NULL            reduce using rule 14 (instrucciones -> pop .)
    SYMBOL          reduce using rule 14 (instrucciones -> pop .)
    $end            reduce using rule 14 (instrucciones -> pop .)
    DERLLAVE        reduce using rule 14 (instrucciones -> pop .)


state 15

    (15) instrucciones -> push .

    VAR             reduce using rule 15 (instrucciones -> push .)
    LET             reduce using rule 15 (instrucciones -> push .)
    CONST           reduce using rule 15 (instrucciones -> push .)
    VARIABLE        reduce using rule 15 (instrucciones -> push .)
    FUNCTION        reduce using rule 15 (instrucciones -> push .)
    IF              reduce using rule 15 (instrucciones -> push .)
    SWITCH          reduce using rule 15 (instrucciones -> push .)
    WHILE           reduce using rule 15 (instrucciones -> push .)
    MAPLOWER        reduce using rule 15 (instrucciones -> push .)
    IZQPAREN        reduce using rule 15 (instrucciones -> push .)
    NUMBER          reduce using rule 15 (instrucciones -> push .)
    STRING          reduce using rule 15 (instrucciones -> push .)
    BOOLEAN         reduce using rule 15 (instrucciones -> push .)
    BIGINT          reduce using rule 15 (instrucciones -> push .)
    NULL            reduce using rule 15 (instrucciones -> push .)
    SYMBOL          reduce using rule 15 (instrucciones -> push .)
    $end            reduce using rule 15 (instrucciones -> push .)
    DERLLAVE        reduce using rule 15 (instrucciones -> push .)


state 16

    (16) instrucciones -> mapSet .

    VAR             reduce using rule 16 (instrucciones -> mapSet .)
    LET             reduce using rule 16 (instrucciones -> mapSet .)
    CONST           reduce using rule 16 (instrucciones -> mapSet .)
    VARIABLE        reduce using rule 16 (instrucciones -> mapSet .)
    FUNCTION        reduce using rule 16 (instrucciones -> mapSet .)
    IF              reduce using rule 16 (instrucciones -> mapSet .)
    SWITCH          reduce using rule 16 (instrucciones -> mapSet .)
    WHILE           reduce using rule 16 (instrucciones -> mapSet .)
    MAPLOWER        reduce using rule 16 (instrucciones -> mapSet .)
    IZQPAREN        reduce using rule 16 (instrucciones -> mapSet .)
    NUMBER          reduce using rule 16 (instrucciones -> mapSet .)
    STRING          reduce using rule 16 (instrucciones -> mapSet .)
    BOOLEAN         reduce using rule 16 (instrucciones -> mapSet .)
    BIGINT          reduce using rule 16 (instrucciones -> mapSet .)
    NULL            reduce using rule 16 (instrucciones -> mapSet .)
    SYMBOL          reduce using rule 16 (instrucciones -> mapSet .)
    $end            reduce using rule 16 (instrucciones -> mapSet .)
    DERLLAVE        reduce using rule 16 (instrucciones -> mapSet .)


state 17

    (17) declaracion -> VAR . VARIABLE final_linea
    (20) declaracion -> VAR . VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> VAR . VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> VAR . VARIABLE IGUAL expresion final_linea
    (77) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> VAR . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> VAR . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (104) map -> VAR . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (99) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> VAR . VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> VAR . VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN

    VARIABLE        shift and go to state 49


state 18

    (29) asignacion -> VARIABLE . operadores_asig tipos_datos final_linea
    (30) asignacion -> VARIABLE . IGUAL comparacion final_linea
    (31) asignacion -> VARIABLE . IGUAL expresion final_linea
    (40) factor -> VARIABLE .
    (49) operadores_asig -> . IGUAL
    (50) operadores_asig -> . MASIGUAL
    (51) operadores_asig -> . MENOSIGUAL
    (52) operadores_asig -> . DIVIGUAL
    (53) operadores_asig -> . MODIGUAL
    (54) operadores_asig -> . MULTIGUAL

    IGUAL           shift and go to state 51
    MULT            reduce using rule 40 (factor -> VARIABLE .)
    DIV             reduce using rule 40 (factor -> VARIABLE .)
    MAS             reduce using rule 40 (factor -> VARIABLE .)
    MENOS           reduce using rule 40 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 40 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 40 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 40 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 40 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 40 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 40 (factor -> VARIABLE .)
    AND             reduce using rule 40 (factor -> VARIABLE .)
    OR              reduce using rule 40 (factor -> VARIABLE .)
    VAR             reduce using rule 40 (factor -> VARIABLE .)
    LET             reduce using rule 40 (factor -> VARIABLE .)
    CONST           reduce using rule 40 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 40 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 40 (factor -> VARIABLE .)
    IF              reduce using rule 40 (factor -> VARIABLE .)
    SWITCH          reduce using rule 40 (factor -> VARIABLE .)
    WHILE           reduce using rule 40 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 40 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 40 (factor -> VARIABLE .)
    NUMBER          reduce using rule 40 (factor -> VARIABLE .)
    STRING          reduce using rule 40 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 40 (factor -> VARIABLE .)
    BIGINT          reduce using rule 40 (factor -> VARIABLE .)
    NULL            reduce using rule 40 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 40 (factor -> VARIABLE .)
    $end            reduce using rule 40 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 40 (factor -> VARIABLE .)
    MASIGUAL        shift and go to state 52
    MENOSIGUAL      shift and go to state 53
    DIVIGUAL        shift and go to state 54
    MODIGUAL        shift and go to state 55
    MULTIGUAL       shift and go to state 56

    operadores_asig                shift and go to state 50

state 19

    (18) declaracion -> LET . VARIABLE final_linea
    (21) declaracion -> LET . VARIABLE IGUAL tipos_datos final_linea
    (24) declaracion -> LET . VARIABLE IGUAL comparacion final_linea
    (27) declaracion -> LET . VARIABLE IGUAL expresion final_linea
    (82) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (92) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> LET . VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> LET . VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> LET . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 57


state 20

    (19) declaracion -> CONST . VARIABLE final_linea
    (22) declaracion -> CONST . VARIABLE IGUAL tipos_datos final_linea
    (25) declaracion -> CONST . VARIABLE IGUAL comparacion final_linea
    (28) declaracion -> CONST . VARIABLE IGUAL expresion final_linea
    (105) map -> CONST . VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea

    VARIABLE        shift and go to state 58


state 21

    (41) factor -> tipos_datos .

    MULT            reduce using rule 41 (factor -> tipos_datos .)
    DIV             reduce using rule 41 (factor -> tipos_datos .)
    MAS             reduce using rule 41 (factor -> tipos_datos .)
    MENOS           reduce using rule 41 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 41 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 41 (factor -> tipos_datos .)
    AND             reduce using rule 41 (factor -> tipos_datos .)
    OR              reduce using rule 41 (factor -> tipos_datos .)
    VAR             reduce using rule 41 (factor -> tipos_datos .)
    LET             reduce using rule 41 (factor -> tipos_datos .)
    CONST           reduce using rule 41 (factor -> tipos_datos .)
    VARIABLE        reduce using rule 41 (factor -> tipos_datos .)
    FUNCTION        reduce using rule 41 (factor -> tipos_datos .)
    IF              reduce using rule 41 (factor -> tipos_datos .)
    SWITCH          reduce using rule 41 (factor -> tipos_datos .)
    WHILE           reduce using rule 41 (factor -> tipos_datos .)
    MAPLOWER        reduce using rule 41 (factor -> tipos_datos .)
    IZQPAREN        reduce using rule 41 (factor -> tipos_datos .)
    NUMBER          reduce using rule 41 (factor -> tipos_datos .)
    STRING          reduce using rule 41 (factor -> tipos_datos .)
    BOOLEAN         reduce using rule 41 (factor -> tipos_datos .)
    BIGINT          reduce using rule 41 (factor -> tipos_datos .)
    NULL            reduce using rule 41 (factor -> tipos_datos .)
    SYMBOL          reduce using rule 41 (factor -> tipos_datos .)
    $end            reduce using rule 41 (factor -> tipos_datos .)
    DERLLAVE        reduce using rule 41 (factor -> tipos_datos .)
    DERPAREN        reduce using rule 41 (factor -> tipos_datos .)
    FINALDELINEA    reduce using rule 41 (factor -> tipos_datos .)
    BREAK           reduce using rule 41 (factor -> tipos_datos .)


state 22

    (66) funcion -> FUNCTION . VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> FUNCTION . VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 59


state 23

    (42) factor -> IZQPAREN . expresion DERPAREN
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    expresion                      shift and go to state 60
    term                           shift and go to state 24
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 24

    (36) expresion -> term .
    (37) term -> term . MULT factor
    (38) term -> term . DIV factor

    MAS             reduce using rule 36 (expresion -> term .)
    MENOS           reduce using rule 36 (expresion -> term .)
    MAYORQUE        reduce using rule 36 (expresion -> term .)
    MENORQUE        reduce using rule 36 (expresion -> term .)
    MAYORIGUALQUE   reduce using rule 36 (expresion -> term .)
    MENORIGUALQUE   reduce using rule 36 (expresion -> term .)
    NOIGUALQUE      reduce using rule 36 (expresion -> term .)
    IGUALIGUAL      reduce using rule 36 (expresion -> term .)
    AND             reduce using rule 36 (expresion -> term .)
    OR              reduce using rule 36 (expresion -> term .)
    VAR             reduce using rule 36 (expresion -> term .)
    LET             reduce using rule 36 (expresion -> term .)
    CONST           reduce using rule 36 (expresion -> term .)
    VARIABLE        reduce using rule 36 (expresion -> term .)
    FUNCTION        reduce using rule 36 (expresion -> term .)
    IF              reduce using rule 36 (expresion -> term .)
    SWITCH          reduce using rule 36 (expresion -> term .)
    WHILE           reduce using rule 36 (expresion -> term .)
    MAPLOWER        reduce using rule 36 (expresion -> term .)
    IZQPAREN        reduce using rule 36 (expresion -> term .)
    NUMBER          reduce using rule 36 (expresion -> term .)
    STRING          reduce using rule 36 (expresion -> term .)
    BOOLEAN         reduce using rule 36 (expresion -> term .)
    BIGINT          reduce using rule 36 (expresion -> term .)
    NULL            reduce using rule 36 (expresion -> term .)
    SYMBOL          reduce using rule 36 (expresion -> term .)
    $end            reduce using rule 36 (expresion -> term .)
    DERLLAVE        reduce using rule 36 (expresion -> term .)
    DERPAREN        reduce using rule 36 (expresion -> term .)
    FINALDELINEA    reduce using rule 36 (expresion -> term .)
    BREAK           reduce using rule 36 (expresion -> term .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63


state 25

    (43) tipos_datos -> NUMBER .

    MULT            reduce using rule 43 (tipos_datos -> NUMBER .)
    DIV             reduce using rule 43 (tipos_datos -> NUMBER .)
    MAS             reduce using rule 43 (tipos_datos -> NUMBER .)
    MENOS           reduce using rule 43 (tipos_datos -> NUMBER .)
    MAYORQUE        reduce using rule 43 (tipos_datos -> NUMBER .)
    MENORQUE        reduce using rule 43 (tipos_datos -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 43 (tipos_datos -> NUMBER .)
    MENORIGUALQUE   reduce using rule 43 (tipos_datos -> NUMBER .)
    NOIGUALQUE      reduce using rule 43 (tipos_datos -> NUMBER .)
    IGUALIGUAL      reduce using rule 43 (tipos_datos -> NUMBER .)
    AND             reduce using rule 43 (tipos_datos -> NUMBER .)
    OR              reduce using rule 43 (tipos_datos -> NUMBER .)
    VAR             reduce using rule 43 (tipos_datos -> NUMBER .)
    LET             reduce using rule 43 (tipos_datos -> NUMBER .)
    CONST           reduce using rule 43 (tipos_datos -> NUMBER .)
    VARIABLE        reduce using rule 43 (tipos_datos -> NUMBER .)
    FUNCTION        reduce using rule 43 (tipos_datos -> NUMBER .)
    IF              reduce using rule 43 (tipos_datos -> NUMBER .)
    SWITCH          reduce using rule 43 (tipos_datos -> NUMBER .)
    WHILE           reduce using rule 43 (tipos_datos -> NUMBER .)
    MAPLOWER        reduce using rule 43 (tipos_datos -> NUMBER .)
    IZQPAREN        reduce using rule 43 (tipos_datos -> NUMBER .)
    NUMBER          reduce using rule 43 (tipos_datos -> NUMBER .)
    STRING          reduce using rule 43 (tipos_datos -> NUMBER .)
    BOOLEAN         reduce using rule 43 (tipos_datos -> NUMBER .)
    BIGINT          reduce using rule 43 (tipos_datos -> NUMBER .)
    NULL            reduce using rule 43 (tipos_datos -> NUMBER .)
    SYMBOL          reduce using rule 43 (tipos_datos -> NUMBER .)
    $end            reduce using rule 43 (tipos_datos -> NUMBER .)
    DERLLAVE        reduce using rule 43 (tipos_datos -> NUMBER .)
    DERPAREN        reduce using rule 43 (tipos_datos -> NUMBER .)
    FINALDELINEA    reduce using rule 43 (tipos_datos -> NUMBER .)
    BREAK           reduce using rule 43 (tipos_datos -> NUMBER .)
    DERCORCHETE     reduce using rule 43 (tipos_datos -> NUMBER .)
    COMA            reduce using rule 43 (tipos_datos -> NUMBER .)
    DOSPUNTOS       reduce using rule 43 (tipos_datos -> NUMBER .)


state 26

    (68) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> IF . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 64


state 27

    (71) switch -> SWITCH . IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQPAREN        shift and go to state 65


state 28

    (76) while -> WHILE . IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 66


state 29

    (106) mapSet -> MAPLOWER . PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    PUNTO           shift and go to state 67


state 30

    (39) term -> factor .

    MULT            reduce using rule 39 (term -> factor .)
    DIV             reduce using rule 39 (term -> factor .)
    MAS             reduce using rule 39 (term -> factor .)
    MENOS           reduce using rule 39 (term -> factor .)
    MAYORQUE        reduce using rule 39 (term -> factor .)
    MENORQUE        reduce using rule 39 (term -> factor .)
    MAYORIGUALQUE   reduce using rule 39 (term -> factor .)
    MENORIGUALQUE   reduce using rule 39 (term -> factor .)
    NOIGUALQUE      reduce using rule 39 (term -> factor .)
    IGUALIGUAL      reduce using rule 39 (term -> factor .)
    AND             reduce using rule 39 (term -> factor .)
    OR              reduce using rule 39 (term -> factor .)
    VAR             reduce using rule 39 (term -> factor .)
    LET             reduce using rule 39 (term -> factor .)
    CONST           reduce using rule 39 (term -> factor .)
    VARIABLE        reduce using rule 39 (term -> factor .)
    FUNCTION        reduce using rule 39 (term -> factor .)
    IF              reduce using rule 39 (term -> factor .)
    SWITCH          reduce using rule 39 (term -> factor .)
    WHILE           reduce using rule 39 (term -> factor .)
    MAPLOWER        reduce using rule 39 (term -> factor .)
    IZQPAREN        reduce using rule 39 (term -> factor .)
    NUMBER          reduce using rule 39 (term -> factor .)
    STRING          reduce using rule 39 (term -> factor .)
    BOOLEAN         reduce using rule 39 (term -> factor .)
    BIGINT          reduce using rule 39 (term -> factor .)
    NULL            reduce using rule 39 (term -> factor .)
    SYMBOL          reduce using rule 39 (term -> factor .)
    $end            reduce using rule 39 (term -> factor .)
    DERLLAVE        reduce using rule 39 (term -> factor .)
    DERPAREN        reduce using rule 39 (term -> factor .)
    FINALDELINEA    reduce using rule 39 (term -> factor .)
    BREAK           reduce using rule 39 (term -> factor .)


state 31

    (44) tipos_datos -> STRING .

    MULT            reduce using rule 44 (tipos_datos -> STRING .)
    DIV             reduce using rule 44 (tipos_datos -> STRING .)
    MAS             reduce using rule 44 (tipos_datos -> STRING .)
    MENOS           reduce using rule 44 (tipos_datos -> STRING .)
    MAYORQUE        reduce using rule 44 (tipos_datos -> STRING .)
    MENORQUE        reduce using rule 44 (tipos_datos -> STRING .)
    MAYORIGUALQUE   reduce using rule 44 (tipos_datos -> STRING .)
    MENORIGUALQUE   reduce using rule 44 (tipos_datos -> STRING .)
    NOIGUALQUE      reduce using rule 44 (tipos_datos -> STRING .)
    IGUALIGUAL      reduce using rule 44 (tipos_datos -> STRING .)
    AND             reduce using rule 44 (tipos_datos -> STRING .)
    OR              reduce using rule 44 (tipos_datos -> STRING .)
    VAR             reduce using rule 44 (tipos_datos -> STRING .)
    LET             reduce using rule 44 (tipos_datos -> STRING .)
    CONST           reduce using rule 44 (tipos_datos -> STRING .)
    VARIABLE        reduce using rule 44 (tipos_datos -> STRING .)
    FUNCTION        reduce using rule 44 (tipos_datos -> STRING .)
    IF              reduce using rule 44 (tipos_datos -> STRING .)
    SWITCH          reduce using rule 44 (tipos_datos -> STRING .)
    WHILE           reduce using rule 44 (tipos_datos -> STRING .)
    MAPLOWER        reduce using rule 44 (tipos_datos -> STRING .)
    IZQPAREN        reduce using rule 44 (tipos_datos -> STRING .)
    NUMBER          reduce using rule 44 (tipos_datos -> STRING .)
    STRING          reduce using rule 44 (tipos_datos -> STRING .)
    BOOLEAN         reduce using rule 44 (tipos_datos -> STRING .)
    BIGINT          reduce using rule 44 (tipos_datos -> STRING .)
    NULL            reduce using rule 44 (tipos_datos -> STRING .)
    SYMBOL          reduce using rule 44 (tipos_datos -> STRING .)
    $end            reduce using rule 44 (tipos_datos -> STRING .)
    DERLLAVE        reduce using rule 44 (tipos_datos -> STRING .)
    DERPAREN        reduce using rule 44 (tipos_datos -> STRING .)
    FINALDELINEA    reduce using rule 44 (tipos_datos -> STRING .)
    BREAK           reduce using rule 44 (tipos_datos -> STRING .)
    DERCORCHETE     reduce using rule 44 (tipos_datos -> STRING .)
    COMA            reduce using rule 44 (tipos_datos -> STRING .)
    DOSPUNTOS       reduce using rule 44 (tipos_datos -> STRING .)


state 32

    (45) tipos_datos -> BOOLEAN .

    MULT            reduce using rule 45 (tipos_datos -> BOOLEAN .)
    DIV             reduce using rule 45 (tipos_datos -> BOOLEAN .)
    MAS             reduce using rule 45 (tipos_datos -> BOOLEAN .)
    MENOS           reduce using rule 45 (tipos_datos -> BOOLEAN .)
    MAYORQUE        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    MENORQUE        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    MAYORIGUALQUE   reduce using rule 45 (tipos_datos -> BOOLEAN .)
    MENORIGUALQUE   reduce using rule 45 (tipos_datos -> BOOLEAN .)
    NOIGUALQUE      reduce using rule 45 (tipos_datos -> BOOLEAN .)
    IGUALIGUAL      reduce using rule 45 (tipos_datos -> BOOLEAN .)
    AND             reduce using rule 45 (tipos_datos -> BOOLEAN .)
    OR              reduce using rule 45 (tipos_datos -> BOOLEAN .)
    VAR             reduce using rule 45 (tipos_datos -> BOOLEAN .)
    LET             reduce using rule 45 (tipos_datos -> BOOLEAN .)
    CONST           reduce using rule 45 (tipos_datos -> BOOLEAN .)
    VARIABLE        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    FUNCTION        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    IF              reduce using rule 45 (tipos_datos -> BOOLEAN .)
    SWITCH          reduce using rule 45 (tipos_datos -> BOOLEAN .)
    WHILE           reduce using rule 45 (tipos_datos -> BOOLEAN .)
    MAPLOWER        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    IZQPAREN        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    NUMBER          reduce using rule 45 (tipos_datos -> BOOLEAN .)
    STRING          reduce using rule 45 (tipos_datos -> BOOLEAN .)
    BOOLEAN         reduce using rule 45 (tipos_datos -> BOOLEAN .)
    BIGINT          reduce using rule 45 (tipos_datos -> BOOLEAN .)
    NULL            reduce using rule 45 (tipos_datos -> BOOLEAN .)
    SYMBOL          reduce using rule 45 (tipos_datos -> BOOLEAN .)
    $end            reduce using rule 45 (tipos_datos -> BOOLEAN .)
    DERLLAVE        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    DERPAREN        reduce using rule 45 (tipos_datos -> BOOLEAN .)
    FINALDELINEA    reduce using rule 45 (tipos_datos -> BOOLEAN .)
    BREAK           reduce using rule 45 (tipos_datos -> BOOLEAN .)
    DERCORCHETE     reduce using rule 45 (tipos_datos -> BOOLEAN .)
    COMA            reduce using rule 45 (tipos_datos -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 45 (tipos_datos -> BOOLEAN .)


state 33

    (46) tipos_datos -> BIGINT .

    MULT            reduce using rule 46 (tipos_datos -> BIGINT .)
    DIV             reduce using rule 46 (tipos_datos -> BIGINT .)
    MAS             reduce using rule 46 (tipos_datos -> BIGINT .)
    MENOS           reduce using rule 46 (tipos_datos -> BIGINT .)
    MAYORQUE        reduce using rule 46 (tipos_datos -> BIGINT .)
    MENORQUE        reduce using rule 46 (tipos_datos -> BIGINT .)
    MAYORIGUALQUE   reduce using rule 46 (tipos_datos -> BIGINT .)
    MENORIGUALQUE   reduce using rule 46 (tipos_datos -> BIGINT .)
    NOIGUALQUE      reduce using rule 46 (tipos_datos -> BIGINT .)
    IGUALIGUAL      reduce using rule 46 (tipos_datos -> BIGINT .)
    AND             reduce using rule 46 (tipos_datos -> BIGINT .)
    OR              reduce using rule 46 (tipos_datos -> BIGINT .)
    VAR             reduce using rule 46 (tipos_datos -> BIGINT .)
    LET             reduce using rule 46 (tipos_datos -> BIGINT .)
    CONST           reduce using rule 46 (tipos_datos -> BIGINT .)
    VARIABLE        reduce using rule 46 (tipos_datos -> BIGINT .)
    FUNCTION        reduce using rule 46 (tipos_datos -> BIGINT .)
    IF              reduce using rule 46 (tipos_datos -> BIGINT .)
    SWITCH          reduce using rule 46 (tipos_datos -> BIGINT .)
    WHILE           reduce using rule 46 (tipos_datos -> BIGINT .)
    MAPLOWER        reduce using rule 46 (tipos_datos -> BIGINT .)
    IZQPAREN        reduce using rule 46 (tipos_datos -> BIGINT .)
    NUMBER          reduce using rule 46 (tipos_datos -> BIGINT .)
    STRING          reduce using rule 46 (tipos_datos -> BIGINT .)
    BOOLEAN         reduce using rule 46 (tipos_datos -> BIGINT .)
    BIGINT          reduce using rule 46 (tipos_datos -> BIGINT .)
    NULL            reduce using rule 46 (tipos_datos -> BIGINT .)
    SYMBOL          reduce using rule 46 (tipos_datos -> BIGINT .)
    $end            reduce using rule 46 (tipos_datos -> BIGINT .)
    DERLLAVE        reduce using rule 46 (tipos_datos -> BIGINT .)
    DERPAREN        reduce using rule 46 (tipos_datos -> BIGINT .)
    FINALDELINEA    reduce using rule 46 (tipos_datos -> BIGINT .)
    BREAK           reduce using rule 46 (tipos_datos -> BIGINT .)
    DERCORCHETE     reduce using rule 46 (tipos_datos -> BIGINT .)
    COMA            reduce using rule 46 (tipos_datos -> BIGINT .)
    DOSPUNTOS       reduce using rule 46 (tipos_datos -> BIGINT .)


state 34

    (47) tipos_datos -> NULL .

    MULT            reduce using rule 47 (tipos_datos -> NULL .)
    DIV             reduce using rule 47 (tipos_datos -> NULL .)
    MAS             reduce using rule 47 (tipos_datos -> NULL .)
    MENOS           reduce using rule 47 (tipos_datos -> NULL .)
    MAYORQUE        reduce using rule 47 (tipos_datos -> NULL .)
    MENORQUE        reduce using rule 47 (tipos_datos -> NULL .)
    MAYORIGUALQUE   reduce using rule 47 (tipos_datos -> NULL .)
    MENORIGUALQUE   reduce using rule 47 (tipos_datos -> NULL .)
    NOIGUALQUE      reduce using rule 47 (tipos_datos -> NULL .)
    IGUALIGUAL      reduce using rule 47 (tipos_datos -> NULL .)
    AND             reduce using rule 47 (tipos_datos -> NULL .)
    OR              reduce using rule 47 (tipos_datos -> NULL .)
    VAR             reduce using rule 47 (tipos_datos -> NULL .)
    LET             reduce using rule 47 (tipos_datos -> NULL .)
    CONST           reduce using rule 47 (tipos_datos -> NULL .)
    VARIABLE        reduce using rule 47 (tipos_datos -> NULL .)
    FUNCTION        reduce using rule 47 (tipos_datos -> NULL .)
    IF              reduce using rule 47 (tipos_datos -> NULL .)
    SWITCH          reduce using rule 47 (tipos_datos -> NULL .)
    WHILE           reduce using rule 47 (tipos_datos -> NULL .)
    MAPLOWER        reduce using rule 47 (tipos_datos -> NULL .)
    IZQPAREN        reduce using rule 47 (tipos_datos -> NULL .)
    NUMBER          reduce using rule 47 (tipos_datos -> NULL .)
    STRING          reduce using rule 47 (tipos_datos -> NULL .)
    BOOLEAN         reduce using rule 47 (tipos_datos -> NULL .)
    BIGINT          reduce using rule 47 (tipos_datos -> NULL .)
    NULL            reduce using rule 47 (tipos_datos -> NULL .)
    SYMBOL          reduce using rule 47 (tipos_datos -> NULL .)
    $end            reduce using rule 47 (tipos_datos -> NULL .)
    DERLLAVE        reduce using rule 47 (tipos_datos -> NULL .)
    DERPAREN        reduce using rule 47 (tipos_datos -> NULL .)
    FINALDELINEA    reduce using rule 47 (tipos_datos -> NULL .)
    BREAK           reduce using rule 47 (tipos_datos -> NULL .)
    DERCORCHETE     reduce using rule 47 (tipos_datos -> NULL .)
    COMA            reduce using rule 47 (tipos_datos -> NULL .)
    DOSPUNTOS       reduce using rule 47 (tipos_datos -> NULL .)


state 35

    (48) tipos_datos -> SYMBOL .

    MULT            reduce using rule 48 (tipos_datos -> SYMBOL .)
    DIV             reduce using rule 48 (tipos_datos -> SYMBOL .)
    MAS             reduce using rule 48 (tipos_datos -> SYMBOL .)
    MENOS           reduce using rule 48 (tipos_datos -> SYMBOL .)
    MAYORQUE        reduce using rule 48 (tipos_datos -> SYMBOL .)
    MENORQUE        reduce using rule 48 (tipos_datos -> SYMBOL .)
    MAYORIGUALQUE   reduce using rule 48 (tipos_datos -> SYMBOL .)
    MENORIGUALQUE   reduce using rule 48 (tipos_datos -> SYMBOL .)
    NOIGUALQUE      reduce using rule 48 (tipos_datos -> SYMBOL .)
    IGUALIGUAL      reduce using rule 48 (tipos_datos -> SYMBOL .)
    AND             reduce using rule 48 (tipos_datos -> SYMBOL .)
    OR              reduce using rule 48 (tipos_datos -> SYMBOL .)
    VAR             reduce using rule 48 (tipos_datos -> SYMBOL .)
    LET             reduce using rule 48 (tipos_datos -> SYMBOL .)
    CONST           reduce using rule 48 (tipos_datos -> SYMBOL .)
    VARIABLE        reduce using rule 48 (tipos_datos -> SYMBOL .)
    FUNCTION        reduce using rule 48 (tipos_datos -> SYMBOL .)
    IF              reduce using rule 48 (tipos_datos -> SYMBOL .)
    SWITCH          reduce using rule 48 (tipos_datos -> SYMBOL .)
    WHILE           reduce using rule 48 (tipos_datos -> SYMBOL .)
    MAPLOWER        reduce using rule 48 (tipos_datos -> SYMBOL .)
    IZQPAREN        reduce using rule 48 (tipos_datos -> SYMBOL .)
    NUMBER          reduce using rule 48 (tipos_datos -> SYMBOL .)
    STRING          reduce using rule 48 (tipos_datos -> SYMBOL .)
    BOOLEAN         reduce using rule 48 (tipos_datos -> SYMBOL .)
    BIGINT          reduce using rule 48 (tipos_datos -> SYMBOL .)
    NULL            reduce using rule 48 (tipos_datos -> SYMBOL .)
    SYMBOL          reduce using rule 48 (tipos_datos -> SYMBOL .)
    $end            reduce using rule 48 (tipos_datos -> SYMBOL .)
    DERLLAVE        reduce using rule 48 (tipos_datos -> SYMBOL .)
    DERPAREN        reduce using rule 48 (tipos_datos -> SYMBOL .)
    FINALDELINEA    reduce using rule 48 (tipos_datos -> SYMBOL .)
    BREAK           reduce using rule 48 (tipos_datos -> SYMBOL .)
    DERCORCHETE     reduce using rule 48 (tipos_datos -> SYMBOL .)
    COMA            reduce using rule 48 (tipos_datos -> SYMBOL .)
    DOSPUNTOS       reduce using rule 48 (tipos_datos -> SYMBOL .)


state 36

    (2) js -> instrucciones js .

    $end            reduce using rule 2 (js -> instrucciones js .)
    DERLLAVE        reduce using rule 2 (js -> instrucciones js .)


state 37

    (32) expresion -> expresion MAS . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    term                           shift and go to state 68
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 38

    (33) expresion -> expresion MENOS . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    term                           shift and go to state 69
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 39

    (34) comparacion -> expresion operadores_comp . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    term                           shift and go to state 70
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 40

    (35) logica -> expresion operadores_log . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    term                           shift and go to state 71
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 41

    (55) operadores_comp -> MAYORQUE .

    VARIABLE        reduce using rule 55 (operadores_comp -> MAYORQUE .)
    IZQPAREN        reduce using rule 55 (operadores_comp -> MAYORQUE .)
    NUMBER          reduce using rule 55 (operadores_comp -> MAYORQUE .)
    STRING          reduce using rule 55 (operadores_comp -> MAYORQUE .)
    BOOLEAN         reduce using rule 55 (operadores_comp -> MAYORQUE .)
    BIGINT          reduce using rule 55 (operadores_comp -> MAYORQUE .)
    NULL            reduce using rule 55 (operadores_comp -> MAYORQUE .)
    SYMBOL          reduce using rule 55 (operadores_comp -> MAYORQUE .)


state 42

    (56) operadores_comp -> MENORQUE .

    VARIABLE        reduce using rule 56 (operadores_comp -> MENORQUE .)
    IZQPAREN        reduce using rule 56 (operadores_comp -> MENORQUE .)
    NUMBER          reduce using rule 56 (operadores_comp -> MENORQUE .)
    STRING          reduce using rule 56 (operadores_comp -> MENORQUE .)
    BOOLEAN         reduce using rule 56 (operadores_comp -> MENORQUE .)
    BIGINT          reduce using rule 56 (operadores_comp -> MENORQUE .)
    NULL            reduce using rule 56 (operadores_comp -> MENORQUE .)
    SYMBOL          reduce using rule 56 (operadores_comp -> MENORQUE .)


state 43

    (57) operadores_comp -> MAYORIGUALQUE .

    VARIABLE        reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)
    IZQPAREN        reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)
    NUMBER          reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)
    STRING          reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)
    BIGINT          reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)
    NULL            reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)
    SYMBOL          reduce using rule 57 (operadores_comp -> MAYORIGUALQUE .)


state 44

    (58) operadores_comp -> MENORIGUALQUE .

    VARIABLE        reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)
    IZQPAREN        reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)
    NUMBER          reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)
    STRING          reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)
    BIGINT          reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)
    NULL            reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)
    SYMBOL          reduce using rule 58 (operadores_comp -> MENORIGUALQUE .)


state 45

    (59) operadores_comp -> NOIGUALQUE .

    VARIABLE        reduce using rule 59 (operadores_comp -> NOIGUALQUE .)
    IZQPAREN        reduce using rule 59 (operadores_comp -> NOIGUALQUE .)
    NUMBER          reduce using rule 59 (operadores_comp -> NOIGUALQUE .)
    STRING          reduce using rule 59 (operadores_comp -> NOIGUALQUE .)
    BOOLEAN         reduce using rule 59 (operadores_comp -> NOIGUALQUE .)
    BIGINT          reduce using rule 59 (operadores_comp -> NOIGUALQUE .)
    NULL            reduce using rule 59 (operadores_comp -> NOIGUALQUE .)
    SYMBOL          reduce using rule 59 (operadores_comp -> NOIGUALQUE .)


state 46

    (60) operadores_comp -> IGUALIGUAL .

    VARIABLE        reduce using rule 60 (operadores_comp -> IGUALIGUAL .)
    IZQPAREN        reduce using rule 60 (operadores_comp -> IGUALIGUAL .)
    NUMBER          reduce using rule 60 (operadores_comp -> IGUALIGUAL .)
    STRING          reduce using rule 60 (operadores_comp -> IGUALIGUAL .)
    BOOLEAN         reduce using rule 60 (operadores_comp -> IGUALIGUAL .)
    BIGINT          reduce using rule 60 (operadores_comp -> IGUALIGUAL .)
    NULL            reduce using rule 60 (operadores_comp -> IGUALIGUAL .)
    SYMBOL          reduce using rule 60 (operadores_comp -> IGUALIGUAL .)


state 47

    (61) operadores_log -> AND .

    VARIABLE        reduce using rule 61 (operadores_log -> AND .)
    IZQPAREN        reduce using rule 61 (operadores_log -> AND .)
    NUMBER          reduce using rule 61 (operadores_log -> AND .)
    STRING          reduce using rule 61 (operadores_log -> AND .)
    BOOLEAN         reduce using rule 61 (operadores_log -> AND .)
    BIGINT          reduce using rule 61 (operadores_log -> AND .)
    NULL            reduce using rule 61 (operadores_log -> AND .)
    SYMBOL          reduce using rule 61 (operadores_log -> AND .)


state 48

    (62) operadores_log -> OR .

    VARIABLE        reduce using rule 62 (operadores_log -> OR .)
    IZQPAREN        reduce using rule 62 (operadores_log -> OR .)
    NUMBER          reduce using rule 62 (operadores_log -> OR .)
    STRING          reduce using rule 62 (operadores_log -> OR .)
    BOOLEAN         reduce using rule 62 (operadores_log -> OR .)
    BIGINT          reduce using rule 62 (operadores_log -> OR .)
    NULL            reduce using rule 62 (operadores_log -> OR .)
    SYMBOL          reduce using rule 62 (operadores_log -> OR .)


state 49

    (17) declaracion -> VAR VARIABLE . final_linea
    (20) declaracion -> VAR VARIABLE . IGUAL tipos_datos final_linea
    (23) declaracion -> VAR VARIABLE . IGUAL comparacion final_linea
    (26) declaracion -> VAR VARIABLE . IGUAL expresion final_linea
    (77) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> VAR VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> VAR VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (104) map -> VAR VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (99) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> VAR VARIABLE . IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> VAR VARIABLE . IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    IGUAL           shift and go to state 73
    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 72
    empty                          shift and go to state 75

state 50

    (29) asignacion -> VARIABLE operadores_asig . tipos_datos final_linea
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    tipos_datos                    shift and go to state 76

state 51

    (30) asignacion -> VARIABLE IGUAL . comparacion final_linea
    (31) asignacion -> VARIABLE IGUAL . expresion final_linea
    (49) operadores_asig -> IGUAL .
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BIGINT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for SYMBOL resolved as shift
    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

  ! NUMBER          [ reduce using rule 49 (operadores_asig -> IGUAL .) ]
  ! STRING          [ reduce using rule 49 (operadores_asig -> IGUAL .) ]
  ! BOOLEAN         [ reduce using rule 49 (operadores_asig -> IGUAL .) ]
  ! BIGINT          [ reduce using rule 49 (operadores_asig -> IGUAL .) ]
  ! NULL            [ reduce using rule 49 (operadores_asig -> IGUAL .) ]
  ! SYMBOL          [ reduce using rule 49 (operadores_asig -> IGUAL .) ]

    comparacion                    shift and go to state 77
    expresion                      shift and go to state 78
    term                           shift and go to state 24
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 52

    (50) operadores_asig -> MASIGUAL .

    NUMBER          reduce using rule 50 (operadores_asig -> MASIGUAL .)
    STRING          reduce using rule 50 (operadores_asig -> MASIGUAL .)
    BOOLEAN         reduce using rule 50 (operadores_asig -> MASIGUAL .)
    BIGINT          reduce using rule 50 (operadores_asig -> MASIGUAL .)
    NULL            reduce using rule 50 (operadores_asig -> MASIGUAL .)
    SYMBOL          reduce using rule 50 (operadores_asig -> MASIGUAL .)


state 53

    (51) operadores_asig -> MENOSIGUAL .

    NUMBER          reduce using rule 51 (operadores_asig -> MENOSIGUAL .)
    STRING          reduce using rule 51 (operadores_asig -> MENOSIGUAL .)
    BOOLEAN         reduce using rule 51 (operadores_asig -> MENOSIGUAL .)
    BIGINT          reduce using rule 51 (operadores_asig -> MENOSIGUAL .)
    NULL            reduce using rule 51 (operadores_asig -> MENOSIGUAL .)
    SYMBOL          reduce using rule 51 (operadores_asig -> MENOSIGUAL .)


state 54

    (52) operadores_asig -> DIVIGUAL .

    NUMBER          reduce using rule 52 (operadores_asig -> DIVIGUAL .)
    STRING          reduce using rule 52 (operadores_asig -> DIVIGUAL .)
    BOOLEAN         reduce using rule 52 (operadores_asig -> DIVIGUAL .)
    BIGINT          reduce using rule 52 (operadores_asig -> DIVIGUAL .)
    NULL            reduce using rule 52 (operadores_asig -> DIVIGUAL .)
    SYMBOL          reduce using rule 52 (operadores_asig -> DIVIGUAL .)


state 55

    (53) operadores_asig -> MODIGUAL .

    NUMBER          reduce using rule 53 (operadores_asig -> MODIGUAL .)
    STRING          reduce using rule 53 (operadores_asig -> MODIGUAL .)
    BOOLEAN         reduce using rule 53 (operadores_asig -> MODIGUAL .)
    BIGINT          reduce using rule 53 (operadores_asig -> MODIGUAL .)
    NULL            reduce using rule 53 (operadores_asig -> MODIGUAL .)
    SYMBOL          reduce using rule 53 (operadores_asig -> MODIGUAL .)


state 56

    (54) operadores_asig -> MULTIGUAL .

    NUMBER          reduce using rule 54 (operadores_asig -> MULTIGUAL .)
    STRING          reduce using rule 54 (operadores_asig -> MULTIGUAL .)
    BOOLEAN         reduce using rule 54 (operadores_asig -> MULTIGUAL .)
    BIGINT          reduce using rule 54 (operadores_asig -> MULTIGUAL .)
    NULL            reduce using rule 54 (operadores_asig -> MULTIGUAL .)
    SYMBOL          reduce using rule 54 (operadores_asig -> MULTIGUAL .)


state 57

    (18) declaracion -> LET VARIABLE . final_linea
    (21) declaracion -> LET VARIABLE . IGUAL tipos_datos final_linea
    (24) declaracion -> LET VARIABLE . IGUAL comparacion final_linea
    (27) declaracion -> LET VARIABLE . IGUAL expresion final_linea
    (82) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (92) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> LET VARIABLE . IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> LET VARIABLE . IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> LET VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    IGUAL           shift and go to state 80
    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 79
    empty                          shift and go to state 75

state 58

    (19) declaracion -> CONST VARIABLE . final_linea
    (22) declaracion -> CONST VARIABLE . IGUAL tipos_datos final_linea
    (25) declaracion -> CONST VARIABLE . IGUAL comparacion final_linea
    (28) declaracion -> CONST VARIABLE . IGUAL expresion final_linea
    (105) map -> CONST VARIABLE . IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    IGUAL           shift and go to state 82
    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 81
    empty                          shift and go to state 75

state 59

    (66) funcion -> FUNCTION VARIABLE . IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> FUNCTION VARIABLE . IZQPAREN DERPAREN IZQLLAVE js DERLLAVE

    IZQPAREN        shift and go to state 83


state 60

    (42) factor -> IZQPAREN expresion . DERPAREN
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term

    DERPAREN        shift and go to state 84
    MAS             shift and go to state 37
    MENOS           shift and go to state 38


state 61

    (40) factor -> VARIABLE .

    MULT            reduce using rule 40 (factor -> VARIABLE .)
    DIV             reduce using rule 40 (factor -> VARIABLE .)
    DERPAREN        reduce using rule 40 (factor -> VARIABLE .)
    MAS             reduce using rule 40 (factor -> VARIABLE .)
    MENOS           reduce using rule 40 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 40 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 40 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 40 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 40 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 40 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 40 (factor -> VARIABLE .)
    AND             reduce using rule 40 (factor -> VARIABLE .)
    OR              reduce using rule 40 (factor -> VARIABLE .)
    VAR             reduce using rule 40 (factor -> VARIABLE .)
    LET             reduce using rule 40 (factor -> VARIABLE .)
    CONST           reduce using rule 40 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 40 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 40 (factor -> VARIABLE .)
    IF              reduce using rule 40 (factor -> VARIABLE .)
    SWITCH          reduce using rule 40 (factor -> VARIABLE .)
    WHILE           reduce using rule 40 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 40 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 40 (factor -> VARIABLE .)
    NUMBER          reduce using rule 40 (factor -> VARIABLE .)
    STRING          reduce using rule 40 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 40 (factor -> VARIABLE .)
    BIGINT          reduce using rule 40 (factor -> VARIABLE .)
    NULL            reduce using rule 40 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 40 (factor -> VARIABLE .)
    $end            reduce using rule 40 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 40 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 40 (factor -> VARIABLE .)
    BREAK           reduce using rule 40 (factor -> VARIABLE .)


state 62

    (37) term -> term MULT . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    factor                         shift and go to state 85
    tipos_datos                    shift and go to state 21

state 63

    (38) term -> term DIV . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    factor                         shift and go to state 86
    tipos_datos                    shift and go to state 21

state 64

    (68) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> IF IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    comparacion                    shift and go to state 87
    expresion                      shift and go to state 88
    term                           shift and go to state 24
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 65

    (71) switch -> SWITCH IZQPAREN . VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    VARIABLE        shift and go to state 89


state 66

    (76) while -> WHILE IZQPAREN . comparacion DERPAREN IZQLLAVE js DERLLAVE
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    comparacion                    shift and go to state 90
    expresion                      shift and go to state 88
    term                           shift and go to state 24
    factor                         shift and go to state 30
    tipos_datos                    shift and go to state 21

state 67

    (106) mapSet -> MAPLOWER PUNTO . SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    SET             shift and go to state 91


state 68

    (32) expresion -> expresion MAS term .
    (37) term -> term . MULT factor
    (38) term -> term . DIV factor

    MAS             reduce using rule 32 (expresion -> expresion MAS term .)
    MENOS           reduce using rule 32 (expresion -> expresion MAS term .)
    MAYORQUE        reduce using rule 32 (expresion -> expresion MAS term .)
    MENORQUE        reduce using rule 32 (expresion -> expresion MAS term .)
    MAYORIGUALQUE   reduce using rule 32 (expresion -> expresion MAS term .)
    MENORIGUALQUE   reduce using rule 32 (expresion -> expresion MAS term .)
    NOIGUALQUE      reduce using rule 32 (expresion -> expresion MAS term .)
    IGUALIGUAL      reduce using rule 32 (expresion -> expresion MAS term .)
    AND             reduce using rule 32 (expresion -> expresion MAS term .)
    OR              reduce using rule 32 (expresion -> expresion MAS term .)
    VAR             reduce using rule 32 (expresion -> expresion MAS term .)
    LET             reduce using rule 32 (expresion -> expresion MAS term .)
    CONST           reduce using rule 32 (expresion -> expresion MAS term .)
    VARIABLE        reduce using rule 32 (expresion -> expresion MAS term .)
    FUNCTION        reduce using rule 32 (expresion -> expresion MAS term .)
    IF              reduce using rule 32 (expresion -> expresion MAS term .)
    SWITCH          reduce using rule 32 (expresion -> expresion MAS term .)
    WHILE           reduce using rule 32 (expresion -> expresion MAS term .)
    MAPLOWER        reduce using rule 32 (expresion -> expresion MAS term .)
    IZQPAREN        reduce using rule 32 (expresion -> expresion MAS term .)
    NUMBER          reduce using rule 32 (expresion -> expresion MAS term .)
    STRING          reduce using rule 32 (expresion -> expresion MAS term .)
    BOOLEAN         reduce using rule 32 (expresion -> expresion MAS term .)
    BIGINT          reduce using rule 32 (expresion -> expresion MAS term .)
    NULL            reduce using rule 32 (expresion -> expresion MAS term .)
    SYMBOL          reduce using rule 32 (expresion -> expresion MAS term .)
    $end            reduce using rule 32 (expresion -> expresion MAS term .)
    DERLLAVE        reduce using rule 32 (expresion -> expresion MAS term .)
    DERPAREN        reduce using rule 32 (expresion -> expresion MAS term .)
    FINALDELINEA    reduce using rule 32 (expresion -> expresion MAS term .)
    BREAK           reduce using rule 32 (expresion -> expresion MAS term .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63


state 69

    (33) expresion -> expresion MENOS term .
    (37) term -> term . MULT factor
    (38) term -> term . DIV factor

    MAS             reduce using rule 33 (expresion -> expresion MENOS term .)
    MENOS           reduce using rule 33 (expresion -> expresion MENOS term .)
    MAYORQUE        reduce using rule 33 (expresion -> expresion MENOS term .)
    MENORQUE        reduce using rule 33 (expresion -> expresion MENOS term .)
    MAYORIGUALQUE   reduce using rule 33 (expresion -> expresion MENOS term .)
    MENORIGUALQUE   reduce using rule 33 (expresion -> expresion MENOS term .)
    NOIGUALQUE      reduce using rule 33 (expresion -> expresion MENOS term .)
    IGUALIGUAL      reduce using rule 33 (expresion -> expresion MENOS term .)
    AND             reduce using rule 33 (expresion -> expresion MENOS term .)
    OR              reduce using rule 33 (expresion -> expresion MENOS term .)
    VAR             reduce using rule 33 (expresion -> expresion MENOS term .)
    LET             reduce using rule 33 (expresion -> expresion MENOS term .)
    CONST           reduce using rule 33 (expresion -> expresion MENOS term .)
    VARIABLE        reduce using rule 33 (expresion -> expresion MENOS term .)
    FUNCTION        reduce using rule 33 (expresion -> expresion MENOS term .)
    IF              reduce using rule 33 (expresion -> expresion MENOS term .)
    SWITCH          reduce using rule 33 (expresion -> expresion MENOS term .)
    WHILE           reduce using rule 33 (expresion -> expresion MENOS term .)
    MAPLOWER        reduce using rule 33 (expresion -> expresion MENOS term .)
    IZQPAREN        reduce using rule 33 (expresion -> expresion MENOS term .)
    NUMBER          reduce using rule 33 (expresion -> expresion MENOS term .)
    STRING          reduce using rule 33 (expresion -> expresion MENOS term .)
    BOOLEAN         reduce using rule 33 (expresion -> expresion MENOS term .)
    BIGINT          reduce using rule 33 (expresion -> expresion MENOS term .)
    NULL            reduce using rule 33 (expresion -> expresion MENOS term .)
    SYMBOL          reduce using rule 33 (expresion -> expresion MENOS term .)
    $end            reduce using rule 33 (expresion -> expresion MENOS term .)
    DERLLAVE        reduce using rule 33 (expresion -> expresion MENOS term .)
    DERPAREN        reduce using rule 33 (expresion -> expresion MENOS term .)
    FINALDELINEA    reduce using rule 33 (expresion -> expresion MENOS term .)
    BREAK           reduce using rule 33 (expresion -> expresion MENOS term .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63


state 70

    (34) comparacion -> expresion operadores_comp term .
    (37) term -> term . MULT factor
    (38) term -> term . DIV factor

    VAR             reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    LET             reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    CONST           reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    VARIABLE        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    FUNCTION        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    IF              reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    SWITCH          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    WHILE           reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    MAPLOWER        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    IZQPAREN        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    NUMBER          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    STRING          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    BOOLEAN         reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    BIGINT          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    NULL            reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    SYMBOL          reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    $end            reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    DERLLAVE        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    FINALDELINEA    reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    BREAK           reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    DERPAREN        reduce using rule 34 (comparacion -> expresion operadores_comp term .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63


state 71

    (35) logica -> expresion operadores_log term .
    (37) term -> term . MULT factor
    (38) term -> term . DIV factor

    VAR             reduce using rule 35 (logica -> expresion operadores_log term .)
    LET             reduce using rule 35 (logica -> expresion operadores_log term .)
    CONST           reduce using rule 35 (logica -> expresion operadores_log term .)
    VARIABLE        reduce using rule 35 (logica -> expresion operadores_log term .)
    FUNCTION        reduce using rule 35 (logica -> expresion operadores_log term .)
    IF              reduce using rule 35 (logica -> expresion operadores_log term .)
    SWITCH          reduce using rule 35 (logica -> expresion operadores_log term .)
    WHILE           reduce using rule 35 (logica -> expresion operadores_log term .)
    MAPLOWER        reduce using rule 35 (logica -> expresion operadores_log term .)
    IZQPAREN        reduce using rule 35 (logica -> expresion operadores_log term .)
    NUMBER          reduce using rule 35 (logica -> expresion operadores_log term .)
    STRING          reduce using rule 35 (logica -> expresion operadores_log term .)
    BOOLEAN         reduce using rule 35 (logica -> expresion operadores_log term .)
    BIGINT          reduce using rule 35 (logica -> expresion operadores_log term .)
    NULL            reduce using rule 35 (logica -> expresion operadores_log term .)
    SYMBOL          reduce using rule 35 (logica -> expresion operadores_log term .)
    $end            reduce using rule 35 (logica -> expresion operadores_log term .)
    DERLLAVE        reduce using rule 35 (logica -> expresion operadores_log term .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63


state 72

    (17) declaracion -> VAR VARIABLE final_linea .

    VAR             reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    LET             reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    CONST           reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    VARIABLE        reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    FUNCTION        reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    IF              reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    SWITCH          reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    WHILE           reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    MAPLOWER        reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    IZQPAREN        reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    NUMBER          reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    STRING          reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    BOOLEAN         reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    BIGINT          reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    NULL            reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    SYMBOL          reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    $end            reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)
    DERLLAVE        reduce using rule 17 (declaracion -> VAR VARIABLE final_linea .)


state 73

    (20) declaracion -> VAR VARIABLE IGUAL . tipos_datos final_linea
    (23) declaracion -> VAR VARIABLE IGUAL . comparacion final_linea
    (26) declaracion -> VAR VARIABLE IGUAL . expresion final_linea
    (77) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> VAR VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> VAR VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (104) map -> VAR VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (99) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> VAR VARIABLE IGUAL . VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> VAR VARIABLE IGUAL . VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN

    IZQCORCHETE     shift and go to state 96
    NEW             shift and go to state 97
    VARIABLE        shift and go to state 92
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    IZQPAREN        shift and go to state 23

    tipos_datos                    shift and go to state 93
    comparacion                    shift and go to state 94
    expresion                      shift and go to state 95
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 74

    (63) final_linea -> FINALDELINEA .

    VAR             reduce using rule 63 (final_linea -> FINALDELINEA .)
    LET             reduce using rule 63 (final_linea -> FINALDELINEA .)
    CONST           reduce using rule 63 (final_linea -> FINALDELINEA .)
    VARIABLE        reduce using rule 63 (final_linea -> FINALDELINEA .)
    FUNCTION        reduce using rule 63 (final_linea -> FINALDELINEA .)
    IF              reduce using rule 63 (final_linea -> FINALDELINEA .)
    SWITCH          reduce using rule 63 (final_linea -> FINALDELINEA .)
    WHILE           reduce using rule 63 (final_linea -> FINALDELINEA .)
    MAPLOWER        reduce using rule 63 (final_linea -> FINALDELINEA .)
    IZQPAREN        reduce using rule 63 (final_linea -> FINALDELINEA .)
    NUMBER          reduce using rule 63 (final_linea -> FINALDELINEA .)
    STRING          reduce using rule 63 (final_linea -> FINALDELINEA .)
    BOOLEAN         reduce using rule 63 (final_linea -> FINALDELINEA .)
    BIGINT          reduce using rule 63 (final_linea -> FINALDELINEA .)
    NULL            reduce using rule 63 (final_linea -> FINALDELINEA .)
    SYMBOL          reduce using rule 63 (final_linea -> FINALDELINEA .)
    $end            reduce using rule 63 (final_linea -> FINALDELINEA .)
    DERLLAVE        reduce using rule 63 (final_linea -> FINALDELINEA .)
    BREAK           reduce using rule 63 (final_linea -> FINALDELINEA .)


state 75

    (64) final_linea -> empty .

    VAR             reduce using rule 64 (final_linea -> empty .)
    LET             reduce using rule 64 (final_linea -> empty .)
    CONST           reduce using rule 64 (final_linea -> empty .)
    VARIABLE        reduce using rule 64 (final_linea -> empty .)
    FUNCTION        reduce using rule 64 (final_linea -> empty .)
    IF              reduce using rule 64 (final_linea -> empty .)
    SWITCH          reduce using rule 64 (final_linea -> empty .)
    WHILE           reduce using rule 64 (final_linea -> empty .)
    MAPLOWER        reduce using rule 64 (final_linea -> empty .)
    IZQPAREN        reduce using rule 64 (final_linea -> empty .)
    NUMBER          reduce using rule 64 (final_linea -> empty .)
    STRING          reduce using rule 64 (final_linea -> empty .)
    BOOLEAN         reduce using rule 64 (final_linea -> empty .)
    BIGINT          reduce using rule 64 (final_linea -> empty .)
    NULL            reduce using rule 64 (final_linea -> empty .)
    SYMBOL          reduce using rule 64 (final_linea -> empty .)
    $end            reduce using rule 64 (final_linea -> empty .)
    DERLLAVE        reduce using rule 64 (final_linea -> empty .)
    BREAK           reduce using rule 64 (final_linea -> empty .)


state 76

    (29) asignacion -> VARIABLE operadores_asig tipos_datos . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 98
    empty                          shift and go to state 75

state 77

    (30) asignacion -> VARIABLE IGUAL comparacion . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 99
    empty                          shift and go to state 75

state 78

    (31) asignacion -> VARIABLE IGUAL expresion . final_linea
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (55) operadores_comp -> . MAYORQUE
    (56) operadores_comp -> . MENORQUE
    (57) operadores_comp -> . MAYORIGUALQUE
    (58) operadores_comp -> . MENORIGUALQUE
    (59) operadores_comp -> . NOIGUALQUE
    (60) operadores_comp -> . IGUALIGUAL
    (65) empty -> .

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    FINALDELINEA    shift and go to state 74
    MAYORQUE        shift and go to state 41
    MENORQUE        shift and go to state 42
    MAYORIGUALQUE   shift and go to state 43
    MENORIGUALQUE   shift and go to state 44
    NOIGUALQUE      shift and go to state 45
    IGUALIGUAL      shift and go to state 46
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)
    BREAK           reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 100
    operadores_comp                shift and go to state 39
    empty                          shift and go to state 75

state 79

    (18) declaracion -> LET VARIABLE final_linea .

    VAR             reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    LET             reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    CONST           reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    VARIABLE        reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    FUNCTION        reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    IF              reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    SWITCH          reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    WHILE           reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    MAPLOWER        reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    IZQPAREN        reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    NUMBER          reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    STRING          reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    BOOLEAN         reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    BIGINT          reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    NULL            reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    SYMBOL          reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    $end            reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)
    DERLLAVE        reduce using rule 18 (declaracion -> LET VARIABLE final_linea .)


state 80

    (21) declaracion -> LET VARIABLE IGUAL . tipos_datos final_linea
    (24) declaracion -> LET VARIABLE IGUAL . comparacion final_linea
    (27) declaracion -> LET VARIABLE IGUAL . expresion final_linea
    (82) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE FINALDELINEA
    (92) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> LET VARIABLE IGUAL . NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> LET VARIABLE IGUAL . IZQCORCHETE DERCORCHETE
    (103) map -> LET VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN

    IZQCORCHETE     shift and go to state 104
    NEW             shift and go to state 105
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23

    tipos_datos                    shift and go to state 101
    comparacion                    shift and go to state 102
    expresion                      shift and go to state 103
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 81

    (19) declaracion -> CONST VARIABLE final_linea .

    VAR             reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    LET             reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    CONST           reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    VARIABLE        reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    FUNCTION        reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    IF              reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    SWITCH          reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    WHILE           reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    MAPLOWER        reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    IZQPAREN        reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    NUMBER          reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    STRING          reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    BOOLEAN         reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    BIGINT          reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    NULL            reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    SYMBOL          reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    $end            reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)
    DERLLAVE        reduce using rule 19 (declaracion -> CONST VARIABLE final_linea .)


state 82

    (22) declaracion -> CONST VARIABLE IGUAL . tipos_datos final_linea
    (25) declaracion -> CONST VARIABLE IGUAL . comparacion final_linea
    (28) declaracion -> CONST VARIABLE IGUAL . expresion final_linea
    (105) map -> CONST VARIABLE IGUAL . NEW MAP IZQPAREN DERPAREN final_linea
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL
    (34) comparacion -> . expresion operadores_comp term
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN

    NEW             shift and go to state 109
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35
    VARIABLE        shift and go to state 61
    IZQPAREN        shift and go to state 23

    tipos_datos                    shift and go to state 106
    comparacion                    shift and go to state 107
    expresion                      shift and go to state 108
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 83

    (66) funcion -> FUNCTION VARIABLE IZQPAREN . VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> FUNCTION VARIABLE IZQPAREN . DERPAREN IZQLLAVE js DERLLAVE

    VARIABLE        shift and go to state 110
    DERPAREN        shift and go to state 111


state 84

    (42) factor -> IZQPAREN expresion DERPAREN .

    MULT            reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    DIV             reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    MAS             reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    MENOS           reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORQUE        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    MENORQUE        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    MAYORIGUALQUE   reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    MENORIGUALQUE   reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    NOIGUALQUE      reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    IGUALIGUAL      reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    AND             reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    OR              reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    VAR             reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    LET             reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    CONST           reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    VARIABLE        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    FUNCTION        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    IF              reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    SWITCH          reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    WHILE           reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    MAPLOWER        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    IZQPAREN        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    NUMBER          reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    STRING          reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    BOOLEAN         reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    BIGINT          reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    NULL            reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    SYMBOL          reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    $end            reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    DERLLAVE        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    DERPAREN        reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    FINALDELINEA    reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)
    BREAK           reduce using rule 42 (factor -> IZQPAREN expresion DERPAREN .)


state 85

    (37) term -> term MULT factor .

    MULT            reduce using rule 37 (term -> term MULT factor .)
    DIV             reduce using rule 37 (term -> term MULT factor .)
    MAS             reduce using rule 37 (term -> term MULT factor .)
    MENOS           reduce using rule 37 (term -> term MULT factor .)
    MAYORQUE        reduce using rule 37 (term -> term MULT factor .)
    MENORQUE        reduce using rule 37 (term -> term MULT factor .)
    MAYORIGUALQUE   reduce using rule 37 (term -> term MULT factor .)
    MENORIGUALQUE   reduce using rule 37 (term -> term MULT factor .)
    NOIGUALQUE      reduce using rule 37 (term -> term MULT factor .)
    IGUALIGUAL      reduce using rule 37 (term -> term MULT factor .)
    AND             reduce using rule 37 (term -> term MULT factor .)
    OR              reduce using rule 37 (term -> term MULT factor .)
    VAR             reduce using rule 37 (term -> term MULT factor .)
    LET             reduce using rule 37 (term -> term MULT factor .)
    CONST           reduce using rule 37 (term -> term MULT factor .)
    VARIABLE        reduce using rule 37 (term -> term MULT factor .)
    FUNCTION        reduce using rule 37 (term -> term MULT factor .)
    IF              reduce using rule 37 (term -> term MULT factor .)
    SWITCH          reduce using rule 37 (term -> term MULT factor .)
    WHILE           reduce using rule 37 (term -> term MULT factor .)
    MAPLOWER        reduce using rule 37 (term -> term MULT factor .)
    IZQPAREN        reduce using rule 37 (term -> term MULT factor .)
    NUMBER          reduce using rule 37 (term -> term MULT factor .)
    STRING          reduce using rule 37 (term -> term MULT factor .)
    BOOLEAN         reduce using rule 37 (term -> term MULT factor .)
    BIGINT          reduce using rule 37 (term -> term MULT factor .)
    NULL            reduce using rule 37 (term -> term MULT factor .)
    SYMBOL          reduce using rule 37 (term -> term MULT factor .)
    $end            reduce using rule 37 (term -> term MULT factor .)
    DERLLAVE        reduce using rule 37 (term -> term MULT factor .)
    DERPAREN        reduce using rule 37 (term -> term MULT factor .)
    FINALDELINEA    reduce using rule 37 (term -> term MULT factor .)
    BREAK           reduce using rule 37 (term -> term MULT factor .)


state 86

    (38) term -> term DIV factor .

    MULT            reduce using rule 38 (term -> term DIV factor .)
    DIV             reduce using rule 38 (term -> term DIV factor .)
    MAS             reduce using rule 38 (term -> term DIV factor .)
    MENOS           reduce using rule 38 (term -> term DIV factor .)
    MAYORQUE        reduce using rule 38 (term -> term DIV factor .)
    MENORQUE        reduce using rule 38 (term -> term DIV factor .)
    MAYORIGUALQUE   reduce using rule 38 (term -> term DIV factor .)
    MENORIGUALQUE   reduce using rule 38 (term -> term DIV factor .)
    NOIGUALQUE      reduce using rule 38 (term -> term DIV factor .)
    IGUALIGUAL      reduce using rule 38 (term -> term DIV factor .)
    AND             reduce using rule 38 (term -> term DIV factor .)
    OR              reduce using rule 38 (term -> term DIV factor .)
    VAR             reduce using rule 38 (term -> term DIV factor .)
    LET             reduce using rule 38 (term -> term DIV factor .)
    CONST           reduce using rule 38 (term -> term DIV factor .)
    VARIABLE        reduce using rule 38 (term -> term DIV factor .)
    FUNCTION        reduce using rule 38 (term -> term DIV factor .)
    IF              reduce using rule 38 (term -> term DIV factor .)
    SWITCH          reduce using rule 38 (term -> term DIV factor .)
    WHILE           reduce using rule 38 (term -> term DIV factor .)
    MAPLOWER        reduce using rule 38 (term -> term DIV factor .)
    IZQPAREN        reduce using rule 38 (term -> term DIV factor .)
    NUMBER          reduce using rule 38 (term -> term DIV factor .)
    STRING          reduce using rule 38 (term -> term DIV factor .)
    BOOLEAN         reduce using rule 38 (term -> term DIV factor .)
    BIGINT          reduce using rule 38 (term -> term DIV factor .)
    NULL            reduce using rule 38 (term -> term DIV factor .)
    SYMBOL          reduce using rule 38 (term -> term DIV factor .)
    $end            reduce using rule 38 (term -> term DIV factor .)
    DERLLAVE        reduce using rule 38 (term -> term DIV factor .)
    DERPAREN        reduce using rule 38 (term -> term DIV factor .)
    FINALDELINEA    reduce using rule 38 (term -> term DIV factor .)
    BREAK           reduce using rule 38 (term -> term DIV factor .)


state 87

    (68) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> IF IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 112


state 88

    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (55) operadores_comp -> . MAYORQUE
    (56) operadores_comp -> . MENORQUE
    (57) operadores_comp -> . MAYORIGUALQUE
    (58) operadores_comp -> . MENORIGUALQUE
    (59) operadores_comp -> . NOIGUALQUE
    (60) operadores_comp -> . IGUALIGUAL

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MAYORQUE        shift and go to state 41
    MENORQUE        shift and go to state 42
    MAYORIGUALQUE   shift and go to state 43
    MENORIGUALQUE   shift and go to state 44
    NOIGUALQUE      shift and go to state 45
    IGUALIGUAL      shift and go to state 46

    operadores_comp                shift and go to state 39

state 89

    (71) switch -> SWITCH IZQPAREN VARIABLE . DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    DERPAREN        shift and go to state 113


state 90

    (76) while -> WHILE IZQPAREN comparacion . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 114


state 91

    (106) mapSet -> MAPLOWER PUNTO SET . IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea

    IZQPAREN        shift and go to state 115


state 92

    (99) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> VAR VARIABLE IGUAL VARIABLE . PUNTO POP IZQPAREN DERPAREN
    (101) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> VAR VARIABLE IGUAL VARIABLE . PUNTO PUSH IZQPAREN lista DERPAREN
    (40) factor -> VARIABLE .

    PUNTO           shift and go to state 116
    MULT            reduce using rule 40 (factor -> VARIABLE .)
    DIV             reduce using rule 40 (factor -> VARIABLE .)
    MAS             reduce using rule 40 (factor -> VARIABLE .)
    MENOS           reduce using rule 40 (factor -> VARIABLE .)
    FINALDELINEA    reduce using rule 40 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 40 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 40 (factor -> VARIABLE .)
    MAYORIGUALQUE   reduce using rule 40 (factor -> VARIABLE .)
    MENORIGUALQUE   reduce using rule 40 (factor -> VARIABLE .)
    NOIGUALQUE      reduce using rule 40 (factor -> VARIABLE .)
    IGUALIGUAL      reduce using rule 40 (factor -> VARIABLE .)
    VAR             reduce using rule 40 (factor -> VARIABLE .)
    LET             reduce using rule 40 (factor -> VARIABLE .)
    CONST           reduce using rule 40 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 40 (factor -> VARIABLE .)
    FUNCTION        reduce using rule 40 (factor -> VARIABLE .)
    IF              reduce using rule 40 (factor -> VARIABLE .)
    SWITCH          reduce using rule 40 (factor -> VARIABLE .)
    WHILE           reduce using rule 40 (factor -> VARIABLE .)
    MAPLOWER        reduce using rule 40 (factor -> VARIABLE .)
    IZQPAREN        reduce using rule 40 (factor -> VARIABLE .)
    NUMBER          reduce using rule 40 (factor -> VARIABLE .)
    STRING          reduce using rule 40 (factor -> VARIABLE .)
    BOOLEAN         reduce using rule 40 (factor -> VARIABLE .)
    BIGINT          reduce using rule 40 (factor -> VARIABLE .)
    NULL            reduce using rule 40 (factor -> VARIABLE .)
    SYMBOL          reduce using rule 40 (factor -> VARIABLE .)
    $end            reduce using rule 40 (factor -> VARIABLE .)
    DERLLAVE        reduce using rule 40 (factor -> VARIABLE .)


state 93

    (20) declaracion -> VAR VARIABLE IGUAL tipos_datos . final_linea
    (41) factor -> tipos_datos .
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
  ! reduce/reduce conflict for VAR resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 41 (factor -> tipos_datos .)
    MULT            reduce using rule 41 (factor -> tipos_datos .)
    DIV             reduce using rule 41 (factor -> tipos_datos .)
    MAS             reduce using rule 41 (factor -> tipos_datos .)
    MENOS           reduce using rule 41 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 41 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 41 (factor -> tipos_datos .)
    VAR             reduce using rule 41 (factor -> tipos_datos .)
    LET             reduce using rule 41 (factor -> tipos_datos .)
    CONST           reduce using rule 41 (factor -> tipos_datos .)
    VARIABLE        reduce using rule 41 (factor -> tipos_datos .)
    FUNCTION        reduce using rule 41 (factor -> tipos_datos .)
    IF              reduce using rule 41 (factor -> tipos_datos .)
    SWITCH          reduce using rule 41 (factor -> tipos_datos .)
    WHILE           reduce using rule 41 (factor -> tipos_datos .)
    MAPLOWER        reduce using rule 41 (factor -> tipos_datos .)
    IZQPAREN        reduce using rule 41 (factor -> tipos_datos .)
    NUMBER          reduce using rule 41 (factor -> tipos_datos .)
    STRING          reduce using rule 41 (factor -> tipos_datos .)
    BOOLEAN         reduce using rule 41 (factor -> tipos_datos .)
    BIGINT          reduce using rule 41 (factor -> tipos_datos .)
    NULL            reduce using rule 41 (factor -> tipos_datos .)
    SYMBOL          reduce using rule 41 (factor -> tipos_datos .)
    $end            reduce using rule 41 (factor -> tipos_datos .)
    DERLLAVE        reduce using rule 41 (factor -> tipos_datos .)
    FINALDELINEA    shift and go to state 74

  ! FINALDELINEA    [ reduce using rule 41 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 65 (empty -> .) ]
  ! LET             [ reduce using rule 65 (empty -> .) ]
  ! CONST           [ reduce using rule 65 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 65 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 65 (empty -> .) ]
  ! IF              [ reduce using rule 65 (empty -> .) ]
  ! SWITCH          [ reduce using rule 65 (empty -> .) ]
  ! WHILE           [ reduce using rule 65 (empty -> .) ]
  ! MAPLOWER        [ reduce using rule 65 (empty -> .) ]
  ! IZQPAREN        [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! STRING          [ reduce using rule 65 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 65 (empty -> .) ]
  ! BIGINT          [ reduce using rule 65 (empty -> .) ]
  ! NULL            [ reduce using rule 65 (empty -> .) ]
  ! SYMBOL          [ reduce using rule 65 (empty -> .) ]
  ! $end            [ reduce using rule 65 (empty -> .) ]
  ! DERLLAVE        [ reduce using rule 65 (empty -> .) ]

    final_linea                    shift and go to state 117
    empty                          shift and go to state 75

state 94

    (23) declaracion -> VAR VARIABLE IGUAL comparacion . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 118
    empty                          shift and go to state 75

state 95

    (26) declaracion -> VAR VARIABLE IGUAL expresion . final_linea
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (55) operadores_comp -> . MAYORQUE
    (56) operadores_comp -> . MENORQUE
    (57) operadores_comp -> . MAYORIGUALQUE
    (58) operadores_comp -> . MENORIGUALQUE
    (59) operadores_comp -> . NOIGUALQUE
    (60) operadores_comp -> . IGUALIGUAL
    (65) empty -> .

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    FINALDELINEA    shift and go to state 74
    MAYORQUE        shift and go to state 41
    MENORQUE        shift and go to state 42
    MAYORIGUALQUE   shift and go to state 43
    MENORIGUALQUE   shift and go to state 44
    NOIGUALQUE      shift and go to state 45
    IGUALIGUAL      shift and go to state 46
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 119
    operadores_comp                shift and go to state 39
    empty                          shift and go to state 75

state 96

    (77) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (81) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (87) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (91) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (97) lista -> . lista COMA lista
    (98) lista -> . tipos_datos
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 121
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    lista                          shift and go to state 120
    tipos_datos                    shift and go to state 122

state 97

    (78) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (88) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (89) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> VAR VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (104) map -> VAR VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    ARRAY           shift and go to state 123
    MAP             shift and go to state 124


state 98

    (29) asignacion -> VARIABLE operadores_asig tipos_datos final_linea .

    VAR             reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    LET             reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    CONST           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    VARIABLE        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    FUNCTION        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    IF              reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    SWITCH          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    WHILE           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    MAPLOWER        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    IZQPAREN        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    NUMBER          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    STRING          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    BOOLEAN         reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    BIGINT          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    NULL            reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    SYMBOL          reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    $end            reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    DERLLAVE        reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)
    BREAK           reduce using rule 29 (asignacion -> VARIABLE operadores_asig tipos_datos final_linea .)


state 99

    (30) asignacion -> VARIABLE IGUAL comparacion final_linea .

    VAR             reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    LET             reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    CONST           reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    VARIABLE        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    FUNCTION        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    IF              reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    SWITCH          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    WHILE           reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    MAPLOWER        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    IZQPAREN        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    NUMBER          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    STRING          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    BOOLEAN         reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    BIGINT          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    NULL            reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    SYMBOL          reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    $end            reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    DERLLAVE        reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)
    BREAK           reduce using rule 30 (asignacion -> VARIABLE IGUAL comparacion final_linea .)


state 100

    (31) asignacion -> VARIABLE IGUAL expresion final_linea .

    VAR             reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    LET             reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    CONST           reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    FUNCTION        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    IF              reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    SWITCH          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    WHILE           reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    MAPLOWER        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    IZQPAREN        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    NUMBER          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    STRING          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    BOOLEAN         reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    BIGINT          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    NULL            reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    SYMBOL          reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    $end            reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    DERLLAVE        reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)
    BREAK           reduce using rule 31 (asignacion -> VARIABLE IGUAL expresion final_linea .)


state 101

    (21) declaracion -> LET VARIABLE IGUAL tipos_datos . final_linea
    (41) factor -> tipos_datos .
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
  ! reduce/reduce conflict for VAR resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 41 (factor -> tipos_datos .)
    MULT            reduce using rule 41 (factor -> tipos_datos .)
    DIV             reduce using rule 41 (factor -> tipos_datos .)
    MAS             reduce using rule 41 (factor -> tipos_datos .)
    MENOS           reduce using rule 41 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 41 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 41 (factor -> tipos_datos .)
    VAR             reduce using rule 41 (factor -> tipos_datos .)
    LET             reduce using rule 41 (factor -> tipos_datos .)
    CONST           reduce using rule 41 (factor -> tipos_datos .)
    VARIABLE        reduce using rule 41 (factor -> tipos_datos .)
    FUNCTION        reduce using rule 41 (factor -> tipos_datos .)
    IF              reduce using rule 41 (factor -> tipos_datos .)
    SWITCH          reduce using rule 41 (factor -> tipos_datos .)
    WHILE           reduce using rule 41 (factor -> tipos_datos .)
    MAPLOWER        reduce using rule 41 (factor -> tipos_datos .)
    IZQPAREN        reduce using rule 41 (factor -> tipos_datos .)
    NUMBER          reduce using rule 41 (factor -> tipos_datos .)
    STRING          reduce using rule 41 (factor -> tipos_datos .)
    BOOLEAN         reduce using rule 41 (factor -> tipos_datos .)
    BIGINT          reduce using rule 41 (factor -> tipos_datos .)
    NULL            reduce using rule 41 (factor -> tipos_datos .)
    SYMBOL          reduce using rule 41 (factor -> tipos_datos .)
    $end            reduce using rule 41 (factor -> tipos_datos .)
    DERLLAVE        reduce using rule 41 (factor -> tipos_datos .)
    FINALDELINEA    shift and go to state 74

  ! FINALDELINEA    [ reduce using rule 41 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 65 (empty -> .) ]
  ! LET             [ reduce using rule 65 (empty -> .) ]
  ! CONST           [ reduce using rule 65 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 65 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 65 (empty -> .) ]
  ! IF              [ reduce using rule 65 (empty -> .) ]
  ! SWITCH          [ reduce using rule 65 (empty -> .) ]
  ! WHILE           [ reduce using rule 65 (empty -> .) ]
  ! MAPLOWER        [ reduce using rule 65 (empty -> .) ]
  ! IZQPAREN        [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! STRING          [ reduce using rule 65 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 65 (empty -> .) ]
  ! BIGINT          [ reduce using rule 65 (empty -> .) ]
  ! NULL            [ reduce using rule 65 (empty -> .) ]
  ! SYMBOL          [ reduce using rule 65 (empty -> .) ]
  ! $end            [ reduce using rule 65 (empty -> .) ]
  ! DERLLAVE        [ reduce using rule 65 (empty -> .) ]

    final_linea                    shift and go to state 125
    empty                          shift and go to state 75

state 102

    (24) declaracion -> LET VARIABLE IGUAL comparacion . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 126
    empty                          shift and go to state 75

state 103

    (27) declaracion -> LET VARIABLE IGUAL expresion . final_linea
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (55) operadores_comp -> . MAYORQUE
    (56) operadores_comp -> . MENORQUE
    (57) operadores_comp -> . MAYORIGUALQUE
    (58) operadores_comp -> . MENORIGUALQUE
    (59) operadores_comp -> . NOIGUALQUE
    (60) operadores_comp -> . IGUALIGUAL
    (65) empty -> .

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    FINALDELINEA    shift and go to state 74
    MAYORQUE        shift and go to state 41
    MENORQUE        shift and go to state 42
    MAYORIGUALQUE   shift and go to state 43
    MENORIGUALQUE   shift and go to state 44
    NOIGUALQUE      shift and go to state 45
    IGUALIGUAL      shift and go to state 46
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 127
    operadores_comp                shift and go to state 39
    empty                          shift and go to state 75

state 104

    (82) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE FINALDELINEA
    (86) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE FINALDELINEA
    (92) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . lista DERCORCHETE
    (96) arreglo -> LET VARIABLE IGUAL IZQCORCHETE . DERCORCHETE
    (97) lista -> . lista COMA lista
    (98) lista -> . tipos_datos
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    DERCORCHETE     shift and go to state 129
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    lista                          shift and go to state 128
    tipos_datos                    shift and go to state 122

state 105

    (83) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (93) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN DERPAREN
    (94) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> LET VARIABLE IGUAL NEW . ARRAY IZQPAREN lista DERPAREN
    (103) map -> LET VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    ARRAY           shift and go to state 130
    MAP             shift and go to state 131


state 106

    (22) declaracion -> CONST VARIABLE IGUAL tipos_datos . final_linea
    (41) factor -> tipos_datos .
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

  ! shift/reduce conflict for FINALDELINEA resolved as shift
  ! reduce/reduce conflict for VAR resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for LET resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for CONST resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for IF resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for SWITCH resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for WHILE resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for MAPLOWER resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for IZQPAREN resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for NUMBER resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for STRING resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for BIGINT resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for NULL resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for SYMBOL resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for $end resolved using rule 41 (factor -> tipos_datos .)
  ! reduce/reduce conflict for DERLLAVE resolved using rule 41 (factor -> tipos_datos .)
    MULT            reduce using rule 41 (factor -> tipos_datos .)
    DIV             reduce using rule 41 (factor -> tipos_datos .)
    MAS             reduce using rule 41 (factor -> tipos_datos .)
    MENOS           reduce using rule 41 (factor -> tipos_datos .)
    MAYORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MENORQUE        reduce using rule 41 (factor -> tipos_datos .)
    MAYORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    MENORIGUALQUE   reduce using rule 41 (factor -> tipos_datos .)
    NOIGUALQUE      reduce using rule 41 (factor -> tipos_datos .)
    IGUALIGUAL      reduce using rule 41 (factor -> tipos_datos .)
    VAR             reduce using rule 41 (factor -> tipos_datos .)
    LET             reduce using rule 41 (factor -> tipos_datos .)
    CONST           reduce using rule 41 (factor -> tipos_datos .)
    VARIABLE        reduce using rule 41 (factor -> tipos_datos .)
    FUNCTION        reduce using rule 41 (factor -> tipos_datos .)
    IF              reduce using rule 41 (factor -> tipos_datos .)
    SWITCH          reduce using rule 41 (factor -> tipos_datos .)
    WHILE           reduce using rule 41 (factor -> tipos_datos .)
    MAPLOWER        reduce using rule 41 (factor -> tipos_datos .)
    IZQPAREN        reduce using rule 41 (factor -> tipos_datos .)
    NUMBER          reduce using rule 41 (factor -> tipos_datos .)
    STRING          reduce using rule 41 (factor -> tipos_datos .)
    BOOLEAN         reduce using rule 41 (factor -> tipos_datos .)
    BIGINT          reduce using rule 41 (factor -> tipos_datos .)
    NULL            reduce using rule 41 (factor -> tipos_datos .)
    SYMBOL          reduce using rule 41 (factor -> tipos_datos .)
    $end            reduce using rule 41 (factor -> tipos_datos .)
    DERLLAVE        reduce using rule 41 (factor -> tipos_datos .)
    FINALDELINEA    shift and go to state 74

  ! FINALDELINEA    [ reduce using rule 41 (factor -> tipos_datos .) ]
  ! VAR             [ reduce using rule 65 (empty -> .) ]
  ! LET             [ reduce using rule 65 (empty -> .) ]
  ! CONST           [ reduce using rule 65 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 65 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 65 (empty -> .) ]
  ! IF              [ reduce using rule 65 (empty -> .) ]
  ! SWITCH          [ reduce using rule 65 (empty -> .) ]
  ! WHILE           [ reduce using rule 65 (empty -> .) ]
  ! MAPLOWER        [ reduce using rule 65 (empty -> .) ]
  ! IZQPAREN        [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! STRING          [ reduce using rule 65 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 65 (empty -> .) ]
  ! BIGINT          [ reduce using rule 65 (empty -> .) ]
  ! NULL            [ reduce using rule 65 (empty -> .) ]
  ! SYMBOL          [ reduce using rule 65 (empty -> .) ]
  ! $end            [ reduce using rule 65 (empty -> .) ]
  ! DERLLAVE        [ reduce using rule 65 (empty -> .) ]

    final_linea                    shift and go to state 132
    empty                          shift and go to state 75

state 107

    (25) declaracion -> CONST VARIABLE IGUAL comparacion . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 133
    empty                          shift and go to state 75

state 108

    (28) declaracion -> CONST VARIABLE IGUAL expresion . final_linea
    (34) comparacion -> expresion . operadores_comp term
    (32) expresion -> expresion . MAS term
    (33) expresion -> expresion . MENOS term
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (55) operadores_comp -> . MAYORQUE
    (56) operadores_comp -> . MENORQUE
    (57) operadores_comp -> . MAYORIGUALQUE
    (58) operadores_comp -> . MENORIGUALQUE
    (59) operadores_comp -> . NOIGUALQUE
    (60) operadores_comp -> . IGUALIGUAL
    (65) empty -> .

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    FINALDELINEA    shift and go to state 74
    MAYORQUE        shift and go to state 41
    MENORQUE        shift and go to state 42
    MAYORIGUALQUE   shift and go to state 43
    MENORIGUALQUE   shift and go to state 44
    NOIGUALQUE      shift and go to state 45
    IGUALIGUAL      shift and go to state 46
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 134
    operadores_comp                shift and go to state 39
    empty                          shift and go to state 75

state 109

    (105) map -> CONST VARIABLE IGUAL NEW . MAP IZQPAREN DERPAREN final_linea

    MAP             shift and go to state 135


state 110

    (66) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE . DERPAREN IZQLLAVE js DERLLAVE

    DERPAREN        shift and go to state 136


state 111

    (67) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 137


state 112

    (68) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE
    (69) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE if
    (70) if -> IF IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 138


state 113

    (71) switch -> SWITCH IZQPAREN VARIABLE DERPAREN . IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE

    IZQLLAVE        shift and go to state 139


state 114

    (76) while -> WHILE IZQPAREN comparacion DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 140


state 115

    (106) mapSet -> MAPLOWER PUNTO SET IZQPAREN . tipos_datos COMA tipos_datos DERPAREN final_linea
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    tipos_datos                    shift and go to state 141

state 116

    (99) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO . POP IZQPAREN DERPAREN
    (101) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> VAR VARIABLE IGUAL VARIABLE PUNTO . PUSH IZQPAREN lista DERPAREN

    POP             shift and go to state 142
    PUSH            shift and go to state 143


state 117

    (20) declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .

    VAR             reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    LET             reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    CONST           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    VARIABLE        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    FUNCTION        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    IF              reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    SWITCH          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    WHILE           reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    MAPLOWER        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    IZQPAREN        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    NUMBER          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    STRING          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    BOOLEAN         reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    BIGINT          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    NULL            reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    SYMBOL          reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    $end            reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)
    DERLLAVE        reduce using rule 20 (declaracion -> VAR VARIABLE IGUAL tipos_datos final_linea .)


state 118

    (23) declaracion -> VAR VARIABLE IGUAL comparacion final_linea .

    VAR             reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    LET             reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    CONST           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    VARIABLE        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    FUNCTION        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    IF              reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    SWITCH          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    WHILE           reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    MAPLOWER        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    IZQPAREN        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    NUMBER          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    STRING          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    BOOLEAN         reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    BIGINT          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    NULL            reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    SYMBOL          reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    $end            reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)
    DERLLAVE        reduce using rule 23 (declaracion -> VAR VARIABLE IGUAL comparacion final_linea .)


state 119

    (26) declaracion -> VAR VARIABLE IGUAL expresion final_linea .

    VAR             reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    LET             reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    CONST           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    VARIABLE        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    FUNCTION        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    IF              reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    SWITCH          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    WHILE           reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    MAPLOWER        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    IZQPAREN        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    NUMBER          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    STRING          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    BOOLEAN         reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    BIGINT          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    NULL            reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    SYMBOL          reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    $end            reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)
    DERLLAVE        reduce using rule 26 (declaracion -> VAR VARIABLE IGUAL expresion final_linea .)


state 120

    (77) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (87) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (97) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 144
    COMA            shift and go to state 145


state 121

    (81) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (91) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 146
    VAR             reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VARIABLE        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    STRING          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BOOLEAN         reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BIGINT          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NULL            reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SYMBOL          reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 91 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 122

    (98) lista -> tipos_datos .

    DERCORCHETE     reduce using rule 98 (lista -> tipos_datos .)
    COMA            reduce using rule 98 (lista -> tipos_datos .)
    DERPAREN        reduce using rule 98 (lista -> tipos_datos .)


state 123

    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (88) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (89) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (90) arreglo -> VAR VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 147


state 124

    (104) map -> VAR VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 148


state 125

    (21) declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .

    VAR             reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    LET             reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    CONST           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    VARIABLE        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    FUNCTION        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    IF              reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    SWITCH          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    WHILE           reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    MAPLOWER        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    IZQPAREN        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    NUMBER          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    STRING          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    BOOLEAN         reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    BIGINT          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    NULL            reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    SYMBOL          reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    $end            reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)
    DERLLAVE        reduce using rule 21 (declaracion -> LET VARIABLE IGUAL tipos_datos final_linea .)


state 126

    (24) declaracion -> LET VARIABLE IGUAL comparacion final_linea .

    VAR             reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    LET             reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    CONST           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    VARIABLE        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    FUNCTION        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    IF              reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    SWITCH          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    WHILE           reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    MAPLOWER        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    IZQPAREN        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    NUMBER          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    STRING          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    BOOLEAN         reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    BIGINT          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    NULL            reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    SYMBOL          reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    $end            reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)
    DERLLAVE        reduce using rule 24 (declaracion -> LET VARIABLE IGUAL comparacion final_linea .)


state 127

    (27) declaracion -> LET VARIABLE IGUAL expresion final_linea .

    VAR             reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    LET             reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    CONST           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    VARIABLE        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    FUNCTION        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    IF              reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    SWITCH          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    WHILE           reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    MAPLOWER        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    IZQPAREN        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    NUMBER          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    STRING          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    BOOLEAN         reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    BIGINT          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    NULL            reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    SYMBOL          reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    $end            reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)
    DERLLAVE        reduce using rule 27 (declaracion -> LET VARIABLE IGUAL expresion final_linea .)


state 128

    (82) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE FINALDELINEA
    (92) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista . DERCORCHETE
    (97) lista -> lista . COMA lista

    DERCORCHETE     shift and go to state 149
    COMA            shift and go to state 145


state 129

    (86) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE . FINALDELINEA
    (96) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .

    FINALDELINEA    shift and go to state 150
    VAR             reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    LET             reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    CONST           reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    VARIABLE        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    FUNCTION        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IF              reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SWITCH          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    WHILE           reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    MAPLOWER        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    IZQPAREN        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NUMBER          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    STRING          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BOOLEAN         reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    BIGINT          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    NULL            reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    SYMBOL          reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    $end            reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)
    DERLLAVE        reduce using rule 96 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE .)


state 130

    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN FINALDELINEA
    (93) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN DERPAREN
    (94) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN NUMBER DERPAREN
    (95) arreglo -> LET VARIABLE IGUAL NEW ARRAY . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 151


state 131

    (103) map -> LET VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 152


state 132

    (22) declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .

    VAR             reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    LET             reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    CONST           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    VARIABLE        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    FUNCTION        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    IF              reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    SWITCH          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    WHILE           reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    MAPLOWER        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    IZQPAREN        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    NUMBER          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    STRING          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    BOOLEAN         reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    BIGINT          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    NULL            reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    SYMBOL          reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    $end            reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)
    DERLLAVE        reduce using rule 22 (declaracion -> CONST VARIABLE IGUAL tipos_datos final_linea .)


state 133

    (25) declaracion -> CONST VARIABLE IGUAL comparacion final_linea .

    VAR             reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    LET             reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    CONST           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    VARIABLE        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    FUNCTION        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    IF              reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    SWITCH          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    WHILE           reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    MAPLOWER        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    IZQPAREN        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    NUMBER          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    STRING          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    BOOLEAN         reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    BIGINT          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    NULL            reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    SYMBOL          reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    $end            reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)
    DERLLAVE        reduce using rule 25 (declaracion -> CONST VARIABLE IGUAL comparacion final_linea .)


state 134

    (28) declaracion -> CONST VARIABLE IGUAL expresion final_linea .

    VAR             reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    LET             reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    CONST           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    VARIABLE        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    FUNCTION        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    IF              reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    SWITCH          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    WHILE           reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    MAPLOWER        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    IZQPAREN        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    NUMBER          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    STRING          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    BOOLEAN         reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    BIGINT          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    NULL            reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    SYMBOL          reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    $end            reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)
    DERLLAVE        reduce using rule 28 (declaracion -> CONST VARIABLE IGUAL expresion final_linea .)


state 135

    (105) map -> CONST VARIABLE IGUAL NEW MAP . IZQPAREN DERPAREN final_linea

    IZQPAREN        shift and go to state 153


state 136

    (66) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 154


state 137

    (67) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    js                             shift and go to state 155
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 138

    (68) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (69) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE if
    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    comparacion                    shift and go to state 7
    js                             shift and go to state 156
    if                             shift and go to state 11
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 139

    (71) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE . ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (74) ncasos -> . casos
    (75) ncasos -> . casos ncasos
    (72) casos -> . CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (73) casos -> . CASE tipos_datos DOSPUNTOS

    CASE            shift and go to state 159

    ncasos                         shift and go to state 157
    casos                          shift and go to state 158

state 140

    (76) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    comparacion                    shift and go to state 7
    js                             shift and go to state 160
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 141

    (106) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos . COMA tipos_datos DERPAREN final_linea

    COMA            shift and go to state 161


state 142

    (99) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP . IZQPAREN DERPAREN

    IZQPAREN        shift and go to state 162


state 143

    (101) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH . IZQPAREN lista DERPAREN

    IZQPAREN        shift and go to state 163


state 144

    (77) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (87) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 164
    VAR             reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    STRING          reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BOOLEAN         reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BIGINT          reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NULL            reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SYMBOL          reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 87 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 145

    (97) lista -> lista COMA . lista
    (97) lista -> . lista COMA lista
    (98) lista -> . tipos_datos
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    lista                          shift and go to state 165
    tipos_datos                    shift and go to state 122

state 146

    (81) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 81 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 147

    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (79) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (88) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (89) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (90) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (97) lista -> . lista COMA lista
    (98) lista -> . tipos_datos
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 166
    NUMBER          shift and go to state 167
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    lista                          shift and go to state 168
    tipos_datos                    shift and go to state 122

state 148

    (104) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 169


state 149

    (82) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE . FINALDELINEA
    (92) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .

    FINALDELINEA    shift and go to state 170
    VAR             reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    LET             reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    CONST           reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    VARIABLE        reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    FUNCTION        reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IF              reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SWITCH          reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    WHILE           reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    MAPLOWER        reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    IZQPAREN        reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NUMBER          reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    STRING          reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BOOLEAN         reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    BIGINT          reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    NULL            reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    SYMBOL          reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    $end            reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)
    DERLLAVE        reduce using rule 92 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE .)


state 150

    (86) arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 86 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA .)


state 151

    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN FINALDELINEA
    (84) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN FINALDELINEA
    (93) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . DERPAREN
    (94) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . NUMBER DERPAREN
    (95) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN . lista DERPAREN
    (97) lista -> . lista COMA lista
    (98) lista -> . tipos_datos
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    DERPAREN        shift and go to state 171
    NUMBER          shift and go to state 172
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    lista                          shift and go to state 173
    tipos_datos                    shift and go to state 122

state 152

    (103) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 174


state 153

    (105) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN . DERPAREN final_linea

    DERPAREN        shift and go to state 175


state 154

    (66) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    js                             shift and go to state 176
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 155

    (67) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 177


state 156

    (68) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE
    (69) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE if
    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE ELSE IZQLLAVE js DERLLAVE

    DERLLAVE        shift and go to state 178


state 157

    (71) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos . DEFAULT DOSPUNTOS js DERLLAVE

    DEFAULT         shift and go to state 179


state 158

    (74) ncasos -> casos .
    (75) ncasos -> casos . ncasos
    (74) ncasos -> . casos
    (75) ncasos -> . casos ncasos
    (72) casos -> . CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (73) casos -> . CASE tipos_datos DOSPUNTOS

    DEFAULT         reduce using rule 74 (ncasos -> casos .)
    CASE            shift and go to state 159

    casos                          shift and go to state 158
    ncasos                         shift and go to state 180

state 159

    (72) casos -> CASE . tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA
    (73) casos -> CASE . tipos_datos DOSPUNTOS
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    tipos_datos                    shift and go to state 181

state 160

    (76) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 182


state 161

    (106) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA . tipos_datos DERPAREN final_linea
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    tipos_datos                    shift and go to state 183

state 162

    (99) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN FINALDELINEA
    (100) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN . DERPAREN

    DERPAREN        shift and go to state 184


state 163

    (101) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN FINALDELINEA
    (102) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN . lista DERPAREN
    (97) lista -> . lista COMA lista
    (98) lista -> . tipos_datos
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    lista                          shift and go to state 185
    tipos_datos                    shift and go to state 122

state 164

    (77) arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 77 (arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 165

    (97) lista -> lista COMA lista .
    (97) lista -> lista . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    DERCORCHETE     reduce using rule 97 (lista -> lista COMA lista .)
    DERPAREN        reduce using rule 97 (lista -> lista COMA lista .)
    COMA            shift and go to state 145

  ! COMA            [ reduce using rule 97 (lista -> lista COMA lista .) ]


state 166

    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (88) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 186
    VAR             reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    STRING          reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NULL            reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 88 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 167

    (79) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (89) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (43) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 187
    COMA            reduce using rule 43 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 43 (tipos_datos -> NUMBER .) ]


state 168

    (80) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (90) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (97) lista -> lista . COMA lista

    DERPAREN        shift and go to state 188
    COMA            shift and go to state 145


state 169

    (104) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 189
    empty                          shift and go to state 75

state 170

    (82) arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .

    VAR             reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    LET             reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    CONST           reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    VARIABLE        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    FUNCTION        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IF              reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SWITCH          reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    WHILE           reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    MAPLOWER        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    IZQPAREN        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NUMBER          reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    STRING          reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BOOLEAN         reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    BIGINT          reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    NULL            reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    SYMBOL          reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    $end            reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)
    DERLLAVE        reduce using rule 82 (arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA .)


state 171

    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN . FINALDELINEA
    (93) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 190
    VAR             reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    LET             reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    CONST           reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IF              reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    WHILE           reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    STRING          reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    NULL            reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    $end            reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 93 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN .)


state 172

    (84) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN FINALDELINEA
    (94) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER . DERPAREN
    (43) tipos_datos -> NUMBER .

  ! shift/reduce conflict for DERPAREN resolved as shift
    DERPAREN        shift and go to state 191
    COMA            reduce using rule 43 (tipos_datos -> NUMBER .)

  ! DERPAREN        [ reduce using rule 43 (tipos_datos -> NUMBER .) ]


state 173

    (85) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN FINALDELINEA
    (95) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista . DERPAREN
    (97) lista -> lista . COMA lista

    DERPAREN        shift and go to state 192
    COMA            shift and go to state 145


state 174

    (103) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 193
    empty                          shift and go to state 75

state 175

    (105) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 194
    empty                          shift and go to state 75

state 176

    (66) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 195


state 177

    (67) funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 67 (funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE .)


state 178

    (68) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .
    (69) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . if
    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE . ELSE IZQLLAVE js DERLLAVE
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE

  ! shift/reduce conflict for IF resolved as shift
    VAR             reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    ELSE            shift and go to state 197
    IF              shift and go to state 26

  ! IF              [ reduce using rule 68 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .) ]

    if                             shift and go to state 196

state 179

    (71) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT . DOSPUNTOS js DERLLAVE

    DOSPUNTOS       shift and go to state 198


state 180

    (75) ncasos -> casos ncasos .

    DEFAULT         reduce using rule 75 (ncasos -> casos ncasos .)


state 181

    (72) casos -> CASE tipos_datos . DOSPUNTOS asignacion BREAK FINALDELINEA
    (73) casos -> CASE tipos_datos . DOSPUNTOS

    DOSPUNTOS       shift and go to state 199


state 182

    (76) while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 76 (while -> WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE .)


state 183

    (106) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos . DERPAREN final_linea

    DERPAREN        shift and go to state 200


state 184

    (99) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN . FINALDELINEA
    (100) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .

    FINALDELINEA    shift and go to state 201
    VAR             reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    LET             reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    CONST           reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    VARIABLE        reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    FUNCTION        reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IF              reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    SWITCH          reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    WHILE           reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    MAPLOWER        reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    IZQPAREN        reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    NUMBER          reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    STRING          reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    BOOLEAN         reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    BIGINT          reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    NULL            reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    SYMBOL          reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    $end            reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)
    DERLLAVE        reduce using rule 100 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN .)


state 185

    (101) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN FINALDELINEA
    (102) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista . DERPAREN
    (97) lista -> lista . COMA lista

    DERPAREN        shift and go to state 202
    COMA            shift and go to state 145


state 186

    (78) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    STRING          reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NULL            reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 78 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 187

    (79) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (89) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 203
    VAR             reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VARIABLE        reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    STRING          reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BOOLEAN         reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BIGINT          reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NULL            reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SYMBOL          reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 89 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 188

    (80) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (90) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 204
    VAR             reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 90 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 189

    (104) map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 104 (map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 190

    (83) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    STRING          reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    NULL            reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 83 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA .)


state 191

    (84) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN . FINALDELINEA
    (94) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .

    FINALDELINEA    shift and go to state 205
    VAR             reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    LET             reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    CONST           reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    VARIABLE        reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    FUNCTION        reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IF              reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SWITCH          reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    WHILE           reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    MAPLOWER        reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    IZQPAREN        reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NUMBER          reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    STRING          reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BOOLEAN         reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    BIGINT          reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    NULL            reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    SYMBOL          reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    $end            reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)
    DERLLAVE        reduce using rule 94 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN .)


state 192

    (85) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN . FINALDELINEA
    (95) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 206
    VAR             reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    LET             reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IF              reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    $end            reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 95 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN .)


state 193

    (103) map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 103 (map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 194

    (105) map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .

    VAR             reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    LET             reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    CONST           reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    VARIABLE        reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    FUNCTION        reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IF              reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SWITCH          reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    WHILE           reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    MAPLOWER        reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    IZQPAREN        reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NUMBER          reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    STRING          reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BOOLEAN         reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    BIGINT          reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    NULL            reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    SYMBOL          reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    $end            reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)
    DERLLAVE        reduce using rule 105 (map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea .)


state 195

    (66) funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 66 (funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE .)


state 196

    (69) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .

    VAR             reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    LET             reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    CONST           reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    VARIABLE        reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    FUNCTION        reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IF              reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SWITCH          reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    WHILE           reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    MAPLOWER        reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    IZQPAREN        reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NUMBER          reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    STRING          reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BOOLEAN         reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    BIGINT          reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    NULL            reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    SYMBOL          reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    $end            reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)
    DERLLAVE        reduce using rule 69 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if .)


state 197

    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE . IZQLLAVE js DERLLAVE

    IZQLLAVE        shift and go to state 207


state 198

    (71) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    js                             shift and go to state 208
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    comparacion                    shift and go to state 7
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 199

    (72) casos -> CASE tipos_datos DOSPUNTOS . asignacion BREAK FINALDELINEA
    (73) casos -> CASE tipos_datos DOSPUNTOS .
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea

    CASE            reduce using rule 73 (casos -> CASE tipos_datos DOSPUNTOS .)
    DEFAULT         reduce using rule 73 (casos -> CASE tipos_datos DOSPUNTOS .)
    VARIABLE        shift and go to state 210

    asignacion                     shift and go to state 209

state 200

    (106) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN . final_linea
    (63) final_linea -> . FINALDELINEA
    (64) final_linea -> . empty
    (65) empty -> .

    FINALDELINEA    shift and go to state 74
    VAR             reduce using rule 65 (empty -> .)
    LET             reduce using rule 65 (empty -> .)
    CONST           reduce using rule 65 (empty -> .)
    VARIABLE        reduce using rule 65 (empty -> .)
    FUNCTION        reduce using rule 65 (empty -> .)
    IF              reduce using rule 65 (empty -> .)
    SWITCH          reduce using rule 65 (empty -> .)
    WHILE           reduce using rule 65 (empty -> .)
    MAPLOWER        reduce using rule 65 (empty -> .)
    IZQPAREN        reduce using rule 65 (empty -> .)
    NUMBER          reduce using rule 65 (empty -> .)
    STRING          reduce using rule 65 (empty -> .)
    BOOLEAN         reduce using rule 65 (empty -> .)
    BIGINT          reduce using rule 65 (empty -> .)
    NULL            reduce using rule 65 (empty -> .)
    SYMBOL          reduce using rule 65 (empty -> .)
    $end            reduce using rule 65 (empty -> .)
    DERLLAVE        reduce using rule 65 (empty -> .)

    final_linea                    shift and go to state 211
    empty                          shift and go to state 75

state 201

    (99) pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .

    VAR             reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    LET             reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    CONST           reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IF              reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    STRING          reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    NULL            reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    $end            reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 99 (pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA .)


state 202

    (101) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN . FINALDELINEA
    (102) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .

    FINALDELINEA    shift and go to state 212
    VAR             reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    LET             reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    CONST           reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    VARIABLE        reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    FUNCTION        reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IF              reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    SWITCH          reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    WHILE           reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    MAPLOWER        reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    IZQPAREN        reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    NUMBER          reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    STRING          reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    BOOLEAN         reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    BIGINT          reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    NULL            reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    SYMBOL          reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    $end            reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)
    DERLLAVE        reduce using rule 102 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN .)


state 203

    (79) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VAR             reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    STRING          reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NULL            reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 79 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 204

    (80) arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    STRING          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NULL            reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 80 (arreglo -> VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 205

    (84) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .

    VAR             reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    LET             reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    CONST           reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IF              reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    STRING          reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    NULL            reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    $end            reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 84 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA .)


state 206

    (85) arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    STRING          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    NULL            reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 85 (arreglo -> LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA .)


state 207

    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE . js DERLLAVE
    (1) js -> . instrucciones
    (2) js -> . instrucciones js
    (3) instrucciones -> . declaracion
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . funcion
    (6) instrucciones -> . expresion
    (7) instrucciones -> . comparacion
    (8) instrucciones -> . logica
    (9) instrucciones -> . arreglo
    (10) instrucciones -> . map
    (11) instrucciones -> . if
    (12) instrucciones -> . switch
    (13) instrucciones -> . while
    (14) instrucciones -> . pop
    (15) instrucciones -> . push
    (16) instrucciones -> . mapSet
    (17) declaracion -> . VAR VARIABLE final_linea
    (18) declaracion -> . LET VARIABLE final_linea
    (19) declaracion -> . CONST VARIABLE final_linea
    (20) declaracion -> . VAR VARIABLE IGUAL tipos_datos final_linea
    (21) declaracion -> . LET VARIABLE IGUAL tipos_datos final_linea
    (22) declaracion -> . CONST VARIABLE IGUAL tipos_datos final_linea
    (23) declaracion -> . VAR VARIABLE IGUAL comparacion final_linea
    (24) declaracion -> . LET VARIABLE IGUAL comparacion final_linea
    (25) declaracion -> . CONST VARIABLE IGUAL comparacion final_linea
    (26) declaracion -> . VAR VARIABLE IGUAL expresion final_linea
    (27) declaracion -> . LET VARIABLE IGUAL expresion final_linea
    (28) declaracion -> . CONST VARIABLE IGUAL expresion final_linea
    (29) asignacion -> . VARIABLE operadores_asig tipos_datos final_linea
    (30) asignacion -> . VARIABLE IGUAL comparacion final_linea
    (31) asignacion -> . VARIABLE IGUAL expresion final_linea
    (66) funcion -> . FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE
    (67) funcion -> . FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE
    (32) expresion -> . expresion MAS term
    (33) expresion -> . expresion MENOS term
    (36) expresion -> . term
    (34) comparacion -> . expresion operadores_comp term
    (35) logica -> . expresion operadores_log term
    (77) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (78) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (79) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (80) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (81) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (82) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE FINALDELINEA
    (83) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN FINALDELINEA
    (84) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN FINALDELINEA
    (85) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN FINALDELINEA
    (86) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE FINALDELINEA
    (87) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (88) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (89) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (90) arreglo -> . VAR VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (91) arreglo -> . VAR VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (92) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE
    (93) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN DERPAREN
    (94) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN NUMBER DERPAREN
    (95) arreglo -> . LET VARIABLE IGUAL NEW ARRAY IZQPAREN lista DERPAREN
    (96) arreglo -> . LET VARIABLE IGUAL IZQCORCHETE DERCORCHETE
    (103) map -> . LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (104) map -> . VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (105) map -> . CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN final_linea
    (68) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (69) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if
    (70) if -> . IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE
    (71) switch -> . SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE
    (76) while -> . WHILE IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE
    (99) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA
    (100) pop -> . VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN
    (101) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA
    (102) push -> . VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN
    (106) mapSet -> . MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea
    (37) term -> . term MULT factor
    (38) term -> . term DIV factor
    (39) term -> . factor
    (40) factor -> . VARIABLE
    (41) factor -> . tipos_datos
    (42) factor -> . IZQPAREN expresion DERPAREN
    (43) tipos_datos -> . NUMBER
    (44) tipos_datos -> . STRING
    (45) tipos_datos -> . BOOLEAN
    (46) tipos_datos -> . BIGINT
    (47) tipos_datos -> . NULL
    (48) tipos_datos -> . SYMBOL

    VAR             shift and go to state 17
    LET             shift and go to state 19
    CONST           shift and go to state 20
    VARIABLE        shift and go to state 18
    FUNCTION        shift and go to state 22
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    WHILE           shift and go to state 28
    MAPLOWER        shift and go to state 29
    IZQPAREN        shift and go to state 23
    NUMBER          shift and go to state 25
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 32
    BIGINT          shift and go to state 33
    NULL            shift and go to state 34
    SYMBOL          shift and go to state 35

    comparacion                    shift and go to state 7
    js                             shift and go to state 213
    instrucciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    funcion                        shift and go to state 5
    expresion                      shift and go to state 6
    logica                         shift and go to state 8
    arreglo                        shift and go to state 9
    map                            shift and go to state 10
    if                             shift and go to state 11
    switch                         shift and go to state 12
    while                          shift and go to state 13
    pop                            shift and go to state 14
    push                           shift and go to state 15
    mapSet                         shift and go to state 16
    tipos_datos                    shift and go to state 21
    term                           shift and go to state 24
    factor                         shift and go to state 30

state 208

    (71) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js . DERLLAVE

    DERLLAVE        shift and go to state 214


state 209

    (72) casos -> CASE tipos_datos DOSPUNTOS asignacion . BREAK FINALDELINEA

    BREAK           shift and go to state 215


state 210

    (29) asignacion -> VARIABLE . operadores_asig tipos_datos final_linea
    (30) asignacion -> VARIABLE . IGUAL comparacion final_linea
    (31) asignacion -> VARIABLE . IGUAL expresion final_linea
    (49) operadores_asig -> . IGUAL
    (50) operadores_asig -> . MASIGUAL
    (51) operadores_asig -> . MENOSIGUAL
    (52) operadores_asig -> . DIVIGUAL
    (53) operadores_asig -> . MODIGUAL
    (54) operadores_asig -> . MULTIGUAL

    IGUAL           shift and go to state 51
    MASIGUAL        shift and go to state 52
    MENOSIGUAL      shift and go to state 53
    DIVIGUAL        shift and go to state 54
    MODIGUAL        shift and go to state 55
    MULTIGUAL       shift and go to state 56

    operadores_asig                shift and go to state 50

state 211

    (106) mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .

    VAR             reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    LET             reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    CONST           reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    VARIABLE        reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    FUNCTION        reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IF              reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SWITCH          reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    WHILE           reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    MAPLOWER        reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    IZQPAREN        reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NUMBER          reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    STRING          reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BOOLEAN         reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    BIGINT          reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    NULL            reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    SYMBOL          reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    $end            reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)
    DERLLAVE        reduce using rule 106 (mapSet -> MAPLOWER PUNTO SET IZQPAREN tipos_datos COMA tipos_datos DERPAREN final_linea .)


state 212

    (101) push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .

    VAR             reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    LET             reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    CONST           reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    VARIABLE        reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    FUNCTION        reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IF              reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SWITCH          reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    WHILE           reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    MAPLOWER        reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    IZQPAREN        reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NUMBER          reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    STRING          reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    BOOLEAN         reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    BIGINT          reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    NULL            reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    SYMBOL          reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    $end            reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)
    DERLLAVE        reduce using rule 101 (push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA .)


state 213

    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js . DERLLAVE

    DERLLAVE        shift and go to state 216


state 214

    (71) switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .

    VAR             reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    LET             reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    CONST           reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    VARIABLE        reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    FUNCTION        reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IF              reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SWITCH          reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    WHILE           reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    MAPLOWER        reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    IZQPAREN        reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NUMBER          reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    STRING          reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BOOLEAN         reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    BIGINT          reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    NULL            reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    SYMBOL          reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    $end            reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)
    DERLLAVE        reduce using rule 71 (switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE .)


state 215

    (72) casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK . FINALDELINEA

    FINALDELINEA    shift and go to state 217


state 216

    (70) if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .

    VAR             reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    LET             reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    CONST           reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    VARIABLE        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    FUNCTION        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IF              reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SWITCH          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    WHILE           reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    MAPLOWER        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    IZQPAREN        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NUMBER          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    STRING          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BOOLEAN         reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    BIGINT          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    NULL            reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    SYMBOL          reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    $end            reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)
    DERLLAVE        reduce using rule 70 (if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE .)


state 217

    (72) casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .

    CASE            reduce using rule 72 (casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .)
    DEFAULT         reduce using rule 72 (casos -> CASE tipos_datos DOSPUNTOS asignacion BREAK FINALDELINEA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NUMBER in state 51 resolved as shift
WARNING: shift/reduce conflict for STRING in state 51 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 51 resolved as shift
WARNING: shift/reduce conflict for BIGINT in state 51 resolved as shift
WARNING: shift/reduce conflict for NULL in state 51 resolved as shift
WARNING: shift/reduce conflict for SYMBOL in state 51 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 93 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 101 resolved as shift
WARNING: shift/reduce conflict for FINALDELINEA in state 106 resolved as shift
WARNING: shift/reduce conflict for COMA in state 165 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 167 resolved as shift
WARNING: shift/reduce conflict for DERPAREN in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 178 resolved as shift
WARNING: reduce/reduce conflict in state 93 resolved using rule (factor -> tipos_datos)
WARNING: rejected rule (empty -> <empty>) in state 93
WARNING: reduce/reduce conflict in state 101 resolved using rule (factor -> tipos_datos)
WARNING: rejected rule (empty -> <empty>) in state 101
WARNING: reduce/reduce conflict in state 106 resolved using rule (factor -> tipos_datos)
WARNING: rejected rule (empty -> <empty>) in state 106
