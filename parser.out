Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAT
    BIGINT
    BOOL
    BOOLEAN
    BREAK
    CASE
    CATCH
    CLASS
    COMA
    CONST
    CONSTRUCTOR
    CONTINUE
    DEBUGGER
    DEFAULT
    DELETE
    DERCORCHETE
    DERLLAVE
    DIVIGUAL
    DO
    ELSE
    EXPORT
    EXTENDS
    FINALDELINEA
    FLOTANTE
    FOR
    FUNCTION
    GET
    IF
    IGUALIGUAL
    IMPLEMENTS
    IMPORT
    INIT
    INTERFACE
    IZQCORCHETE
    IZQLLAVE
    MASIGUAL
    MENOSIGUAL
    MODIGUAL
    MULTIGUAL
    NEW
    NULL
    NUMERO
    OR
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SET
    STRING
    SUPER
    SWITCH
    SYMBOL
    UNDEFINED
    VOID
    WHILE

Grammar

Rule 0     S' -> asignacion
Rule 1     asignacion -> VAR IGUAL VARIABLE
Rule 2     asignacion -> LET IGUAL VARIABLE
Rule 3     expresion -> expresion MAS VARIABLE
Rule 4     expresion -> expresion MAS term
Rule 5     expresion -> expresion MENOS term
Rule 6     expresion -> term
Rule 7     term -> term MULT factor
Rule 8     term -> term DIV factor
Rule 9     term -> factor
Rule 10    factor -> NUMBER
Rule 11    factor -> IZQPAREN expresion DERPAREN
Rule 12    comparacion -> expresion comparador term
Rule 13    comparador -> MAYORQUE
Rule 14    comparador -> MENORQUE
Rule 15    comparador -> MAYORIGUALQUE
Rule 16    comparador -> MENORIGUALQUE
Rule 17    comparador -> NOIGUALQUE

Terminals, with rules where they appear

AND                  : 
AWAT                 : 
BIGINT               : 
BOOL                 : 
BOOLEAN              : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DERCORCHETE          : 
DERLLAVE             : 
DERPAREN             : 11
DIV                  : 8
DIVIGUAL             : 
DO                   : 
ELSE                 : 
EXPORT               : 
EXTENDS              : 
FINALDELINEA         : 
FLOTANTE             : 
FOR                  : 
FUNCTION             : 
GET                  : 
IF                   : 
IGUAL                : 1 2
IGUALIGUAL           : 
IMPLEMENTS           : 
IMPORT               : 
INIT                 : 
INTERFACE            : 
IZQCORCHETE          : 
IZQLLAVE             : 
IZQPAREN             : 11
LET                  : 2
MAS                  : 3 4
MASIGUAL             : 
MAYORIGUALQUE        : 15
MAYORQUE             : 13
MENORIGUALQUE        : 16
MENORQUE             : 14
MENOS                : 5
MENOSIGUAL           : 
MODIGUAL             : 
MULT                 : 7
MULTIGUAL            : 
NEW                  : 
NOIGUALQUE           : 17
NULL                 : 
NUMBER               : 10
NUMERO               : 
OR                   : 
PACKAGE              : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RETURN               : 
SET                  : 
STRING               : 
SUPER                : 
SWITCH               : 
SYMBOL               : 
UNDEFINED            : 
VAR                  : 1
VARIABLE             : 1 2 3
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 0
comparacion          : 
comparador           : 12
expresion            : 3 4 5 11 12
factor               : 7 8 9
term                 : 4 5 6 7 8 12

Parsing method: LALR

state 0

    (0) S' -> . asignacion
    (1) asignacion -> . VAR IGUAL VARIABLE
    (2) asignacion -> . LET IGUAL VARIABLE

    VAR             shift and go to state 2
    LET             shift and go to state 3

    asignacion                     shift and go to state 1

state 1

    (0) S' -> asignacion .



state 2

    (1) asignacion -> VAR . IGUAL VARIABLE

    IGUAL           shift and go to state 4


state 3

    (2) asignacion -> LET . IGUAL VARIABLE

    IGUAL           shift and go to state 5


state 4

    (1) asignacion -> VAR IGUAL . VARIABLE

    VARIABLE        shift and go to state 6


state 5

    (2) asignacion -> LET IGUAL . VARIABLE

    VARIABLE        shift and go to state 7


state 6

    (1) asignacion -> VAR IGUAL VARIABLE .

    $end            reduce using rule 1 (asignacion -> VAR IGUAL VARIABLE .)


state 7

    (2) asignacion -> LET IGUAL VARIABLE .

    $end            reduce using rule 2 (asignacion -> LET IGUAL VARIABLE .)

