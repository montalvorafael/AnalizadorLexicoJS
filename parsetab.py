
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AWAT BIGINT BOOL BOOLEAN BREAK CASE CATCH CLASS COMA CONST CONSTRUCTOR CONTINUE DEBUGGER DEFAULT DELETE DERCORCHETE DERLLAVE DERPAREN DIV DIVIGUAL DO ELSE EXPORT EXTENDS FINALDELINEA FLOTANTE FOR FUNCTION GET IF IGUAL IGUALIGUAL IMPLEMENTS IMPORT INIT INTERFACE IZQCORCHETE IZQLLAVE IZQPAREN LET MAS MASIGUAL MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MENOSIGUAL MODIGUAL MULT MULTIGUAL NEW NOIGUALQUE NULL NUMBER NUMERO OR PACKAGE PRIVATE PROTECTED PUBLIC RETURN SET STRING SUPER SWITCH SYMBOL UNDEFINED VAR VARIABLE VOID WHILEasignacion : VAR IGUAL VARIABLEasignacion : LET IGUAL VARIABLEexpresion : expresion MAS VARIABLEexpresion : expresion MAS termexpresion : expresion MENOS termexpresion : termterm : term MULT factorterm : term DIV factorterm : factorfactor : NUMBERfactor : IZQPAREN expresion DERPARENcomparacion : expresion comparador termcomparador : MAYORQUE\n    | MENORQUE\n    | MAYORIGUALQUE\n    | MENORIGUALQUE\n    | NOIGUALQUE'
    
_lr_action_items = {'VAR':([0,],[2,]),'LET':([0,],[3,]),'$end':([1,6,7,],[0,-1,-2,]),'IGUAL':([2,3,],[4,5,]),'VARIABLE':([4,5,],[6,7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> asignacion","S'",1,None,None,None),
  ('asignacion -> VAR IGUAL VARIABLE','asignacion',3,'p_asignacion_var','sintactico.py',9),
  ('asignacion -> LET IGUAL VARIABLE','asignacion',3,'p_asignacion_let','sintactico.py',13),
  ('expresion -> expresion MAS VARIABLE','expresion',3,'p_expresion','sintactico.py',17),
  ('expresion -> expresion MAS term','expresion',3,'p_expresion_mas','sintactico.py',20),
  ('expresion -> expresion MENOS term','expresion',3,'p_expresion_menos','sintactico.py',24),
  ('expresion -> term','expresion',1,'p_expresion_term','sintactico.py',28),
  ('term -> term MULT factor','term',3,'p_term_mult','sintactico.py',32),
  ('term -> term DIV factor','term',3,'p_term_div','sintactico.py',36),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',40),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',44),
  ('factor -> IZQPAREN expresion DERPAREN','factor',3,'p_factor_expr','sintactico.py',48),
  ('comparacion -> expresion comparador term','comparacion',3,'p_comparacion','sintactico.py',52),
  ('comparador -> MAYORQUE','comparador',1,'p_comparador','sintactico.py',55),
  ('comparador -> MENORQUE','comparador',1,'p_comparador','sintactico.py',56),
  ('comparador -> MAYORIGUALQUE','comparador',1,'p_comparador','sintactico.py',57),
  ('comparador -> MENORIGUALQUE','comparador',1,'p_comparador','sintactico.py',58),
  ('comparador -> NOIGUALQUE','comparador',1,'p_comparador','sintactico.py',59),
]
