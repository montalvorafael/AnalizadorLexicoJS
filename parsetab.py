
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AWAIT BIGINT BOOL BOOLEAN BREAK CASE CATCH CLASS COMA CONST CONSTRUCTOR CONTINUE DEBUGGER DEFAULT DELETE DERCORCHETE DERLLAVE DERPAREN DIV DIVIGUAL DO DOSPUNTOS ELSE EXPORT EXTENDS FINALDELINEA FLOTANTE FOR FUNCTION GET IF IGUAL IGUALIGUAL IMPLEMENTS IMPORT INIT INTERFACE IZQCORCHETE IZQLLAVE IZQPAREN LET MAP MAS MASIGUAL MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MENOSIGUAL MODIGUAL MULT MULTIGUAL NEW NOIGUALQUE NULL NUMBER NUMERO OR PACKAGE POP PRIVATE PROTECTED PUBLIC PUNTO PUSH RETURN SET STRING SUPER SWITCH SYMBOL UNDEFINED VAR VARIABLE VOID WHILEjs : instrucciones\n        | instrucciones jsinstrucciones : declaracionVarSinAsig\n                | declaracionVar\n                | asignacion\n                | funcion\n                | expresion\n                | comparacion\n                | arreglo\n                | map\n                | if\n                | switch\n                | pop\n                | pushdeclaracionVarSinAsig : VAR VARIABLE\n            | LET VARIABLE\n            | CONST VARIABLE\n            | VAR VARIABLE FINALDELINEA\n            | LET VARIABLE FINALDELINEA\n            | CONST VARIABLE FINALDELINEAdeclaracionVar : VAR VARIABLE IGUAL tipo\n            | LET VARIABLE IGUAL tipo\n            | CONST VARIABLE IGUAL tipo\n            | VAR VARIABLE IGUAL tipo FINALDELINEA\n            | LET VARIABLE IGUAL tipo FINALDELINEA\n            | CONST VARIABLE IGUAL tipo FINALDELINEAasignacion : VARIABLE operadoresAsig tipo\n        | VARIABLE operadoresAsig tipo FINALDELINEAoperadoresAsig : IGUAL\n                        | MASIGUAL\n                        | MENOSIGUAL\n                        | DIVIGUAL\n                        | MODIGUALfuncion : FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVEfuncion : FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVEtipo : NUMBER\n                | STRING\n                | BOOLEAN\n                | BIGINT\n                | SYMBOLif : IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE\n        | IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ifif : IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVEswitch : SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVEcasos : CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA\n        | CASE tipo DOSPUNTOSncasos : casos\n        | casos ncasos\n    comparacion : VARIABLE comparador VARIABLE\n            | expresion comparador expresioncomparador : MAYORQUE\n                | MENORQUE\n                | MAYORIGUALQUE\n                | MENORIGUALQUE\n                | NOIGUALQUEarreglo : VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE\n                | LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE lista : lista COMA lista\n                | STRING\n                | SYMBOL\n                | NUMBER\n                | BIGINT\n                | BOOLEANpop : VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEApush : VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEAmap : LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN\n        | LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA\n        | VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN\n        | VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA\n        | CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN\n        | CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEAexpresion : expresion MAS termexpresion : expresion MENOS termexpresion : termterm : term MULT factorterm : term DIV factorterm : factorfactor : NUMBERfactor : IZQPAREN expresion DERPAREN'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,104,105,109,112,115,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,15,15,-56,-57,15,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,15,-64,15,-65,-44,-43,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,104,105,109,112,115,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,17,17,-56,-57,17,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,17,-64,17,-65,-44,-43,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,104,105,109,112,115,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,18,18,-56,-57,18,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,18,-64,18,-65,-44,-43,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,24,25,30,31,32,33,34,35,37,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,69,70,76,79,80,83,90,98,101,104,105,109,112,115,124,125,126,128,129,135,136,137,138,139,141,142,143,145,149,151,153,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,35,43,44,45,-74,-77,-78,-51,-52,-53,-54,-55,-15,62,-16,-17,72,74,-72,-73,-50,-18,75,-27,-36,-37,-38,-39,-40,-49,-19,-20,85,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,16,16,-56,-57,16,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,16,148,-64,16,-65,-44,-43,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,104,105,109,112,115,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,19,19,-56,-57,19,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,19,-64,19,-65,-44,-43,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,104,105,109,112,115,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,22,22,-56,-57,22,-68,-66,-70,-35,22,-69,-67,-71,-34,-42,22,-64,22,-65,-44,-43,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,104,105,109,112,115,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,23,23,-56,-57,23,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,23,-64,23,-65,-44,-43,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,76,77,79,80,81,83,90,98,101,104,105,109,110,112,115,120,122,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,25,-74,-77,-78,25,25,25,-51,-52,-53,-54,-55,-15,57,-29,-30,-31,-32,-33,-16,-17,25,25,25,-72,-73,-50,-18,57,-27,-36,-37,-38,-39,-40,-49,-19,57,-20,57,-79,-75,-76,-21,94,-28,-22,94,-23,-24,-25,-26,25,25,-56,94,-57,25,57,94,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,25,-64,25,-65,-44,-43,]),'IZQPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,43,44,45,47,48,49,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,97,98,100,101,102,104,105,107,108,109,112,115,124,125,126,128,129,135,136,137,138,139,141,143,145,149,151,153,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,20,-74,49,50,-77,-78,20,20,20,-51,-52,-53,-54,-55,-15,-16,-17,67,20,20,20,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,111,-25,113,-26,114,20,20,121,122,-56,-57,20,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,20,-64,20,-65,-44,-43,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,26,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,109,112,124,125,126,128,129,135,136,137,138,139,143,149,151,153,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-2,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,-56,-57,-68,-66,-70,-35,-41,-69,-67,-71,-34,-42,-64,-65,-44,-43,]),'DERLLAVE':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,25,26,35,43,44,51,52,53,54,56,57,58,59,60,61,62,63,65,68,69,70,76,79,80,83,90,98,101,109,112,116,117,124,125,126,127,128,129,135,136,137,138,139,143,146,149,150,151,153,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-74,-77,-78,-2,-15,-16,-17,-72,-73,-50,-18,-27,-36,-37,-38,-39,-40,-49,-19,-20,-79,-75,-76,-21,-28,-22,-23,-24,-25,-26,-56,-57,128,129,-68,-66,-70,138,-35,-41,-69,-67,-71,-34,-42,-64,151,-65,153,-44,-43,]),'MAS':([7,21,24,25,46,51,52,53,68,69,70,73,],[27,-74,-77,-78,27,-72,-73,27,-79,-75,-76,27,]),'MENOS':([7,21,24,25,46,51,52,53,68,69,70,73,],[28,-74,-77,-78,28,-72,-73,28,-79,-75,-76,28,]),'MAYORQUE':([7,16,21,24,25,51,52,68,69,70,72,73,],[30,30,-74,-77,-78,-72,-73,-79,-75,-76,30,30,]),'MENORQUE':([7,16,21,24,25,51,52,68,69,70,72,73,],[31,31,-74,-77,-78,-72,-73,-79,-75,-76,31,31,]),'MAYORIGUALQUE':([7,16,21,24,25,51,52,68,69,70,72,73,],[32,32,-74,-77,-78,-72,-73,-79,-75,-76,32,32,]),'MENORIGUALQUE':([7,16,21,24,25,51,52,68,69,70,72,73,],[33,33,-74,-77,-78,-72,-73,-79,-75,-76,33,33,]),'NOIGUALQUE':([7,16,21,24,25,51,52,68,69,70,72,73,],[34,34,-74,-77,-78,-72,-73,-79,-75,-76,34,34,]),'IGUAL':([16,35,43,44,148,],[38,55,64,66,38,]),'MASIGUAL':([16,148,],[39,39,]),'MENOSIGUAL':([16,148,],[40,40,]),'DIVIGUAL':([16,148,],[41,41,]),'MODIGUAL':([16,148,],[42,42,]),'DERPAREN':([21,24,25,46,51,52,53,62,67,68,69,70,71,74,85,92,93,94,95,96,111,113,114,121,123,134,],[-74,-77,-78,68,-72,-73,-50,-49,86,-79,-75,-76,87,88,103,-59,-60,-61,-62,-63,124,125,126,133,-58,144,]),'MULT':([21,24,25,51,52,68,69,70,],[47,-77,-78,47,47,-79,-75,-76,]),'DIV':([21,24,25,51,52,68,69,70,],[48,-77,-78,48,48,-79,-75,-76,]),'FINALDELINEA':([35,43,44,56,57,58,59,60,61,76,80,83,124,125,126,133,144,152,],[54,63,65,79,-36,-37,-38,-39,-40,90,98,101,135,136,137,143,149,154,]),'STRING':([36,38,39,40,41,42,55,64,66,77,81,110,120,122,],[58,-29,-30,-31,-32,-33,58,58,58,92,92,92,58,92,]),'BOOLEAN':([36,38,39,40,41,42,55,64,66,77,81,110,120,122,],[59,-29,-30,-31,-32,-33,59,59,59,96,96,96,59,96,]),'BIGINT':([36,38,39,40,41,42,55,64,66,77,81,110,120,122,],[60,-29,-30,-31,-32,-33,60,60,60,95,95,95,60,95,]),'SYMBOL':([36,38,39,40,41,42,55,64,66,77,81,110,120,122,],[61,-29,-30,-31,-32,-33,61,61,61,93,93,93,61,93,]),'IZQCORCHETE':([55,64,],[77,81,]),'NEW':([55,64,66,],[78,82,84,]),'BREAK':([56,57,58,59,60,61,79,147,],[-27,-36,-37,-38,-39,-40,-28,152,]),'DOSPUNTOS':([57,58,59,60,61,130,132,],[-36,-37,-38,-39,-40,141,142,]),'PUNTO':([75,],[89,]),'MAP':([78,82,84,],[97,100,102,]),'IZQLLAVE':([86,87,88,103,140,],[104,105,106,115,145,]),'POP':([89,],[107,]),'PUSH':([89,],[108,]),'DERCORCHETE':([91,92,93,94,95,96,99,123,],[109,-59,-60,-61,-62,-63,112,-58,]),'COMA':([91,92,93,94,95,96,99,123,134,],[110,-59,-60,-61,-62,-63,110,110,110,]),'CASE':([106,119,142,154,],[120,120,-46,-45,]),'DEFAULT':([118,119,131,142,154,],[130,-47,-48,-46,-45,]),'ELSE':([129,],[140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'js':([0,2,104,105,115,141,145,],[1,26,116,117,127,146,150,]),'instrucciones':([0,2,104,105,115,141,145,],[2,2,2,2,2,2,2,]),'declaracionVarSinAsig':([0,2,104,105,115,141,145,],[3,3,3,3,3,3,3,]),'declaracionVar':([0,2,104,105,115,141,145,],[4,4,4,4,4,4,4,]),'asignacion':([0,2,104,105,115,141,142,145,],[5,5,5,5,5,5,147,5,]),'funcion':([0,2,104,105,115,141,145,],[6,6,6,6,6,6,6,]),'expresion':([0,2,20,29,49,104,105,115,141,145,],[7,7,46,53,73,7,7,7,7,7,]),'comparacion':([0,2,49,104,105,115,141,145,],[8,8,71,8,8,8,8,8,]),'arreglo':([0,2,104,105,115,141,145,],[9,9,9,9,9,9,9,]),'map':([0,2,104,105,115,141,145,],[10,10,10,10,10,10,10,]),'if':([0,2,104,105,115,129,141,145,],[11,11,11,11,11,139,11,11,]),'switch':([0,2,104,105,115,141,145,],[12,12,12,12,12,12,12,]),'pop':([0,2,104,105,115,141,145,],[13,13,13,13,13,13,13,]),'push':([0,2,104,105,115,141,145,],[14,14,14,14,14,14,14,]),'term':([0,2,20,27,28,29,49,104,105,115,141,145,],[21,21,21,51,52,21,21,21,21,21,21,21,]),'factor':([0,2,20,27,28,29,47,48,49,104,105,115,141,145,],[24,24,24,24,24,24,69,70,24,24,24,24,24,24,]),'comparador':([7,16,72,73,],[29,37,37,29,]),'operadoresAsig':([16,148,],[36,36,]),'tipo':([36,55,64,66,120,],[56,76,80,83,132,]),'lista':([77,81,110,122,],[91,99,123,134,]),'ncasos':([106,119,],[118,131,]),'casos':([106,119,],[119,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> js","S'",1,None,None,None),
  ('js -> instrucciones','js',1,'p_js','sintactico.py',6),
  ('js -> instrucciones js','js',2,'p_js','sintactico.py',7),
  ('instrucciones -> declaracionVarSinAsig','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> declaracionVar','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> expresion','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> arreglo','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> map','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> if','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> switch','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> pop','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> push','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('declaracionVarSinAsig -> VAR VARIABLE','declaracionVarSinAsig',2,'p_declaracionVarSinAsig','sintactico.py',24),
  ('declaracionVarSinAsig -> LET VARIABLE','declaracionVarSinAsig',2,'p_declaracionVarSinAsig','sintactico.py',25),
  ('declaracionVarSinAsig -> CONST VARIABLE','declaracionVarSinAsig',2,'p_declaracionVarSinAsig','sintactico.py',26),
  ('declaracionVarSinAsig -> VAR VARIABLE FINALDELINEA','declaracionVarSinAsig',3,'p_declaracionVarSinAsig','sintactico.py',27),
  ('declaracionVarSinAsig -> LET VARIABLE FINALDELINEA','declaracionVarSinAsig',3,'p_declaracionVarSinAsig','sintactico.py',28),
  ('declaracionVarSinAsig -> CONST VARIABLE FINALDELINEA','declaracionVarSinAsig',3,'p_declaracionVarSinAsig','sintactico.py',29),
  ('declaracionVar -> VAR VARIABLE IGUAL tipo','declaracionVar',4,'p_declaracionVar','sintactico.py',32),
  ('declaracionVar -> LET VARIABLE IGUAL tipo','declaracionVar',4,'p_declaracionVar','sintactico.py',33),
  ('declaracionVar -> CONST VARIABLE IGUAL tipo','declaracionVar',4,'p_declaracionVar','sintactico.py',34),
  ('declaracionVar -> VAR VARIABLE IGUAL tipo FINALDELINEA','declaracionVar',5,'p_declaracionVar','sintactico.py',35),
  ('declaracionVar -> LET VARIABLE IGUAL tipo FINALDELINEA','declaracionVar',5,'p_declaracionVar','sintactico.py',36),
  ('declaracionVar -> CONST VARIABLE IGUAL tipo FINALDELINEA','declaracionVar',5,'p_declaracionVar','sintactico.py',37),
  ('asignacion -> VARIABLE operadoresAsig tipo','asignacion',3,'p_asignacion','sintactico.py',39),
  ('asignacion -> VARIABLE operadoresAsig tipo FINALDELINEA','asignacion',4,'p_asignacion','sintactico.py',40),
  ('operadoresAsig -> IGUAL','operadoresAsig',1,'p_operadoresAsig','sintactico.py',42),
  ('operadoresAsig -> MASIGUAL','operadoresAsig',1,'p_operadoresAsig','sintactico.py',43),
  ('operadoresAsig -> MENOSIGUAL','operadoresAsig',1,'p_operadoresAsig','sintactico.py',44),
  ('operadoresAsig -> DIVIGUAL','operadoresAsig',1,'p_operadoresAsig','sintactico.py',45),
  ('operadoresAsig -> MODIGUAL','operadoresAsig',1,'p_operadoresAsig','sintactico.py',46),
  ('funcion -> FUNCTION VARIABLE IZQPAREN VARIABLE DERPAREN IZQLLAVE js DERLLAVE','funcion',8,'p_funcion_unparametro','sintactico.py',52),
  ('funcion -> FUNCTION VARIABLE IZQPAREN DERPAREN IZQLLAVE js DERLLAVE','funcion',7,'p_funcion_sinparametro','sintactico.py',57),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',61),
  ('tipo -> STRING','tipo',1,'p_tipo','sintactico.py',62),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintactico.py',63),
  ('tipo -> BIGINT','tipo',1,'p_tipo','sintactico.py',64),
  ('tipo -> SYMBOL','tipo',1,'p_tipo','sintactico.py',65),
  ('if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE','if',7,'p_if','sintactico.py',70),
  ('if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE if','if',8,'p_if','sintactico.py',71),
  ('if -> IF IZQPAREN comparacion DERPAREN IZQLLAVE js DERLLAVE ELSE IZQLLAVE js DERLLAVE','if',11,'p_if_else','sintactico.py',74),
  ('switch -> SWITCH IZQPAREN VARIABLE DERPAREN IZQLLAVE ncasos DEFAULT DOSPUNTOS js DERLLAVE','switch',10,'p_switch','sintactico.py',81),
  ('casos -> CASE tipo DOSPUNTOS asignacion BREAK FINALDELINEA','casos',6,'p_casos','sintactico.py',84),
  ('casos -> CASE tipo DOSPUNTOS','casos',3,'p_casos','sintactico.py',85),
  ('ncasos -> casos','ncasos',1,'p_ncasos','sintactico.py',88),
  ('ncasos -> casos ncasos','ncasos',2,'p_ncasos','sintactico.py',89),
  ('comparacion -> VARIABLE comparador VARIABLE','comparacion',3,'p_comparacion','sintactico.py',95),
  ('comparacion -> expresion comparador expresion','comparacion',3,'p_comparacion','sintactico.py',96),
  ('comparador -> MAYORQUE','comparador',1,'p_comparador','sintactico.py',99),
  ('comparador -> MENORQUE','comparador',1,'p_comparador','sintactico.py',100),
  ('comparador -> MAYORIGUALQUE','comparador',1,'p_comparador','sintactico.py',101),
  ('comparador -> MENORIGUALQUE','comparador',1,'p_comparador','sintactico.py',102),
  ('comparador -> NOIGUALQUE','comparador',1,'p_comparador','sintactico.py',103),
  ('arreglo -> VAR VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE','arreglo',6,'p_arreglo','sintactico.py',108),
  ('arreglo -> LET VARIABLE IGUAL IZQCORCHETE lista DERCORCHETE','arreglo',6,'p_arreglo','sintactico.py',109),
  ('lista -> lista COMA lista','lista',3,'p_lista','sintactico.py',112),
  ('lista -> STRING','lista',1,'p_lista','sintactico.py',113),
  ('lista -> SYMBOL','lista',1,'p_lista','sintactico.py',114),
  ('lista -> NUMBER','lista',1,'p_lista','sintactico.py',115),
  ('lista -> BIGINT','lista',1,'p_lista','sintactico.py',116),
  ('lista -> BOOLEAN','lista',1,'p_lista','sintactico.py',117),
  ('pop -> VAR VARIABLE IGUAL VARIABLE PUNTO POP IZQPAREN DERPAREN FINALDELINEA','pop',9,'p_pop','sintactico.py',122),
  ('push -> VAR VARIABLE IGUAL VARIABLE PUNTO PUSH IZQPAREN lista DERPAREN FINALDELINEA','push',10,'p_push','sintactico.py',126),
  ('map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN','map',7,'p_map','sintactico.py',132),
  ('map -> LET VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA','map',8,'p_map','sintactico.py',133),
  ('map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN','map',7,'p_map','sintactico.py',134),
  ('map -> VAR VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA','map',8,'p_map','sintactico.py',135),
  ('map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN','map',7,'p_map','sintactico.py',136),
  ('map -> CONST VARIABLE IGUAL NEW MAP IZQPAREN DERPAREN FINALDELINEA','map',8,'p_map','sintactico.py',137),
  ('expresion -> expresion MAS term','expresion',3,'p_expresion_mas','sintactico.py',141),
  ('expresion -> expresion MENOS term','expresion',3,'p_expresion_menos','sintactico.py',144),
  ('expresion -> term','expresion',1,'p_expresion_term','sintactico.py',147),
  ('term -> term MULT factor','term',3,'p_term_mult','sintactico.py',150),
  ('term -> term DIV factor','term',3,'p_term_div','sintactico.py',153),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',156),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',159),
  ('factor -> IZQPAREN expresion DERPAREN','factor',3,'p_factor_expr','sintactico.py',162),
]
